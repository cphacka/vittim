{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./resources/modules/front-app/src/js/helpers.js","webpack:///./resources/modules/front-app/src/js/store/altrp-page-state-storage/actions.js","webpack:///./resources/modules/front-app/src/js/store/current-user/actions.js","webpack:///./resources/modules/front-app/src/js/store/responses-storage/actions.js"],"names":["_setPrototypeOf","o","p","Object","setPrototypeOf","__proto__","defaultTitle","getRoutes","isSSR","window","SSR","e","iconsManager","setTitle","title","titleElement","document","innerHTML","isEditor","path","location","pathname","includes","parseOptionsFromSettings","string","options","split","_optionsFromData","getDataByPath","extractPathFromString","_","isArray","map","option","value","valuePath","trim","label","isString","labelPath","getMediaQueryByName","screenSettingName","mediaQuery","CONSTANTS","screen","name","getMediaSettingsByName","_screen","getCurrentBreakpoint","currentWidth","getWindowWidth","item","size","Number","width","breakpoint","parseURLTemplate","URLTemplate","object","url","protocol","assign","cloneDeep","currentRouterMatch","getProperty","indexOf","replaceContentWithData","replace","idTemplates","match","forEach","idTemplate","RegExp","getElementById","offsetWidth","renderAssetIcon","asset","props","type","assetType","renderIcon","React","src","renderAsset","isEmpty","dataUrl","rawSVG","File","refImg","fr","FileReader","readAsDataURL","onload","current","result","alt","ref","style","backgroundImage","undefined","parseParamsFromString","context","allowObject","replaceRight","AltrpModel","params","urlParams","lines","line","left","right","isObject","conditionsChecker","conditions","AND","model","dataByPath","length","each","c","conditionChecker","operator","modelField","altrpCompare","setDataByPath","dispatch","oldValue","appStore","getState","altrpPageState","isEqual","isFunction","changePageState","altrpMeta","changeAltrpMeta","currentUser","changeCurrentUserProperty","formId","fieldName","formsStore","get","changeFormFieldValue","pathElements","elementId","updateType","propName","component","getComponentByElementId","join","element","updateSetting","settings","mutate","addSettings","getId","getName","areaName","area","page_areas","find","id","Area","setSetting","currentStorage","getDataFromLocalStorage","set","saveDataToLocalStorage","trueValue","falseValue","_default","altrpCheck","_path","_right","currentModel","currentDataStorage","altrpresponses","altrpPage","queryData","queryString","href","query","getData","getTimeValue","getSettings","getSetting","getObjectByPrefix","prefix","key","mbParseJSON","JSON","parse","leftValue","rightValue","CONDITIONS_OPTIONS","_CONDITIONS_OPTIONS","isElementTopInViewport","top","scrollTop","clientHeight","getTopPosition","offsetTop","offsetParent","defaultValue","now","startOfMonth","Date","startOfYear","getPrevWeekStart","getNextWeekStart","getWeekStart","moment","altrpHelpers","format","date","monthShift","getFullYear","getMonth","yearShift","startOfWeek","weekShift","getDate","firstDayOfWeek","getCurrentStoreState","scrollToElement","scrollbars","container","HTMLElement","scroll","getOffsetTopInElement","Window","scrollTo","parent","body","console","log","behavior","getHTMLElementById","elements","el","elementWrapperRef","toString","getWrapperHTMLElementByElement","today","daystoMonday","isoWeekday","add","subtract","daystoLastMonday","clearEmptyProps","content","modelContext","paths","escapeRegExp","printElements","myWindow","open","write","headContent","bodyContent","HTMLHeadElement","outerHTML","close","head","focus","delay","then","print","elementsToPdf","filename","html2pdf","default","success","Promise","resolve","reject","from","save","dataFromTable","data","headers","querySelectorAll","table","querySelector","ths","th","push","innerText","rows","row","cells","part","header","idx","dataToCSV","toPairs","csvContent","h","stringify","blob","Blob","charset","link","createElement","setAttribute","URL","createObjectURL","appendChild","click","removeChild","dataToXLS","templateName","formData","FormData","append","fetch","method","response","dataToXML","altrpLogin","Resource","route","post","res","status","__status","addResponseData","_token","getAll","changeCurrentUser","routes","routesData","pages","_data","Route","changeAppRoutes","error","altrpLogout","cutString","maxLength","slice","sortOptions","sortDirection","sort","a","b","toLowerCase","reverse","recurseCount","count","array","getAppContext","currentModelData","setProperty","storeWidgetState","widgetId","state","getWidgetState","localStorage","setItem","getItem","scrollbarWidth","scrollDiv","clientWidth","setAltrpIndex","altrpIndex","renderFontLink","font","altrpFontsSet","GOOGLE_FONT","fontUrl","encodeURI","rel","isAltrpTestMode","altrpRandomId","Math","random","substr","generateButtonsArray","pageIndex","pageCount","first_last_buttons_count","middle_buttons_count","buttonsSum","lastButtons","Array","i","middleButtons","floor","keys","isValueMatchMask","mask","every","char","index","getConverter","data_type","ArrayConverter","DataConverter","convertData","converter","isHidden","icon","defaultIcon","className","redirect","linkSettings","frontAppRouter","history","goBack","back","preventDefault","stopPropagation","openInNew","tag","validateEmail","email","test","String","getResponsiveSetting","settingName","currentScreen","elementState","_settingName","setting","suffix","valueReplacement","ms","setTimeout","prepareURLForEmail","origin","parseIDFromYoutubeURL","youtubeURL","startIndex","endIndex","substring","prepareContext","altrpdata","altrpmodel","altrpuser","altrppagestate","altrpmeta","isJSON","JSONString","parseStringValue","getBreadcrumbsItems","breadcrumbsItems","items","currentId","page_id","currentPageId","appRoutes","breadcrumbsClone","idCurrent","parent_page_id","getParent","parentId","altrphelpers","sumFields","sum","this","CHANGE_PAGE_STATE","CLEAR_PAGE_STATE","stateName","stateValue","CHANGE_CURRENT_USER","SET_NOTICE_FOR_USER","SET_USERS_ONLINE","CHANGE_CURRENT_USER_PROPERTY","user","ADD_RESPONSE_DATA","CLEAR_ALL_RESPONSE_DATA"],"mappings":"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","file":"5739.9f4dee4149fb8504ce39.bundle.js","sourcesContent":["export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import CONSTANTS from \"../../../editor/src/js/consts\";\r\nimport AltrpModel from \"../../../editor/src/js/classes/AltrpModel\";\r\nimport Resource from \"../../../editor/src/js/classes/Resource\";\r\nimport { changeCurrentUser } from \"./store/current-user/actions\";\r\nimport { changeCurrentUserProperty } from \"./store/current-user/actions\";\r\nimport { changeAppRoutes } from \"./store/routes/actions\";\r\nimport Route from \"./classes/Route\";\r\nimport { changePageState } from \"./store/altrp-page-state-storage/actions\";\r\nimport { changeAltrpMeta } from \"./store/altrp-meta-storage/actions\";\r\nimport queryString from \"query-string\";\r\nimport AltrpSVG from \"../../../editor/src/js/components/altrp-svg/AltrpSVG\";\r\nimport ArrayConverter from \"./classes/converters/ArrayConverter\";\r\nimport DataConverter from \"./classes/converters/DataConverter\";\r\nimport { changeFormFieldValue } from \"./store/forms-data-storage/actions\";\r\nimport { addResponseData } from \"./store/responses-storage/actions\";\r\nimport {getOffsetTopInElement} from \"./helpers/elements\";\r\nimport Area from \"./classes/Area\";\r\nimport {altrpFontsSet, GOOGLE_FONT} from \"./constants/fonts\";\r\nimport {addSettings} from \"./store/elements-settings/actions\";\r\nimport mutate from \"dot-prop-immutable\";\r\nimport React from \"react\";\r\nimport convertQueryParamsToObject from \"./functions/convert-query-params-to-object\";\r\nimport _CONDITIONS_OPTIONS from \"./constants/CONDITIONS_OPTIONS\";\r\nexport function getRoutes() {\r\n\r\n  return import(/* webpackChunkName: 'Routes' */\"./classes/Routes.js\");\r\n}\r\n\r\nexport function isSSR(){\r\n  try {\r\n    return window.SSR;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n/**\r\n * @return {IconsManager}\r\n * */\r\nexport function iconsManager() {\r\n  return window.iconsManager;\r\n}\r\n\r\n/**\r\n * Устанавливает заголовок страницы на фронтенде\r\n * @param {string} title\r\n */\r\nexport function setTitle(title) {\r\n  let titleElement = document.title;\r\n  if (!defaultTitle) {\r\n    defaultTitle = titleElement.innerHTML;\r\n  }\r\n  if (!title) {\r\n    title = defaultTitle;\r\n  }\r\n  if (document.title !== title) {\r\n    document.title = title;\r\n  }\r\n}\r\n\r\n/**\r\n * @return {boolean}\r\n * */\r\nexport function isEditor() {\r\n  const path = window.location?.pathname;\r\n  return path?.includes(\"/admin/editor\") || false;\r\n}\r\n\r\n/**\r\n * Переменная, в которой храниться изначальный заголовок\r\n * @let {string}\r\n */\r\nlet defaultTitle;\r\n\r\n/**\r\n * Парсит стрку вводимую пользователем для опций селекта\r\n * @param string\r\n */\r\nexport function parseOptionsFromSettings(string) {\r\n  if (!string) {\r\n    return [];\r\n  }\r\n  let options = string.split(\"\\n\");\r\n  let path = extractPathFromString(string);\r\n  let _optionsFromData = getDataByPath(path);\r\n  if (_.isArray(_optionsFromData)) {\r\n    return _optionsFromData;\r\n  }\r\n  options = options.map(option => {\r\n    let value = option.split(\"|\")[0];\r\n    value = value.trim();\r\n    let valuePath = extractPathFromString(value);\r\n    if (valuePath) {\r\n      value = getDataByPath(valuePath);\r\n    }\r\n    let label = option.split(\"|\")[1] || value || \"\";\r\n    !_.isString(label) && (label = \"\");\r\n    label = label.trim();\r\n    let labelPath = extractPathFromString(label);\r\n    if (labelPath) {\r\n      label = getDataByPath(labelPath);\r\n    }\r\n    return {\r\n      value,\r\n      label\r\n    };\r\n  });\r\n  return options;\r\n}\r\n\r\n/**\r\n * Получает медиа запрос для css по имени настройки\r\n * @param {string} screenSettingName\r\n * @return {string}\r\n */\r\nexport function getMediaQueryByName(screenSettingName) {\r\n  let mediaQuery = \"\";\r\n  CONSTANTS.SCREENS.forEach(screen => {\r\n    if (screen.name === screenSettingName) {\r\n      mediaQuery = screen.mediaQuery;\r\n    }\r\n  });\r\n  return mediaQuery;\r\n}\r\n/**\r\n * Получает медиа запрос для css по имени настройки\r\n * @param {string} screenSettingName\r\n * @return {string}\r\n */\r\nexport function getMediaSettingsByName(screenSettingName) {\r\n  let screen = CONSTANTS.SCREENS[0];\r\n  CONSTANTS.SCREENS.forEach(_screen => {\r\n    if (_screen.name === screenSettingName) {\r\n      screen = _screen;\r\n    }\r\n  });\r\n  return screen;\r\n}\r\n\r\n/**\r\n * Возвращает брейкпоинт относительно текущего размера экрана\r\n */\r\nexport function getCurrentBreakpoint() {\r\n  const currentWidth = getWindowWidth();\r\n  const breakPoints = CONSTANTS.SCREENS;\r\n  const breakPointsSizes = breakPoints.map(item => ({\r\n    name: item.name,\r\n    size: Number(item.width.split(\"px\")[0])\r\n  }));\r\n  for (let breakpoint of breakPointsSizes) {\r\n    if (breakpoint.size < currentWidth) {\r\n      return breakpoint.name;\r\n    }\r\n  }\r\n}\r\n/**\r\n *@param {string} URLTemplate\r\n *@param {{} | null} object\r\n */\r\nexport function parseURLTemplate(URLTemplate = \"\", object = null) {\r\n  let url = URLTemplate;\r\n  let protocol = \"\";\r\n  if (!isEditor()) {\r\n    object = _.assign(\r\n      _.cloneDeep(currentRouterMatch.getProperty(\"params\")),\r\n      object\r\n    );\r\n  }\r\n  url = url.trim();\r\n  if (url.indexOf(\"{{\") !== -1) {\r\n    url = replaceContentWithData(url, object);\r\n  }\r\n  if (url.indexOf(\"https://\") === 0) {\r\n    protocol = \"https://\";\r\n    url = url.replace(\"https://\", \"\");\r\n  }\r\n  if (url.indexOf(\"http://\") === 0) {\r\n    protocol = \"http://\";\r\n    url = url.replace(\"http://\", \"\");\r\n  }\r\n  if (url.indexOf(\"mailto:\") === 0) {\r\n    protocol = \"mailto:\";\r\n    url = url.replace(\"mailto:\", \"\");\r\n  }\r\n  if (url.indexOf(\"tel:\") === 0) {\r\n    protocol = \"tel:\";\r\n    url = url.replace(\"tel:\", \"\");\r\n  }\r\n  // columnEditUrl = columnEditUrl.replace(':id', row.original.id);\r\n  let idTemplates = url.match(/:([\\s\\S]+?)(\\/|$)/g);\r\n  if (!idTemplates) {\r\n    return protocol + url;\r\n  }\r\n  idTemplates.forEach(idTemplate => {\r\n    let replace = object[idTemplate.replace(/:|\\//g, \"\")] || \"\";\r\n    idTemplate = idTemplate.replace(\"/\", \"\");\r\n    url = url.replace(new RegExp(idTemplate, \"g\"), replace);\r\n  });\r\n  return protocol + url;\r\n}\r\n\r\nexport function getWindowWidth() {\r\n  let window;\r\n  if (isEditor()) {\r\n    window = document.getElementById(\"editorWindow\").offsetWidth;\r\n  } else {\r\n    window = document.getElementById(\"front-app\").offsetWidth;\r\n  }\r\n  return window;\r\n}\r\n\r\nexport function renderAssetIcon(asset, props = null) {\r\n  if (asset) {\r\n    if (asset.url && asset.type === \"svg\") {\r\n      return <AltrpSVG {...props} url={asset.url} />;\r\n    }\r\n    switch (asset.assetType) {\r\n      case \"icon\": {\r\n        return iconsManager().renderIcon(asset.name);\r\n      }\r\n      case \"image\": {\r\n        return React.createElement(\"img\", { ...props, src: asset.url });\r\n      }\r\n      case \"media\": {\r\n        return React.createElement(\"img\", { ...props, src: asset.url });\r\n      }\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\n/**\r\n * @param {object} asset\r\n * @param {object} props\r\n * @return {React.DetailedReactHTMLElement<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> | React.DetailedReactHTMLElement<React.HTMLAttributes<T>, HTMLElement> | React.ReactSVGElement | React.DOMElement<React.DOMAttributes<T>, Element> | React.FunctionComponentElement<{}> | React.CElement<{}, React.ClassicComponent<{}, React.ComponentState>> | React.CElement<{}, React.Component<P, React.ComponentState>> | React.ReactElement<{}> | string}\r\n * @throws Исключение если иконка не найдена\r\n * */\r\nexport function renderAsset(asset, props = null) {\r\n  if(_.isEmpty(asset)){\r\n    return  ''\r\n  }\r\n  if(asset.type === 'image' && asset.dataUrl){\r\n    return React.createElement(\"img\", {\r\n      ...props,\r\n      src: asset.dataUrl,\r\n    });\r\n  }\r\n  if (asset.url && asset.type === \"svg\") {\r\n    return <AltrpSVG {...props} url={asset.url} rawSVG={asset.rawSVG} />;\r\n  }\r\n  if (! isSSR() && asset instanceof File) {\r\n    let refImg = React.createRef();\r\n    let fr = new FileReader();\r\n    fr.readAsDataURL(asset);\r\n    fr.onload = () => {\r\n      if (refImg.current) {\r\n        refImg.current.src = fr.result;\r\n        refImg.current.alt = asset.name;\r\n      }\r\n    };\r\n    return React.createElement(\"img\", {\r\n      ...props,\r\n      src: asset.url,\r\n      ref: refImg\r\n    });\r\n  }\r\n  switch (asset.assetType) {\r\n    case \"icon\": {\r\n      return iconsManager().renderIcon(asset.name, props);\r\n    }\r\n    case \"image\": {\r\n      return React.createElement(\"img\", { ...props, src: asset.url });\r\n    }\r\n    case \"media\": {\r\n      return React.createElement(\"img\", { ...props, src: asset.url });\r\n    }\r\n    case \"mediaBackground\": {\r\n      return React.createElement(\"div\", {\r\n        ...props,\r\n        style: { backgroundImage: `url(${asset.url})` }\r\n      });\r\n    }\r\n    case undefined: {\r\n      return React.createElement(\"img\", {\r\n        ...props,\r\n        src: \"/img/nullImage.png\"\r\n      });\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\n/**\r\n * Парсим данный из строки в объект, если значение - путь, то берем значение из context\r\n * (если в context нет свойства, то не записываем)\r\n * @param {string} string\r\n * @param {AltrpModel} context\r\n * @param {boolean} allowObject\r\n * @param {boolean} replaceRight - нужно ли подставлять в значение параметра данные или оставить сырой шаблон\r\n * @param {boolean} replace - нужно ли подставлять в значение параметра данные или оставить сырой шаблон\r\n * @return {{}}\r\n */\r\nexport function parseParamsFromString(\r\n  string,\r\n  context = {},\r\n  allowObject = false,\r\n  replaceRight = true,\r\n  replace = true,\r\n) {\r\n  if (!(context instanceof AltrpModel)) {\r\n    context = new AltrpModel(context);\r\n  }\r\n  const params = {};\r\n  const urlParams =\r\n    window.currentRouterMatch instanceof AltrpModel\r\n      ? window.currentRouterMatch.getProperty(\"params\")\r\n      : {};\r\n\r\n  if (!string) {\r\n    return params;\r\n  }\r\n  const lines = string.split(\"\\n\");\r\n  lines.forEach(line => {\r\n    let [left, right] = line.split(\"|\");\r\n    if (!left || !right) {\r\n      return;\r\n    }\r\n    left = left.trim();\r\n    right = right.trim();\r\n    if (replace && left.indexOf(\"{{\") !== -1) {\r\n      left = replaceContentWithData(left);\r\n    }\r\n    if (replace && right.match(/{{([\\s\\S]+?)(?=}})/g)) {\r\n      if (\r\n        context.getProperty(\r\n          right.match(/{{([\\s\\S]+?)(?=}})/g)[0].replace(\"{{\", \"\")\r\n        ) ||\r\n        getDataByPath(right.match(/{{([\\s\\S]+?)(?=}})/g)[0].replace(\"{{\", \"\"))\r\n      ) {\r\n        //todo ошибка в IOS\r\n        params[left] =\r\n          context.getProperty(\r\n            right.match(/{{([\\s\\S]+?)(?=}})/g)[0].replace(\"{{\", \"\")\r\n          ) ||\r\n          getDataByPath(\r\n            right.match(/{{([\\s\\S]+?)(?=}})/g)[0].replace(\"{{\", \"\")\r\n          ) ||\r\n          \"\";\r\n      } else {\r\n        replaceRight\r\n          ? (params[left] = urlParams[\r\n              right.match(/{{([\\s\\S]+?)(?=}})/g)[0].replace(\"{{\", \"\")\r\n            ]\r\n              ? urlParams[\r\n                  right.match(/{{([\\s\\S]+?)(?=}})/g)[0].replace(\"{{\", \"\")\r\n                ]\r\n              : \"\")\r\n          : (params[left] = right);\r\n      }\r\n    } else {\r\n      params[left] = right;\r\n    }\r\n    if (!allowObject && _.isObject(params[left])) {\r\n      delete params[left];\r\n    }\r\n  });\r\n  return params;\r\n}\r\n\r\n/**\r\n * Функция для проверки условий\r\n * @param {array} conditions\r\n * @param {boolean} AND - логичекое И или ИЛИ\r\n * @param {AltrpModel} model\r\n * @param {boolean} dataByPath - брать ли данные из getDataByPath\r\n * @return {boolean}\r\n */\r\nexport function conditionsChecker(\r\n  conditions = [],\r\n  AND = true,\r\n  model,\r\n  dataByPath = true\r\n) {\r\n  if (!conditions.length) {\r\n    return true;\r\n  }\r\n  let result = AND;\r\n  _.each(conditions, c => {\r\n    if (AND) {\r\n      result *= conditionChecker(c, model, dataByPath);\r\n    } else {\r\n      result += conditionChecker(c, model, dataByPath);\r\n    }\r\n  });\r\n  return !!result;\r\n}\r\n\r\n/**\r\n * Функция для проверки одного условия\r\n * @param c\r\n * @param {AltrpModel} model\r\n * @param {boolean} dataByPath - брать ли данный из getDataByPath\r\n * @return {boolean}\r\n */\r\nexport function conditionChecker(c, model, dataByPath = true) {\r\n  let result = 0;\r\n  const { operator } = c;\r\n  let { modelField: left, value } = c;\r\n  if (dataByPath) {\r\n    value = getDataByPath(value, \"\", model, true);\r\n    left = getDataByPath(left, \"\", model);\r\n    return altrpCompare(left, value, operator);\r\n  }\r\n  return altrpCompare(model.getProperty(left), value, operator);\r\n}\r\n\r\n/**\r\n * Установить данные\r\n * @param {string} path\r\n * @param {*} value\r\n * @param {function | null} dispatch\r\n * @return {boolean}\r\n */\r\nexport function setDataByPath(path = \"\", value, dispatch = null) {\r\n  if (!path) {\r\n    return false;\r\n  }\r\n  if (path.indexOf(\",\") !== -1) {\r\n    let result = path\r\n      .split(\",\")\r\n      .map(path => setDataByPath(path, value, dispatch));\r\n    return true;\r\n  }\r\n  path = path.replace(\"{{\", \"\").replace(\"}}\", \"\");\r\n  path = path.trim();\r\n  switch (value) {\r\n    case \"true\":\r\n      value = true;\r\n      break;\r\n    case \"false\":\r\n      value = false;\r\n      break;\r\n    case \"null\":\r\n      value = null;\r\n      break;\r\n    case \"undefined\":\r\n      value = undefined;\r\n      break;\r\n  }\r\n\r\n  if (path.indexOf(\"altrppagestate.\") === 0) {\r\n    path = path.replace(\"altrppagestate.\", \"\");\r\n    if (!path) {\r\n      return false;\r\n    }\r\n    const oldValue = appStore.getState().altrpPageState.getProperty(path);\r\n    if (_.isEqual(oldValue, value)) {\r\n      return true;\r\n    }\r\n    if (_.isFunction(dispatch)) {\r\n      dispatch(changePageState(path, value));\r\n    } else {\r\n      appStore.dispatch(changePageState(path, value));\r\n    }\r\n    return true;\r\n  }\r\n  if (path.indexOf(\"altrpmeta.\") === 0) {\r\n    path = path.replace(\"altrpmeta.\", \"\");\r\n    if (!path) {\r\n      return false;\r\n    }\r\n    const oldValue = appStore.getState().altrpMeta.getProperty(path);\r\n    if (_.isEqual(oldValue, value)) {\r\n      return true;\r\n    }\r\n    if (_.isFunction(dispatch)) {\r\n      dispatch(changeAltrpMeta(path, value));\r\n    } else {\r\n      appStore.dispatch(changeAltrpMeta(path, value));\r\n    }\r\n    return true;\r\n  }\r\n  if (path.indexOf(\"altrpuser.local_storage.\") === 0) {\r\n    path = path.replace(\"altrpuser.\", \"\");\r\n    if (!path) {\r\n      return false;\r\n    }\r\n    const oldValue = appStore.getState().currentUser.getProperty(path);\r\n    if (_.isEqual(oldValue, value)) {\r\n      return true;\r\n    }\r\n    if (_.isFunction(dispatch)) {\r\n      dispatch(changeCurrentUserProperty(path, value));\r\n    } else {\r\n      appStore.dispatch(changeCurrentUserProperty(path, value));\r\n    }\r\n    return true;\r\n  }\r\n  if (path.indexOf(\"altrpforms.\") === 0) {\r\n    path = path.replace(\"altrpforms.\", \"\");\r\n    if (!path) {\r\n      return false;\r\n    }\r\n    const [formId, fieldName] = path.split(\".\");\r\n    const { formsStore } = appStore.getState();\r\n\r\n    const oldValue = _.get(formsStore, path);\r\n    if (_.isEqual(oldValue, value)) {\r\n      return true;\r\n    }\r\n    if (_.isFunction(dispatch)) {\r\n      dispatch(changeFormFieldValue(path, value));\r\n    } else {\r\n      appStore.dispatch(changeFormFieldValue(fieldName, value, formId, true));\r\n    }\r\n  } else\r\n  if (path.indexOf(\"altrpelements.\") === 0) {\r\n    const pathElements = path.split(\".\");\r\n    let [prefix, elementId, updateType, ...propName] = pathElements;\r\n    const component = getComponentByElementId(elementId);\r\n    if (!component) {\r\n      return true;\r\n    }\r\n    propName =  propName.join('.');\r\n    switch (updateType) {\r\n      case \"settings\": {\r\n        component.props.element.updateSetting(value, propName);\r\n        if(window['h-altrp']){\r\n          let settings = component.props.element.settings;\r\n          settings = mutate.set(settings, propName, value)\r\n          appStore.dispatch(addSettings(component.props.element.getId(), component.props.element.getName(), settings));\r\n        }\r\n        return true;\r\n      }\r\n      default: {\r\n        return true;\r\n      }\r\n    }\r\n  } else\r\n  if (path.indexOf(\"altrpareas.\") === 0) {\r\n    const pathElements = path.split(\".\");\r\n    const [prefix,  areaName,  updateType, propName] = pathElements;\r\n    let area = window.page_areas.find(area => area.id === areaName);\r\n    if(area && updateType === 'settings'){\r\n      if(! (area instanceof Area)){\r\n        area = Area.areaFactory(area);\r\n      }\r\n      area.setSetting(propName, value);\r\n    }\r\n  } else\r\n  if (path.indexOf(\"altrpstorage.\") === 0) {\r\n    path = path.replace(\"altrpstorage.\", \"\");\r\n    const currentStorage = getDataFromLocalStorage(\"altrpstorage\", {});\r\n    _.set(currentStorage, path, value);\r\n    saveDataToLocalStorage(\"altrpstorage\", currentStorage);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Получить данные из окружения\r\n * @param {string} path\r\n * @param {*} _default\r\n * @param {{} | AltrpModel | null} context\r\n * @param {boolean} altrpCheck - проверять ли altrp\r\n * @return {*}\r\n */\r\nexport function getDataByPath(\r\n  path = \"\",\r\n  _default = null,\r\n  context = null,\r\n  altrpCheck = false\r\n) {\r\n  if (!path) {\r\n    return _default;\r\n  }\r\n  if (path.indexOf(\"{{\") !== -1) {\r\n    path = replaceContentWithData(path, context);\r\n  }\r\n  /**\r\n   * проверим путь\r\n   */\r\n  if (altrpCheck && path.trim().indexOf(\"altrp\") !== 0) {\r\n    return path;\r\n  }\r\n  path = path.trim();\r\n  let trueValue, falseValue;\r\n  if (path.indexOf(\"?\") !== -1 && path.indexOf(\":\") !== -1) {\r\n    let [_path, _right] = path.split(\"?\");\r\n    [trueValue, falseValue] = _right.split(\":\");\r\n    trueValue = trueValue.trim();\r\n    if (trueValue.indexOf(\".\") !== -1) {\r\n      trueValue = getDataByPath(trueValue, _default, context);\r\n    }\r\n\r\n    falseValue = falseValue.trim();\r\n    if (falseValue.indexOf(\".\") !== -1) {\r\n      falseValue = getDataByPath(falseValue, _default, context);\r\n    }\r\n    path = _path.trim();\r\n  }\r\n  /**\r\n   * @type {AltrpModel} currentModel\r\n   */\r\n  let {\r\n    currentModel,\r\n    currentDataStorage,\r\n    altrpresponses,\r\n    formsStore,\r\n    altrpPageState,\r\n    altrpPage,\r\n    currentUser,\r\n    altrpMeta\r\n  } = appStore.getState();\r\n  if (context) {\r\n    currentModel =\r\n      context instanceof AltrpModel ? context : new AltrpModel(context);\r\n  }\r\n  let urlParams =\r\n    window.currentRouterMatch instanceof AltrpModel\r\n      ? window.currentRouterMatch.getProperty(\"params\")\r\n      : {};\r\n\r\n  let queryData = queryString.parseUrl(window.location.href).query;\r\n\r\n  urlParams = _.assign(queryData, urlParams);\r\n\r\n  let value = _default;\r\n  if (!_.isString(path)) {\r\n    return value;\r\n  }\r\n  if (path.indexOf(\"altrpdata.\") === 0) {\r\n    path = path.replace(\"altrpdata.\", \"\");\r\n    value = currentDataStorage\r\n      ? currentDataStorage.getProperty(path, _default)\r\n      : \"\";\r\n  } else if (path.indexOf(\"altrpresponses.\") === 0) {\r\n    path = path.replace(\"altrpresponses.\", \"\");\r\n    value = altrpresponses ? altrpresponses.getProperty(path, _default) : \"\";\r\n  } else if (path.indexOf(\"altrpmeta.\") === 0) {\r\n    path = path.replace(\"altrpmeta.\", \"\");\r\n    value = altrpMeta ? altrpMeta.getProperty(path, _default) : \"\";\r\n  } else if (path.indexOf(\"altrppagestate.\") === 0) {\r\n    path = path.replace(\"altrppagestate.\", \"\");\r\n    value = altrpPageState ? altrpPageState.getProperty(path, _default) : \"\";\r\n  } else if (path.indexOf(\"altrpuser.\") === 0) {\r\n    path = path.replace(\"altrpuser.\", \"\");\r\n    value = currentUser ? currentUser.getProperty(path, _default) : \"\";\r\n  } else if (path === \"altrpuser\") {\r\n    value = currentUser.getData();\r\n  } else if (path === \"altrpmodel\") {\r\n    value = currentModel.getData();\r\n  } else if (path.indexOf(\"altrptime.\") === 0) {\r\n    value = getTimeValue(path.replace(\"altrptime.\", \"\"));\r\n  } else if (path.indexOf(\"altrpforms.\") === 0) {\r\n    value = _.get(formsStore, path.replace(\"altrpforms.\", \"\"), _default);\r\n  } else if (path.indexOf(\"altrppage.\") === 0) {\r\n    value = altrpPage\r\n      ? altrpPage.getProperty(path.replace(\"altrppage.\", \"\"), _default)\r\n      : \"\";\r\n    if(_.isString(value) && value.match(/{{([\\s\\S]+?)}}/)){\r\n      value = replaceContentWithData(value, context.getData());\r\n    }\r\n  } else if (path.indexOf(\"altrpelements.\") === 0) {\r\n    const pathElements = path.split(\".\");\r\n    const [prefix, elementId, updateType, propName] = pathElements;\r\n    const component = getComponentByElementId(elementId);\r\n    if (!component) {\r\n      value = \"\";\r\n    } else {\r\n      switch (updateType) {\r\n        case \"settings\":\r\n          {\r\n            value = component.props.element.getSettings(propName);\r\n          }\r\n          break;\r\n        default: {\r\n          value = \"\";\r\n        }\r\n      }\r\n    }\r\n  } else if (path.indexOf(\"altrpstorage.\") === 0) {\r\n    path = path.replace(\"altrpstorage.\", \"\");\r\n    value = getDataFromLocalStorage(\"altrpstorage\", {});\r\n    value = _.get(value, path, _default);\r\n  } else if (path.indexOf(\"altrpareas.\") === 0) {\r\n    const pathElements = path.split(\".\");\r\n    const [prefix,  areaName,  updateType, propName] = pathElements;\r\n    let area = window.page_areas.find(area => area.id === areaName);\r\n    if(area && updateType === 'settings'){\r\n      if(! (area instanceof Area)){\r\n        area = Area.areaFactory(area);\r\n      }\r\n      value = area.getSetting(propName, _default);\r\n    }\r\n  } else {\r\n    value = currentModel.getProperty(path) !== undefined\r\n      ? currentModel.getProperty(path)\r\n      : urlParams[path];\r\n    if (! value && value !== 0) {\r\n      value = _default;\r\n    }\r\n  }\r\n  if (trueValue || falseValue) {\r\n    value = value ? trueValue : falseValue;\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n * Извелкает путь из строки\r\n * @param {string} string\r\n * @return {string}\r\n */\r\nexport function extractPathFromString(string = \"\") {\r\n  let path = \"\";\r\n  if (_.isString(string)) {\r\n    // path = string.match(/(?<={{)([\\s\\S]+?)(?=}})/g)[0]\r\n    path = _.get(string.match(/{{([\\s\\S]+?)(?=}})/g), \"0\", \"\").replace(\r\n      \"{{\",\r\n      \"\"\r\n    );\r\n  }\r\n  return path;\r\n}\r\n/**\r\n * Возвращает новый объект из свояств объекта, в именах которых присутствует префикс prefix\r\n * @param {string} prefix - строка для поиска (например 'test')\r\n * @param {{}} object - если в объекте есть свойство test__test то вернет {test: test__test_value}\r\n * @return {{}}\r\n */\r\nexport function getObjectByPrefix(prefix = \"\", object = {}) {\r\n  let result = {};\r\n  if (!prefix) {\r\n    return result;\r\n  }\r\n  _.forEach(object, (value, key) => {\r\n    if (key.indexOf(`${prefix}__`, \"\") === 0) {\r\n      result[key.replace(`${prefix}__`, \"\")] = value;\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\n/**\r\n * Возвращает объект из json-строки если возможно\r\n * @param {string} string\r\n * @param {*} _default\r\n * @return {*}\r\n */\r\nexport function mbParseJSON(string, _default = null) {\r\n  try {\r\n    return JSON.parse(string);\r\n  } catch (e) {\r\n    return _default === null ? string : _default;\r\n  }\r\n}\r\n\r\n/**\r\n * Функция для сравнения значений\r\n * @param leftValue\r\n * @param rightValue\r\n * @param operator\r\n * @return {boolean}\r\n */\r\nexport function altrpCompare(\r\n  leftValue = \"\",\r\n  rightValue = \"\",\r\n  operator = \"empty\"\r\n) {\r\n  switch (operator) {\r\n    case \"empty\": {\r\n      return _.isEmpty(leftValue);\r\n    }\r\n    case \"not_empty\": {\r\n      return !_.isEmpty(leftValue);\r\n    }\r\n    case \"null\": {\r\n      return !leftValue;\r\n    }\r\n    case \"not_null\": {\r\n      return !!leftValue;\r\n    }\r\n    case \"==\": {\r\n      if (!leftValue && !rightValue) {\r\n        return true;\r\n      }\r\n      if (!(_.isObject(leftValue) || _.isObject(rightValue))) {\r\n        return leftValue == rightValue;\r\n      } else {\r\n        return _.isEqual(leftValue, rightValue);\r\n      }\r\n    }\r\n    case \"===\": {\r\n      return _.isEqual(leftValue, rightValue);\r\n    }\r\n    case \"<>\": {\r\n      return !_.isEqual(leftValue, rightValue);\r\n    }\r\n    case \">\": {\r\n      return Number(leftValue) > Number(rightValue);\r\n    }\r\n    case \">=\": {\r\n      return Number(leftValue) >= Number(rightValue);\r\n    }\r\n    case \"<\": {\r\n      return Number(leftValue) < Number(rightValue);\r\n    }\r\n    case \"<=\": {\r\n      return Number(leftValue) <= Number(rightValue);\r\n    }\r\n    case \"in\": {\r\n      if (_.isString(rightValue)) {\r\n        return rightValue.indexOf(leftValue) !== -1;\r\n      }\r\n      if (!_.isArray(rightValue)) {\r\n        return false;\r\n      }\r\n      let result = false;\r\n      rightValue.forEach(item => {\r\n        if (!result) {\r\n          result = altrpCompare(leftValue, item, \"==\");\r\n        }\r\n      });\r\n      return result;\r\n    }\r\n    case \"not_in\": {\r\n      return !altrpCompare(leftValue, rightValue, \"in\");\r\n    }\r\n    case \"contain\": {\r\n\r\n      if (_.isString(leftValue)) {\r\n        return leftValue.indexOf(rightValue) !== -1;\r\n      }\r\n      if (!_.isArray(leftValue)) {\r\n        return false;\r\n      }\r\n      let result = false;\r\n      leftValue.forEach(item => {\r\n        if (!result) {\r\n          result = altrpCompare(rightValue, item, \"contain\");\r\n        }\r\n      });\r\n      return result;\r\n    }\r\n    case \"not_contain\": {\r\n      return !altrpCompare(leftValue, rightValue, \"contain\");\r\n    }\r\n  }\r\n}\r\n\r\nexport const CONDITIONS_OPTIONS = _CONDITIONS_OPTIONS\r\n\r\nexport function isElementTopInViewport(top, scrollTop, clientHeight) {\r\n  return top > scrollTop && top < scrollTop + clientHeight;\r\n}\r\n\r\nexport function getTopPosition(element) {\r\n  let top = element.offsetTop;\r\n\r\n  while (element.offsetParent) {\r\n    element = element.offsetParent;\r\n    top += element.offsetTop;\r\n  }\r\n\r\n  return top;\r\n}\r\n\r\n/**\r\n * Получить какое-то время по шаблону `YYYY-MM-DD`\r\n * @param {string} path\r\n * @param {string | null} defaultValue\r\n */\r\nexport function getTimeValue(path, defaultValue = null) {\r\n  let value = defaultValue;\r\n\r\n  switch (path) {\r\n    case \"now\":\r\n      {\r\n        value = _.now();\r\n      }\r\n      break;\r\n    case \"month_start\":\r\n      {\r\n        value = startOfMonth(new Date());\r\n      }\r\n      break;\r\n    case \"prev_month_start\":\r\n      {\r\n        value = startOfMonth(new Date(), -1);\r\n      }\r\n      break;\r\n    case \"year_start\":\r\n      {\r\n        value = startOfYear(new Date());\r\n      }\r\n      break;\r\n    case \"prev_year_start\":\r\n      {\r\n        value = startOfYear(new Date(), -1);\r\n      }\r\n      break;\r\n    case \"prev_week_start\":\r\n      {\r\n        value = getPrevWeekStart();\r\n      }\r\n      break;\r\n    case \"next_week_start\":\r\n      {\r\n        value = getNextWeekStart();\r\n      }\r\n      break;\r\n    case \"week_start\":\r\n      {\r\n        value = getWeekStart();\r\n      }\r\n      break;\r\n  }\r\n  const {moment} = window.altrpHelpers;\r\n  value = moment(value).format(\"YYYY-MM-DD\");\r\n  return value;\r\n}\r\n\r\n/**\r\n * Получить начало месяца\r\n * @param {Date} date\r\n * @param {int} monthShift\r\n * @return {Date}\r\n */\r\nexport function startOfMonth(date, monthShift = 0) {\r\n  return new Date(date.getFullYear(), date.getMonth() + monthShift, 1);\r\n}\r\n/**\r\n * Получить начало месяца\r\n * @param {Date} date\r\n * @param {int} yearShift\r\n * @return {Date}\r\n */\r\nexport function startOfYear(date, yearShift = 0) {\r\n  return new Date(date.getFullYear() + yearShift, 0, 1);\r\n}\r\n/**\r\n * Получить начало месяца\r\n * @param {Date} date\r\n * @param {int} weekShift\r\n * @return {Date}\r\n */\r\nexport function startOfWeek(date, weekShift = 0) {\r\n  const {moment} = window.altrpHelpers;\r\n  return moment(\r\n    new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate() + weekShift * 7\r\n    )\r\n  ).firstDayOfWeek();\r\n}\r\n\r\n/**\r\n * Получить ссылку на состояние хранилища\r\n * @return {*}\r\n */\r\nexport function getCurrentStoreState() {\r\n  return appStore.getState();\r\n}\r\n\r\n/**\r\n * Скроллит к элементу\r\n * @param {{} | HTMLElement}scrollbars\r\n * @param {{}}element\r\n */\r\nexport function scrollToElement(scrollbars, element) {\r\n  let { container } = scrollbars;\r\n  if(scrollbars instanceof HTMLElement){\r\n    container = scrollbars;\r\n    let scroll = getOffsetTopInElement(element, scrollbars);\r\n    if(scroll){\r\n      scrollbars.scrollTop = scroll;\r\n    }\r\n\r\n  }\r\n  if(scrollbars instanceof Window){\r\n    container = scrollbars;\r\n  }\r\n  /**\r\n   * @member {HTMLElement} container\r\n   */\r\n  if (!container) {\r\n    return;\r\n  }\r\n  if (!_.isFunction(scrollbars.scrollTop) && !_.isFunction(scrollbars.scrollTo)) {\r\n    return;\r\n  }\r\n\r\n\r\n  let parent = element.offsetParent;\r\n  let top = element.offsetTop;\r\n\r\n  while (parent !== container || parent !== document.body) {\r\n    if (! parent) {\r\n      /**\r\n       * ушли в самый корень ДОМ и контейнер не встретился\r\n       */\r\n      break;\r\n    }\r\n    top += parent.offsetTop;\r\n    parent = parent.offsetParent;\r\n  }\r\n  /**\r\n   * не получили каеое-либо значение\r\n   */\r\n  if (! top) {\r\n    return;\r\n  }\r\n\r\n\r\n  console.log(scrollbars.scrollTo);\r\n  scrollbars.scrollTop && scrollbars.scrollTop(top);\r\n  scrollbars.scrollTo && scrollbars.scrollTo({\r\n    top,\r\n    left: 0,\r\n    behavior: 'smooth',\r\n  });\r\n}\r\n\r\n/**\r\n * Вернет HTML элемент React компонента, у которого id = elementId\r\n * @param {string} elementId\r\n * @return {null | HTMLElement}\r\n */\r\nexport function getHTMLElementById(elementId = \"\") {\r\n  let HTMLElement = null;\r\n  if (!elementId || !elementId.trim()) {\r\n    return HTMLElement;\r\n  }\r\n  elementId = elementId.trim();\r\n  appStore.getState().elements.forEach(el => {\r\n    if (!el.elementWrapperRef.current) {\r\n      return;\r\n    }\r\n    if (!el.elementWrapperRef.current.id) {\r\n      return;\r\n    }\r\n    if (\r\n      el.elementWrapperRef.current.id\r\n        .toString()\r\n        .split(\" \")\r\n        .indexOf(elementId) !== -1\r\n    ) {\r\n      HTMLElement = el.elementWrapperRef.current;\r\n    }\r\n  });\r\n  return HTMLElement;\r\n}\r\n\r\n/**\r\n * Вернет HTML  React компонента, у которого props.element = element\r\n * @param {FrontElement} element\r\n * @return {null | HTMLElement}\r\n */\r\nexport function getWrapperHTMLElementByElement(element) {\r\n  if (!element) {\r\n    return null;\r\n  }\r\n  let HTMLElement = null;\r\n  appStore.getState().elements.forEach(el => {\r\n    if (element === el.props.element) {\r\n      HTMLElement = el.elementWrapperRef.current;\r\n    }\r\n  });\r\n  return HTMLElement;\r\n}\r\n/**\r\n * Вернет HTML  React компонент, у которого elementWrapperRef.current.id = elementId\r\n * @param {string} elementId\r\n * @return {null | HTMLElement}\r\n */\r\nexport function getComponentByElementId(elementId = \"\") {\r\n  let component = null;\r\n  if (!elementId || !elementId.trim()) {\r\n    return component;\r\n  }\r\n  elementId = elementId.trim();\r\n  appStore.getState().elements.forEach(el => {\r\n    if (!el.elementWrapperRef.current) {\r\n      return;\r\n    }\r\n    if (!el.elementWrapperRef.current.id) {\r\n      return;\r\n    }\r\n    if (\r\n      el.elementWrapperRef.current.id\r\n        .toString()\r\n        .split(\" \")\r\n        .indexOf(elementId) !== -1\r\n    ) {\r\n      component = el;\r\n    }\r\n  });\r\n  return component;\r\n}\r\n\r\n/**\r\n * Начало следующей недели\r\n * @return {moment.Moment}\r\n */\r\nfunction getNextWeekStart() {\r\n  const {moment} = window.altrpHelpers;\r\n  let today = moment();\r\n  let daystoMonday = 7 - (today.isoWeekday() - 1);\r\n  return today.add(daystoMonday, \"days\");\r\n}\r\n\r\n/**\r\n * Начало текущей недели\r\n * @return {moment.Moment}\r\n */\r\nfunction getWeekStart() {\r\n  const {moment} = window.altrpHelpers;\r\n  let today = moment();\r\n  let daystoMonday = today.isoWeekday() - 1;\r\n  return today.subtract(daystoMonday, \"days\");\r\n}\r\n\r\n/**\r\n * Конец Следующей недели\r\n * @return {moment.Moment}\r\n */\r\nfunction getNextWeekEnd() {\r\n  let nextMonday = getNextWeekStart();\r\n  return nextMonday.add(\"days\", 6);\r\n}\r\n\r\n/**\r\n * Начало предыдущей недели\r\n * @return {moment.Moment}\r\n */\r\nfunction getPrevWeekStart() {\r\n  const {moment} = window.altrpHelpers;\r\n  let today = moment();\r\n  let daystoLastMonday = today.isoWeekday() - 1 + 7;\r\n  return today.subtract(daystoLastMonday, \"days\");\r\n}\r\n\r\n/**\r\n * Конец предыдущей недели\r\n * @return {moment.Moment}\r\n */\r\nfunction getPrevWeekEnd() {\r\n  let lastMonday = getPrevWeekStart();\r\n  return lastMonday.add(\"days\", 6);\r\n}\r\n\r\n/**\r\n * Удаляет пустые свойства в объектах\r\n */\r\nexport function clearEmptyProps() {}\r\n\r\n/**\r\n * Заменяет в тексте конструкции типа {{altrpdata...}} на данные\r\n * @param content\r\n * @param {{} | null} modelContext\r\n */\r\n\r\nexport function replaceContentWithData(content = \"\", modelContext = null) {\r\n  if(window.SSR){\r\n    return  content;\r\n  }\r\n  let paths = _.isString(content) ? content.match(/{{([\\s\\S]+?)(?=}})/g) : null;\r\n  if (_.isArray(paths)) {\r\n    paths.forEach(path => {\r\n      path = path.replace(\"{{\", \"\");\r\n      let value = getDataByPath(path, \"\", modelContext);\r\n\r\n      if (value === 0) {\r\n        value = \"0\";\r\n        console.log();\r\n      }\r\n      path = escapeRegExp(path);\r\n      content = content.replace(new RegExp(`{{${path}}}`, \"g\"), value || \"\");\r\n    });\r\n  }\r\n  return content;\r\n}\r\n\r\n/**\r\n * Вспомогательные функции для работы с данными виджетов\r\n */\r\nwindow.altrphelpers = {\r\n  /**\r\n   * Возвращает сумму полей в массиве объектов\r\n   * @param {string}fieldName\r\n   * @return {number}\r\n   */\r\n  sumFields: function sumFields(fieldName) {\r\n    let sum = 0;\r\n    if (!_.isObject(this.context)) {\r\n      return sum;\r\n    }\r\n    if (!_.isArray(this.context)) {\r\n      this.context = [this.context];\r\n    }\r\n    this.context.forEach(c => {\r\n      sum += Number(_.get(c, fieldName)) || 0;\r\n    });\r\n    return sum;\r\n  }\r\n};\r\n\r\n/**\r\n * Функция выводит определенный элемент на печать\r\n * @params {HTMLElement[]} elements\r\n * @params {null || HTMLElement} stylesTag\r\n */\r\nexport function printElements(elements, title = \"\") {\r\n  let myWindow = window.open(\"\", \"my div\", \"height=400,width=1200\");\r\n  myWindow.document.write(`<html><head><title>${title}</title></head>`);\r\n  myWindow.document.write(\"<body >\");\r\n  elements = _.isArray(elements) ? elements : [elements];\r\n  let headContent = '';\r\n  myWindow.document.write(\"</body></html>\");\r\n  let bodyContent = '';\r\n  elements.forEach(element => {\r\n    if(element instanceof HTMLHeadElement){\r\n      headContent = element.innerHTML;\r\n      return\r\n    }\r\n    bodyContent += element.outerHTML;\r\n  });\r\n  myWindow.document.close(); // necessary for IE >= 10\r\n  myWindow.document.head.innerHTML = headContent;\r\n  bodyContent = bodyContent\r\n    .replace(/<tr/g, '<div className=\"altrp-table-tr\"')\r\n    .replace(/<th/g, '<div')\r\n    .replace(/<\\/tr>/g, '</div>')\r\n    .replace(/<\\/th>/g, '</div>')\r\n  myWindow.document.body.innerHTML = bodyContent;\r\n  myWindow.focus(); // necessary for IE >= 10\r\n  delay(250).then(()=>{\r\n    myWindow.print();\r\n    myWindow.close();\r\n  })\r\n  return true;\r\n}\r\n\r\n/**\r\n * Функция конвертирует HTML в PDF\r\n * @params {HTMLElement[]} element\r\n * @params {string} filename\r\n */\r\nexport async function elementsToPdf(elements, filename = \"\") {\r\n  let html2pdf = (await import(/* webpackChunkName: 'html2pdf' */\"html2pdf.js\")).default;\r\n  elements = elements.body ? elements.body : elements;\r\n  if (!elements) {\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n  let myWindow = window.open(\"\", \"my div\", \"height=400,width=1440\");\r\n  myWindow.document.write(`<html><head><title></title></head>`);\r\n  myWindow.document.write(\"</head><body >\");\r\n  elements = _.isArray(elements) ? elements : [elements];\r\n  elements.forEach(element => {\r\n    myWindow.document.write(element.outerHTML);\r\n  });\r\n  myWindow.document.write(\"</body></html>\");\r\n  return new Promise((resolve, reject) => {\r\n    html2pdf()\r\n      .from(myWindow.document.body)\r\n      .save(filename);\r\n    myWindow.close();\r\n    resolve({ success: true });\r\n  });\r\n}\r\n\r\n/**\r\n * Забирает данные из HTML таблицы\r\n * @param {{}}HTMLElement\r\n */\r\nexport function dataFromTable(HTMLElement) {\r\n  const data = [];\r\n  const headers = [];\r\n  if (!(HTMLElement && HTMLElement.querySelectorAll)) {\r\n    return data;\r\n  }\r\n  let table = HTMLElement.querySelector(\".altrp-table\");\r\n  if (!table && HTMLElement.querySelector(\".altrp-table-tr\")) {\r\n    table = HTMLElement;\r\n  }\r\n  if (!table) {\r\n    return data;\r\n  }\r\n  const ths = table.querySelectorAll(\".altrp-table-th\");\r\n  _.each(ths, th => {\r\n    // if (th.innerText) {\r\n    headers.push(th.innerText || \"\");\r\n    // }\r\n  });\r\n  const rows = table.querySelectorAll(\".altrp-table-tbody .altrp-table-tr\");\r\n  _.each(rows, row => {\r\n    const cells = row.querySelectorAll(\".altrp-table-td\");\r\n    const part = {};\r\n    headers.forEach((header, idx) => {\r\n      if (!header) {\r\n        return;\r\n      }\r\n      part[header] = cells[idx].innerText || \"\";\r\n    });\r\n    data.push(part);\r\n  });\r\n  return data;\r\n}\r\n\r\n/**\r\n * Создать csv-файл из данных и скачать\r\n * @param {{}} data\r\n * @param {string} filename\r\n */\r\nexport async function dataToCSV(data = {}, filename) {\r\n  filename = filename || \"File\";\r\n  if (!data) {\r\n    return { success: false };\r\n  }\r\n  if (_.isObject() && !_.isArray(data)) {\r\n    data = [data];\r\n  }\r\n  if (!_.isArray(data)) {\r\n    return { success: false };\r\n  }\r\n\r\n  let headers = _.toPairs(data[0]).map(([name, value]) => name);\r\n  let csvContent =\r\n    // 'data:text/csv;charset=utf-8,'\r\n    \"\" +\r\n    headers.join(\";\") +\r\n    \"\\n\" +\r\n    data\r\n      .map(item => {\r\n        let line = \"\";\r\n        headers.forEach((h, idx) => {\r\n          let value = _.get(item, h) || \"\";\r\n          if (_.isObject(value)) {\r\n            value = JSON.stringify(value);\r\n          }\r\n\r\n          line +=\r\n            (_.isString(value) ? value.replace(/\\s/g, \" \") : value) +\r\n            (headers.length === idx + 1 ? \"\" : \";\");\r\n        });\r\n        return line;\r\n      })\r\n      .join(\"\\n\");\r\n  let blob = new Blob([csvContent], {\r\n    type: \"text/csv\",\r\n    charset: \"windows-1251\"\r\n    // charset: 'utf-8',\r\n  });\r\n  let link = document.createElement(\"a\");\r\n  link.setAttribute(\"href\", window.URL.createObjectURL(blob));\r\n  link.setAttribute(\"download\", filename + \".csv\");\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  return { success: true };\r\n}\r\n\r\n/**\r\n * Генерация и загрузка XLS-файла\r\n * @param {Object data} Объект данных\r\n * @param {String} filename Имя файла\r\n */\r\nexport async function dataToXLS(data, filename = \"table\", templateName = \"\") {\r\n  const formData = new FormData();\r\n  formData.append(\"filename\", filename);\r\n  formData.append(\"data\", JSON.stringify(data));\r\n  formData.append(\"template\", templateName);\r\n\r\n  const response = await fetch(\"/api/export-excel\", {\r\n    method: \"POST\",\r\n    body: formData\r\n  });\r\n\r\n  return await response.blob();\r\n}\r\n\r\n/**\r\n * Генерация и загрузка XML-файла\r\n * @param {Object data} Объект данных\r\n * @param {String} filename Имя файла\r\n */\r\nexport async function dataToXML(data, filename = \"table\") {\r\n  const formData = new FormData();\r\n  formData.append(\"filename\", filename);\r\n  formData.append(\"data\", JSON.stringify(data));\r\n\r\n  const response = await fetch(\"/api/export-xml\", {\r\n    method: \"POST\",\r\n    body: formData\r\n  });\r\n\r\n  return await response.blob();\r\n}\r\n\r\n/**\r\n * Логиним пользователя\r\n * @param {{}} data\r\n * @param {string} formId\r\n * @return {Promise<{}>}\r\n */\r\nexport async function altrpLogin(data = {}, formId = \"login\") {\r\n  data.altrpLogin = true;\r\n  let res;\r\n  try {\r\n    res = await new Resource({ route: \"/login\" }).post(data);\r\n  } catch (error) {\r\n    let status = error.status;\r\n    if (error.res instanceof Promise) {\r\n      res = await error.res;\r\n    }\r\n    if (error instanceof Promise) {\r\n      res = await error;\r\n    }\r\n    res = mbParseJSON(res, {});\r\n    status && (res.__status = status);\r\n  }\r\n  appStore.dispatch(addResponseData(formId, res));\r\n  if (!(res.success || res._token)) {\r\n    return {\r\n      success: false\r\n    };\r\n  }\r\n  _token = res._token;\r\n\r\n  let currentUser = await new Resource({\r\n    route: \"/ajax/current-user\"\r\n  }).getAll();\r\n  currentUser = currentUser.data;\r\n  appStore.dispatch(changeCurrentUser(currentUser));\r\n  let routes = [];\r\n  try {\r\n    let routesData = await new Resource({\r\n      route: \"/ajax/routes\"\r\n    }).getAll();\r\n\r\n    for (let _data of routesData.pages) {\r\n      routes.push(Route.routeFabric(_data));\r\n    }\r\n    appStore.dispatch(changeAppRoutes(routes));\r\n  } catch (err) {\r\n    console.error(err);\r\n    return { success: false };\r\n  }\r\n  return { success: true };\r\n}\r\n\r\n/**\r\n * Выход\r\n * @return {Promise<{}>}\r\n */\r\nexport async function altrpLogout() {\r\n  let res = await new Resource({ route: \"/logout\" }).post();\r\n  if (!(res.success || res._token)) {\r\n    return {\r\n      success: false\r\n    };\r\n  }\r\n  _token = res._token;\r\n\r\n  let currentUser = await new Resource({\r\n    route: \"/ajax/current-user\"\r\n  }).getAll();\r\n  currentUser = currentUser.data;\r\n  appStore.dispatch(changeCurrentUser(currentUser));\r\n  let routes = [];\r\n  try {\r\n    let routesData = await new Resource({\r\n      route: \"/ajax/routes\"\r\n    }).getAll();\r\n\r\n    for (let _data of routesData.pages) {\r\n      routes.push(Route.routeFabric(_data));\r\n    }\r\n    appStore.dispatch(changeAppRoutes(routes));\r\n  } catch (err) {\r\n    console.error(err);\r\n    return { success: false };\r\n  }\r\n  return { success: true };\r\n}\r\n\r\nexport function cutString(string, maxLength = 80) {\r\n  if (string.length <= maxLength) return string;\r\n  return string.slice(0, maxLength) + \"...\";\r\n}\r\n\r\nexport function sortOptions(options, sortDirection) {\r\n  options.sort((a, b) =>\r\n    a.label.toLowerCase() > b.label.toLowerCase()\r\n      ? 1\r\n      : b.label.toLowerCase() > a.label.toLowerCase()\r\n      ? -1\r\n      : 0\r\n  );\r\n  return sortDirection === \"asc\" ? options : options.reverse();\r\n}\r\n/**\r\n * рекурсивно считает общую длину по пути\r\n * @param {{}} object\r\n * @param {string} path\r\n * @return {number}\r\n */\r\nexport function recurseCount(object = {}, path = \"\") {\r\n  let count = 0;\r\n  if (!path) {\r\n    return count;\r\n  }\r\n  let array = _.get(object, path, []);\r\n  if (!array.length) {\r\n    count++;\r\n    return count;\r\n  }\r\n  array.forEach(item => {\r\n    count += recurseCount(item, path);\r\n  });\r\n  return count;\r\n}\r\n\r\n/**\r\n * Вовращает AltrpModel, в котором храняться все источники данных на странице\r\n * @param {{}} model\r\n * @return {AltrpModel}\r\n */\r\nexport function getAppContext(model = null) {\r\n  const { currentModel } = appStore.getState();\r\n  if(model instanceof AltrpModel){\r\n    model = model.getData();\r\n  }\r\n  const currentModelData = model ? model : currentModel.getData();\r\n  const urlParams = _.cloneDeep(\r\n    window.currentRouterMatch instanceof AltrpModel\r\n      ? window.currentRouterMatch.getProperty(\"params\")\r\n      : {}\r\n  );\r\n  const context = new AltrpModel(_.assign(urlParams, currentModelData));\r\n  const {\r\n    altrpPageState,\r\n    altrpPage,\r\n    altrpMeta,\r\n    currentDataStorage,\r\n    currentUser,\r\n    altrpresponses,\r\n    formsStore\r\n  } = appStore.getState();\r\n\r\n  context.setProperty(\"altrpdata\", currentDataStorage);\r\n  context.setProperty(\"altrppagestate\", altrpPageState);\r\n  context.setProperty(\"altrpmeta\", altrpMeta);\r\n  context.setProperty(\"altrpuser\", currentUser);\r\n  context.setProperty(\"altrpresponses\", altrpresponses);\r\n  context.setProperty(\"altrpforms\", formsStore);\r\n  context.setProperty(\"altrppage\", altrpPage);\r\n  return context;\r\n}\r\n\r\n/**\r\n * Сохраняет состояние виджет в localStorage\r\n * Для виджетов ,которые могут сохранять состояния при смене страниц\r\n * @param {string} widgetId\r\n * @param {*} state\r\n * @return {boolean}\r\n */\r\nexport function storeWidgetState(widgetId, state = null) {\r\n  if (!widgetId) {\r\n    return false;\r\n  }\r\n  const path = `widget_state${widgetId}`;\r\n  return saveDataToLocalStorage(path, state);\r\n}\r\n/**\r\n * Забирает состояние из localStorage\r\n * Для виджетов ,которые могут сохранять состояния при смене страниц\r\n * @param {string} widgetId\r\n * @param {*} _default\r\n * @return {boolean}\r\n */\r\nexport function getWidgetState(widgetId, _default = null) {\r\n  if (!widgetId) {\r\n    return _default;\r\n  }\r\n  const path = `widget_state${widgetId}`;\r\n  return getDataFromLocalStorage(path, _default);\r\n}\r\n\r\n/**\r\n * Сохранить данные в localStorage\r\n * @param {string} name\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nexport function saveDataToLocalStorage(name, data) {\r\n  if (!name) {\r\n    return false;\r\n  }\r\n  if (_.isObject(data)) {\r\n    data = JSON.stringify(data);\r\n  }\r\n  try {\r\n    localStorage.setItem(name, data);\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n  return true;\r\n}\r\n/**\r\n * Сохранить данные в localStorage\r\n * @param {string} name\r\n * @param {*} _default\r\n * @return {*}\r\n */\r\nexport function getDataFromLocalStorage(name, _default = undefined) {\r\n  if (!name) {\r\n    return _default;\r\n  }\r\n  let value\r\n  try {\r\n    value = localStorage.getItem(name);\r\n    if (!value) {\r\n      return _default;\r\n    }\r\n    value = JSON.parse(value);\r\n  } catch (error) {\r\n  }\r\n  if (_.isString(value) && Number(value)) {\r\n    value = Number(value);\r\n  }\r\n  return value || _default;\r\n}\r\nexport function scrollbarWidth() {\r\n  // thanks too https://davidwalsh.name/detect-scrollbar-width\r\n  const scrollDiv = document.createElement(\"div\");\r\n  scrollDiv.setAttribute(\r\n    \"style\",\r\n    \"width: 100px; height: 100px; overflow: scroll; position:absolute; top:-9999px;\"\r\n  );\r\n  document.body.appendChild(scrollDiv);\r\n  const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\r\n  document.body.removeChild(scrollDiv);\r\n  return scrollbarWidth;\r\n}\r\n\r\n/**\r\n * Добавляем свойство altrpIndex для всех эементов-объектов массива\r\n * для их идентификации внутри повторяющихся карточек\r\n * @param {[]} array\r\n */\r\nexport function setAltrpIndex(array = []) {\r\n  if (!_.isArray(array)) {\r\n    return;\r\n  }\r\n  array.forEach((item, idx) => {\r\n    if (!_.isObject(item)) {\r\n      return;\r\n    }\r\n    if (item instanceof AltrpModel) {\r\n      item.setProperty(\"altrpIndex\", idx);\r\n      return;\r\n    }\r\n    item.altrpIndex = idx;\r\n  });\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} font\r\n * @return {*}\r\n */\r\nexport function renderFontLink(font) {\r\n  if (altrpFontsSet[font] !== GOOGLE_FONT) {\r\n    return null;\r\n  }\r\n  font = font.replace(/ /g, \"+\");\r\n  font +=\r\n    \":100,100italic,200,200italic,300,300italic,400,400italic,500,500italic,600,600italic,700,700italic,800,800italic,900,900italic\";\r\n  let fontUrl =\r\n    \"https://fonts.googleapis.com/css?family=\" + font + \"&subset=cyrillic\";\r\n  fontUrl = encodeURI(fontUrl);\r\n  return <link rel=\"stylesheet\" key={fontUrl} href={fontUrl} />;\r\n}\r\n\r\n/**\r\n * Включен ли режим тестирования\r\n */\r\nexport function isAltrpTestMode() {\r\n  return window.location.href.indexOf(\"altrp-test=true\") > 0;\r\n}\r\n\r\n/**\r\n * случайная строка\r\n * @return {string}\r\n */\r\nexport function altrpRandomId() {\r\n  return Math.random()\r\n    .toString(36)\r\n    .substr(2, 9);\r\n}\r\n\r\n/**\r\n * Кнопки для пагинации\r\n * @param pageIndex\r\n * @param pageCount\r\n * @param first_last_buttons_count\r\n * @param middle_buttons_count\r\n * @return {*[]}\r\n */\r\nexport function generateButtonsArray(\r\n  pageIndex,\r\n  pageCount,\r\n  first_last_buttons_count,\r\n  middle_buttons_count\r\n) {\r\n  const buttonsSum = first_last_buttons_count + middle_buttons_count;\r\n  const lastButtons = Array.from(\r\n    { length: first_last_buttons_count },\r\n    (_, i) => pageCount - i - 1\r\n  ).reverse();\r\n  const middleButtons = Array.from(\r\n    { length: middle_buttons_count },\r\n    (_, i) => pageIndex - Math.floor(middle_buttons_count / 2) + i\r\n  );\r\n\r\n  if (pageIndex + 1 < buttonsSum) {\r\n    return [...Array(buttonsSum).keys(), \"ellipsis\", ...lastButtons];\r\n  }\r\n  if (\r\n    pageIndex >=\r\n    pageCount -\r\n      first_last_buttons_count -\r\n      1 -\r\n      Math.floor(middle_buttons_count / 2)\r\n  ) {\r\n    return [\r\n      ...Array(first_last_buttons_count).keys(),\r\n      \"ellipsis\",\r\n      ...Array.from(\r\n        { length: first_last_buttons_count + middle_buttons_count },\r\n        (_, i) => pageCount - i - 1\r\n      ).reverse()\r\n    ];\r\n  }\r\n\r\n  return [\r\n    ...Array(first_last_buttons_count).keys(),\r\n    \"ellipsis\",\r\n    ...middleButtons,\r\n    \"ellipsis\",\r\n    ...lastButtons\r\n  ];\r\n}\r\n\r\n/**\r\n * Проверяем текст на соответствие маске\r\n * @param {string} value\r\n * @param {[]} mask\r\n * @return {boolean}\r\n */\r\nexport function isValueMatchMask(value, mask) {\r\n  if (!value || value.length !== mask.length) {\r\n    return false;\r\n  }\r\n  return (\r\n    value.length &&\r\n    value\r\n      .split(\"\")\r\n      .every((char, index) => char === mask[index] || char.match(mask[index]))\r\n  );\r\n}\r\n\r\n/**\r\n * Вернуть экземпляр конвертера необходимого типа (array - ArrayConverter и т. д.)\r\n * @return {DataConverter}\r\n */\r\nexport function getConverter(data) {\r\n  switch (data.data_type) {\r\n    case \"array\":\r\n      return new ArrayConverter(data);\r\n  }\r\n  return new DataConverter();\r\n}\r\n\r\n/**\r\n * Конвертируются данные\r\n * @param {{} | []} settings\r\n * @param {*} data\r\n */\r\nexport function convertData(settings, data) {\r\n  if (_.isArray(settings)) {\r\n    settings.forEach(item => {\r\n      const converter = getConverter(item);\r\n      data = converter.convertData(data);\r\n    });\r\n  }\r\n  if (settings.data_type) {\r\n    const converter = getConverter(settings);\r\n    data = converter.convertData(data);\r\n  }\r\n  return data;\r\n}\r\nexport function renderIcon(isHidden, icon, defaultIcon, className) {\r\n  if (isHidden) return null;\r\n\r\n  return (\r\n    <span className={className}>\r\n      {icon && icon.assetType ? renderAssetIcon(icon) : defaultIcon}\r\n    </span>\r\n  );\r\n  // if()\r\n}\r\n\r\n/**\r\n * Перенаправление на другую страницу по настройкам LinkController\r\n * @param {{}} linkSettings\r\n * @param {{}} e\r\n * @param {{}} context\r\n */\r\nexport function redirect(linkSettings, e, context = {}) {\r\n  if (_.get(linkSettings, \"toPrevPage\")) {\r\n    if(window.frontAppRouter){\r\n      frontAppRouter.history.goBack();\r\n    } else {\r\n      history.back();\r\n    }\r\n    return;\r\n  }\r\n  if (!_.get(linkSettings, \"url\")) {\r\n    return;\r\n  }\r\n  e.preventDefault();\r\n  e.stopPropagation();\r\n  let { url } = linkSettings;\r\n  url = replaceContentWithData(url, context);\r\n  if (linkSettings.openInNew) {\r\n    window.open(url, \"_blank\");\r\n    return;\r\n  }\r\n  if (linkSettings.tag === \"a\" || ! window.frontAppRouter) {\r\n    window.location.assign(url);\r\n  } else {\r\n    frontAppRouter.history.push(url);\r\n  }\r\n\r\n}\r\n\r\nexport function validateEmail(email) {\r\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@']+(\\.[^<>()[\\]\\\\.,;:\\s@']+)*)|('.+'))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\n/**\r\n * значение настройки в зависимости от разрешения можно использовать вне виджетов с объектом настроек\r\n * @param {{}} settings - объект настроек\r\n * @param {string} settingName\r\n * @param {string} elementState\r\n * @param {*} _default\r\n * @return {*}\r\n */\r\nexport function getResponsiveSetting(\r\n  settings,\r\n  settingName,\r\n  elementState = \"\",\r\n  _default = null\r\n) {\r\n  let  currentScreen\r\n  try{\r\n    currentScreen = window.parent.appStore.getState().currentScreen\r\n  } catch(e){\r\n    // console.trace(e);\r\n    currentScreen = window.appStore.getState().currentScreen\r\n  }\r\n  let _settingName = `${settingName}_${elementState}_`;\r\n  if (currentScreen.name === CONSTANTS.DEFAULT_BREAKPOINT) {\r\n    let setting = settings[_settingName];\r\n\r\n    if (setting === undefined) {\r\n      if(elementState){\r\n        return undefined\r\n      }\r\n      setting = _.get(settings, settingName, _default);\r\n    }\r\n    return setting;\r\n  }\r\n  let suffix = currentScreen.name;\r\n  _settingName = `${settingName}_${elementState}_${suffix}`;\r\n  let setting = settings[_settingName];\r\n  if (setting === undefined) {\r\n    for (let screen of [...CONSTANTS.SCREENS].reverse()) {\r\n      if (\r\n        currentScreen.id < screen.id ||\r\n        screen.name === CONSTANTS.DEFAULT_BREAKPOINT\r\n      ) {\r\n        continue;\r\n      }\r\n\r\n      _settingName = `${settingName}_${elementState}_${screen.name}`;\r\n\r\n      if (settings[_settingName] !== undefined) {\r\n        setting = settings[_settingName];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  if (setting === undefined) {\r\n    if(elementState){\r\n      return undefined\r\n    }\r\n    setting = _.get(settings, settingName, _default);\r\n  }\r\n  return setting;\r\n}\r\n\r\n/**\r\n * Заменяет false, null, true в строке на соответствующие значения\r\n * @param {string} value\r\n * @return {*}\r\n */\r\nexport function valueReplacement(value) {\r\n  switch (value) {\r\n    case \"true\":\r\n      return true;\r\n    case \"false\":\r\n      return false;\r\n    case \"null\":\r\n      return null;\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n * Задержка и с интерфейсом промиса\r\n * @param ms\r\n * @return {Promise}\r\n */\r\nexport function delay(ms) {\r\n  if (_.isString(ms)) {\r\n    ms = Number(ms);\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(resolve, ms);\r\n  });\r\n}\r\n\r\n/**\r\n * Подготавливает URL для шаблона письма\r\n * @param {string} url\r\n * @param {{} | null} context\r\n * @return {string}\r\n */\r\nexport function prepareURLForEmail(url, context = null) {\r\n  if (!_.isString(url) || !url) {\r\n    return url;\r\n  }\r\n  url = url.trim();\r\n  if (url.indexOf(\"http\") !== 0) {\r\n    url = location.origin + url;\r\n  }\r\n  return parseURLTemplate(url, context);\r\n}\r\n\r\nexport function parseIDFromYoutubeURL(youtubeURL) {\r\n  const startIndex = youtubeURL.indexOf(\"v=\") + 2;\r\n  const endIndex = youtubeURL.indexOf(\"&\", startIndex);\r\n\r\n  return youtubeURL.substring(startIndex, endIndex);\r\n}\r\n\r\n/**\r\n *\r\n * @param {{}} context\r\n * @return {{}}\r\n */\r\nexport function prepareContext(context) {\r\n  context.altrpdata = appStore.getState().currentDataStorage.getData();\r\n  context.altrpmodel = appStore.getState().currentModel.getData();\r\n  context.altrpuser = appStore.getState().currentUser.getData();\r\n  context.altrppagestate = appStore.getState().altrpPageState.getData();\r\n  context.altrpresponses = appStore.getState().altrpresponses.getData();\r\n  context.altrpmeta = appStore.getState().altrpMeta.getData();\r\n  return context;\r\n}\r\n\r\n/**\r\n *\r\n * Определеят явлется ли строка валидным JSON\r\n * @param {string} JSONString\r\n * @return {boolean}\r\n */\r\nexport function isJSON(JSONString = \"\") {\r\n  try {\r\n    JSON.parse(JSONString);\r\n    return true;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Парсит xml строку в объект\r\n * @param xml\r\n * @param arrayTags\r\n */\r\nfunction parseXml(xml, arrayTags) {\r\n  let dom = null;\r\n  if (window.DOMParser) dom = new DOMParser().parseFromString(xml, \"text/xml\");\r\n  else if (window.ActiveXObject) {\r\n    dom = new ActiveXObject(\"Microsoft.XMLDOM\");\r\n    dom.async = false;\r\n    if (!dom.loadXML(xml))\r\n      throw dom.parseError.reason + \" \" + dom.parseError.srcText;\r\n  } else throw new Error(\"cannot parse xml string!\");\r\n\r\n  function parseNode(xmlNode, result) {\r\n    if (xmlNode.nodeName === \"#text\") {\r\n      let v = xmlNode.nodeValue;\r\n      if (v.trim()) result[\"#text\"] = v;\r\n      return;\r\n    }\r\n\r\n    let jsonNode = {},\r\n      existing = result[xmlNode.nodeName];\r\n    if (existing) {\r\n      if (!Array.isArray(existing))\r\n        result[xmlNode.nodeName] = [existing, jsonNode];\r\n      else result[xmlNode.nodeName].push(jsonNode);\r\n    } else {\r\n      if (arrayTags && arrayTags.indexOf(xmlNode.nodeName) !== -1)\r\n        result[xmlNode.nodeName] = [jsonNode];\r\n      else result[xmlNode.nodeName] = jsonNode;\r\n    }\r\n\r\n    if (xmlNode.attributes)\r\n      for (let attribute of xmlNode.attributes)\r\n        jsonNode[attribute.nodeName] = attribute.nodeValue;\r\n\r\n    for (let node of xmlNode.childNodes) parseNode(node, jsonNode);\r\n  }\r\n\r\n  let result = {};\r\n  for (let node of dom.childNodes) parseNode(node, result);\r\n\r\n  return result;\r\n}\r\nfunction escapeRegExp(string) {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\r\n}\r\n\r\n/**\r\n * Вернуть значение из строки\r\n * @param string\r\n */\r\nexport function parseStringValue(string) {\r\n  let value = string;\r\n\r\n  if (Number(value)) {\r\n    return Number(value);\r\n  }\r\n  switch (value) {\r\n    case \"true\": {\r\n      return true;\r\n    }\r\n    case \"false\": {\r\n      return false;\r\n    }\r\n    case \"null\": {\r\n      return null;\r\n    }\r\n    case \"undefined\": {\r\n      return undefined;\r\n    }\r\n    case \"0\": {\r\n      return 0;\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n *\r\n * @return {*[]}\r\n */\r\nexport function getBreadcrumbsItems(){\r\n  if(window['h-altrp'] && window.breadcrumbsItems){\r\n    return window.breadcrumbsItems;\r\n  }\r\n  let items = [];\r\n  if(isEditor(0)){\r\n    return items;\r\n  }\r\n  const currentId = window['h-altrp'] ? window.page_id : window.currentPageId\r\n  const {routes} = appStore.getState().appRoutes\r\n  let breadcrumbsClone = [];\r\n  let idCurrent = 0;\r\n  routes.forEach((route, idx) => {\r\n    if(currentId === route.id) {\r\n      idCurrent = idx\r\n    }\r\n  })\r\n\r\n  breadcrumbsClone.push(routes[idCurrent])\r\n\r\n  function getParent(parentId) {\r\n    routes.forEach(route => {\r\n      if(route.id === parentId) {\r\n        breadcrumbsClone.push(route)\r\n        if(route.parent_page_id) {\r\n          getParent(route.parent_page_id)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  if(routes[idCurrent].parent_page_id) {\r\n    getParent(routes[idCurrent].parent_page_id)\r\n  }\r\n\r\n  items = breadcrumbsClone.reverse()\r\n  if(window['h-altrp']){\r\n    window.breadcrumbsItems = items;\r\n  }\r\n  return items;\r\n}\r\n","export const CHANGE_PAGE_STATE = 'CHANGE_PAGE_STATE';\r\nexport const CLEAR_PAGE_STATE = 'CLEAR_PAGE_STATE';\r\n\r\n/**\r\n *\r\n * @param {string}stateName\r\n * @param {*} stateValue\r\n * @return {{}} -\r\n *   {\r\n *     type: {string},\r\n *     stateValue: {},\r\n *     stateName: {string},\r\n *   }\r\n */\r\nexport function changePageState(stateName, stateValue = {}) {\r\n  return {\r\n    type: CHANGE_PAGE_STATE,\r\n    stateName,\r\n    stateValue\r\n  };\r\n}\r\n/**\r\n * Очищает состояние страницы\r\n */\r\nexport function clearPageState() {\r\n  return {\r\n    type: CLEAR_PAGE_STATE,\r\n  };\r\n}\r\n","export const CHANGE_CURRENT_USER = 'CHANGE_CURRENT_USER';\r\nexport const SET_NOTICE_FOR_USER = 'SET_NOTICE_FOR_USER';\r\nexport const SET_USERS_ONLINE = 'SET_USERS_ONLINE';\r\nexport const CHANGE_CURRENT_USER_PROPERTY = \"CHANGE_CURRENT_USER_PROPERTY\";\r\n\r\nexport function changeCurrentUser(user) {\r\n  return {\r\n    type: CHANGE_CURRENT_USER,\r\n    user: user || {}\r\n  };\r\n}\r\n\r\nexport function setUserNotice(notice){\r\n  return { type: SET_NOTICE_FOR_USER, notice }\r\n}\r\n\r\nexport function setUsersOnline(members){\r\n  return { type: SET_USERS_ONLINE, members }\r\n}\r\n\r\nexport function changeCurrentUserProperty(path, value) {\r\n  return {\r\n    type: CHANGE_CURRENT_USER_PROPERTY,\r\n    path: path || \"\",\r\n    value: value || \"\"\r\n  };\r\n}\r\n","export const ADD_RESPONSE_DATA = 'ADD_RESPONSE_DATA';\r\nexport const CLEAR_ALL_RESPONSE_DATA = 'CLEAR_ALL_RESPONSE_DATA';\r\n\r\n/**\r\n * Сохраняет ответ сервера при отправке формы в хранилище\r\n * @param {string}formId\r\n * @param {{}} data\r\n * @return {{}} -\r\n *   {\r\n *     type: {string},\r\n *     dataStorage: {object},\r\n *     dataStorageName: {string},\r\n *   }\r\n */\r\nexport function addResponseData(formId, data = {}) {\r\n  if(data.data) {\r\n    data = data.data;\r\n  }\r\n  return {\r\n    type: ADD_RESPONSE_DATA,\r\n    data,\r\n    formId\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Очищает хранилище\r\n * @return {{type: string}}\r\n */\r\nexport function clearAllResponseData(){\r\n  return {\r\n    type: CLEAR_ALL_RESPONSE_DATA,\r\n  };\r\n}\r\n\r\n"],"sourceRoot":""}