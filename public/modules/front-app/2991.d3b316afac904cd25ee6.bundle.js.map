{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/Skeleton.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/ImagePlaceholder.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/AltrpImage.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/AccordionComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/AdvancedComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ButtonComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/CarouselComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ColumnComponents.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DashboardComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DatePickerComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DiagramComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DividerComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DropbarWidgetComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/FormComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/GalleryComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ImageLightboxComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputCheckboxComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputDateComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputDateRangeComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputRadioComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputRangeSliderComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputSliderComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ListComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/MapComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/MapConstructorComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ProgressBarComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/SectionWidgetComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/StarsComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/TabsSwitcherComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/TooltipComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/TreeComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/VideoComponent.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputFileStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputGalleryStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputMultiSelectStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputSelectStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputTextAutocompleteStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputTextCommonStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getMenuStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getSchedulerStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getTemplateStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheBreadcrumbs.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheHeadingTypeAnimating.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheHeadingTypeHeading.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheImage.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForThePosts.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheTable.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheTabs.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheText.js","webpack:///./resources/modules/front-app/src/js/functions/get-route-styles.js"],"names":["AltrpModel","data","this","cloneDeep","clone","isEmpty","name","defaultValue","get","has","value","getData","set","unset","window","defaultBaseColor","SkeletonSpan","styled","duration","delay","keyframes","Math","floor","undefined","color","highlightColor","props","className","_","isNumber","width","settings","aspect_ratio_size","getResponsiveSetting","Number","height","indexOf","style","custom_aspect","isString","mediaWidth","mediaHeight","altrpHelpers","isEditor","isSSR","renderAsset","AltrpImage","imageRef","React","createRef","visible","element","lazy","altrpImageLazy","state","update","timeoutId","setTimeout","setState","clearTimeout","prevProps","prevState","current","getRoot","popupGUID","popupTrigger","popupID","scrollPosition","scroller","mainScrollbars","document","querySelector","checkElementInViewBox","media","image","noDefault","placeholderStyles","File","default","Object","keys","length","url","assetType","background","placeholder","main_color","ref","getSettings","altrpSkeletonColor","altrpSkeletonHighlightColor","cloneElement","id","Fragment","Component","reactRedux","connect","AccordionComponent","styles","slider","sliderStyled","styledString","AdvancedComponent","size","btnStyles","ButtonComponent","stylesInString","backgroundColorActive","colorPropertyStyled","gradientActive","gradientStyled","backgroundImageActive","backgroundImageControllerToStyles","borderTypeActive","simplePropertyStyled","borderWidthActive","borderWidthStyled","borderColorActive","borderRadiusActive","sizeStyled","boxShadowActive","shadowControllerToStyles","typographicActive","typographicControllerToStyles","colorActive","backgroundColorSvgActive","fillColorSvgActive","strokeColorSvgActive","backgroundColorSvg","backgroundColorSvgHover","fillColorSvg","strokeColorSvg","fillColorSvgHover","strokeColorSvgHover","paddingIconRightBtn","dimensionsControllerToStyles","iconRightSizeBtn","iconSizeStyled","paddingIconLeftBtn","iconLeftSizeBtn","paddingIconTopBtn","iconTopSizeBtn","paddingIconBottomBtn","iconBottomSizeBtn","CarouselComponent","globalDefaults","push","flexWrap","flexDirection","align","justifyContent","overflow","backgroundColor","gradient","zIndex","borderType","borderWidth","borderColor","borderRadius","boxShadow","backgroundColorH","gradientH","borderTypeH","borderWidthH","borderColorH","borderRadiusH","boxShadowH","marginBottom","marginBottomH","backgroundImage","backgroundPosition","backgroundAttachment","backgroundRepeat","backgroundSizeInUnits","backgroundSize","backgroundImageH","backgroundPositionH","backgroundAttachmentH","backgroundRepeatH","backgroundSizeInUnitsH","backgroundSizeH","margin","padding","shadowStyled","layout_column_width","DashboardComponent","style_font_typographic","family","dashboardStyles","DatePickerComponent","elementId","DiagramComponent","DividerComponent","DropbarWidgetComponent","FormComponent","background_section_opacity","inputWrapperStyles","inputWrapperStyle","containerStyles","containerStyle","fieldStyles","typographic","placeholder_and_value_alignment_position_section","position_z_index","input_position","textarea_resize","justify_options","image_select_item_width","image_select_item_height","image_select_image_fit","image_select_image_position","cross_size","unit","fieldStyle","filedSelect2ControllerStyles","fieldSelect2ControlStyle","imageSelectLabelStyles","imageSelectLabel","fieldSelect2SingleValueStyles","fieldSelect2SingleValueStyle","fieldLabelContainerStyles","label_position_top","label_position_left","label_icon_position","fieldLabelContainerStyle","fieldLabelStyles","fieldLabel","labelIconStyles","iconSize","labelIconStyle","placeholderStyle","fieldLabelRequiredStyles","fieldLabelRequired","maskMismatchMessageStyles","maskMismatchMessage","select2Options","GalleryComponent","aspectRatio","def","defaultStyled","objectFit","opacity","filters","transitionDuration","animationDuration","backgroundSizeInUnit","parentClass","filtersControllerToStyles","opacityStyled","fieldAlignment","backgroundColorHover","boxShadowHover","fontTypographic","fontColor","fontTypographicHover","fontColorHover","fontTypographicActive","fontColorActive","colorStyled","fieldStylesHover","fieldStyleHover","fieldStylesActive","fieldStyleActive","fieldStylesFocus","fieldStyleFocus","prefix","InputDateRangeComponent","popoverStyles","aligment","dotColor","dotSize","colorPickedHex","colorRGB","r","g","b","a","colorStyledSecond","InputRangeSliderComponent","tr_x","tr_y","thickness","InputSliderComponent","ListComponent","MapComponent","MapConstructorComponent","ProgressBarComponent","firstColor","switcher","altrpSectionHover","borderStyle","SectionWidgetComponent","childrenLength","verticalAlign","gorizontalAlign","minHeight","altrpSection","altrpSectionColumn","positionTop","positionRight","positionLeft","positionBottom","altrpSectionSecond","altrpSectionSecondHover","altrpBackgroundImage","altrpBackgroundImageHover","altrpSectionBoxed","page_areas","altrpSectionSectionBoxed","altrpSectionFull","StarsComponent","direction","alignment","TabsSwitcherComponent","TooltipComponent","TreeComponent","settingsPrefix","NullArray","VideoComponent","getInputFileStyles","getInputGalleryStyles","columns","v_gap","getInputMultiSelectStyles","getInputMultiSelectPopoverStyles","getInputSelectStyles","button_gradient","getInputSelectPopoverStyles","getInputTextAutocompleteStyles","getInputTextCommonStyles","menuAlignment","renderButton","buttonBg","buttonColor","buttonPadding","border","mainPortalWidth","bg","sub_menu_bg","sub_menu_shadow","menuStyles","styledArray","styledPortalArray","switcher_bgc","switcherBgcActive","switcher_bgc_hover","switcherBorderType","switcherBorderWidth","top","right","bottom","left","bind","switcherBorderColor","switcherHoverBorderColor","toolbarTitleColor","tableBorderColor","getTemplateStyles","colorIcon","icon_ml","icon_mr","delimiter","delimiter_width","delimiter_height","delimiter_ml","delimiter_mr","font","current_color","current_font","getHeadingTypeAnimatingStyles","justifyContentHeaddingSubHover","marginBottomForHorizontalHover","marginBottomForVerticalHover","marginBottomForRotateHover","typographicAnimating","colorAnimating","typographicAnimatingHover","colorAnimatingHover","typographicNoAnimating","colorNoAnimating","typographicNoAnimatingHover","colorNoAnimatingHover","strokeWidthAnimatingSvg","colorAnimatingSvg","strokeWidthAnimatingSvgHover","colorAnimatingSvgHover","getHeadingTypeHeadingStyles","justifyContentHeaddingSub","textShadowHeaddingSub","textShadowControllerToStyles","typographicHeaddingSub","paddingHeaddingSub","colorHeaddingSub","backgroundColorHeaddingSub","widthHeadingSub","textShadowHeaddingSubHover","typographicHeaddingSubHover","paddingHeaddingSubHover","colorHeaddingSubHover","backgroundColorHeaddingSubHover","widthHeadingSubHover","marginTop","marginTopHover","marginBottomHover","marginRight","marginRightHover","marginLeft","marginLeftHover","textAlignAdvancedWrapper","backgroundColorHeadingAdvanced","colorHeadingAdvanced","paddingHeadingAdvanced","typographicHeadingAdvanced","textShadowHeadingAdvanced","borderTypeHeadingAdvanced","borderWidthHeadingAdvanced","borderColorHeadingAdvanced","borderRadiusHeadingAdvanced","opacityHeadingAdvanced","backgroundColorHeadingAdvancedHover","colorHeadingAdvancedHover","paddingHeadingAdvancedHover","typographicHeadingAdvancedHover","textShadowHeadingAdvancedHover","borderTypeHeadingAdvancedHover","borderWidthHeadingAdvancedHover","borderColorHeadingAdvancedHover","borderRadiusHeadingAdvancedHover","opacityHeadingAdvancedHover","marginBottomForHorizontal","marginBottomForVertical","marginBottomForRotate","textShadow","transform","translateStyled","colorLinkHover","colorHover","typographicHover","textShadowHover","marginHover","paddingHover","zIndexHover","opacityHover","gradientHover","borderTypeHover","borderWidthHover","borderColorHover","borderRadiusHover","transformHover","backgroundImageHover","backgroundPositionHover","backgroundAttachmentHover","backgroundRepeatHover","backgroundSizeInUnitsHover","backgroundSizeHover","getPostsStyles","flexDirectionPaginPrev","marginPaginPrev","paddingPaginPrev","colorPaginPrev","typographicPaginPrev","borderTypePaginPrev","borderWidthPaginPrev","borderColorPaginPrev","borderRadiusPaginPrev","boxShadowPaginPrev","flexDirectionPaginPrevHover","marginPaginPrevHover","paddingPaginPrevHover","colorPaginPrevHover","typographicPaginPrevHover","borderTypePaginPrevHover","borderWidthPaginPrevHover","borderColorPaginPrevHover","borderRadiusPaginPrevHover","boxShadowPaginPrevHover","marginPaginPrevSvgImg","marginPaginPrevSvgImgHover","sizePaginPrevSvg","sizePaginPrevSvgHover","heightPaginPrevImg","heightPaginPrevImgHover","fillPaginPrevPath","fillPaginPrevPathHover","flexDirectionPaginNext","marginPaginNext","paddingPaginNext","colorPaginNext","typographicPaginNext","borderTypePaginNext","borderWidthPaginNext","borderColorPaginNext","borderRadiusPaginNext","boxShadowPaginNext","flexDirectionPaginNextHover","marginPaginNextHover","paddingPaginNextHover","colorPaginNextHover","typographicPaginNextHover","borderTypePaginNextHover","borderWidthPaginNextHover","borderColorPaginNextHover","borderRadiusPaginNextHover","boxShadowPaginNextHover","marginPaginNextSvgImg","marginPaginNextSvgImgHover","sizePaginNextSvg","sizePaginNextSvgHover","heightPaginNextImg","heightPaginNextImgHover","fillPaginNextPath","fillPaginNextPathHover","marginPaginCount","backgroundColorPaginCount","paddingPaginCount","marginPaginCountHover","backgroundColorPaginCountHover","paddingPaginCountHover","colorPaginCountPagesItem","colorPaginCountPagesItemHover","marginPaginPagesItem","backgroundColorPaginPagesItem","borderTypePaginPagesItem","borderWidthPaginPagesItem","borderRadiusPaginPagesItem","borderColorPaginPagesItem","boxShadowPaginPagesItem","marginPaginPagesItemHover","backgroundColorPaginPagesItemHover","borderTypePaginPagesItemHover","borderWidthPaginPagesItemHover","borderRadiusPaginPagesItemHover","borderColorPaginPagesItemHover","boxShadowPaginPagesItemHover","colorActivePaginPagesItem","backgroundColorActivePaginPagesItem","borderColorActivePaginPagesItem","colorActivePaginPagesItemHover","backgroundColorActivePaginPagesItemHover","borderColorActivePaginPagesItemHover","typographicPaginPaginPagesItem","typographicPaginPaginPagesItemHover","marginPaginEllipsis","colorPaginEllipsis","typographicPaginEllipsis","marginPaginEllipsisHover","colorPaginEllipsisHover","typographicPaginEllipsisHover","marginPaginGotoPage","paddingPaginGotoPage","colorPaginGotoPage","backgroundColorPaginGotoPage","borderTypePaginGotoPage","borderWidthPaginGotoPage","borderColorPaginGotoPage","borderRadiusPaginGotoPage","boxShadowPaginGotoPage","marginPaginGotoPageHover","paddingPaginGotoPageHover","colorPaginGotoPageHover","backgroundColorPaginGotoPageHover","borderTypePaginGotoPageHover","borderWidthPaginGotoPageHover","borderColorPaginGotoPageHover","borderRadiusPaginGotoPageHover","boxShadowPaginGotoPageHover","paddingPosts","paddingPostsHover","paddingPaginPages","paddingPaginPagesHover","typographicPaginPaginGotoPages","typographicPaginPaginGotoPagesHover","typographicPaginPaginPagesItemCountPrev","typographicPaginPaginPagesItemCountPrevHover","marginPaginSelectSize","marginPaginSelectSizeHover","paddingPaginSelectSizeControl","paddingPaginSelectSizeControlHover","typographicPaginPaginSelectSize","typographicPaginPaginSelectSizeHover","borderTypePaginSelect2Control","borderWidthPaginSelect2Control","borderRadiusPaginSelect2Control","borderColorPaginSelect2Control","boxShadowPaginSelect2Control","colorPaginSelect2Control","backgroundColorPaginSelect2Control","borderTypePaginSelect2ControlHover","borderWidthPaginSelect2ControlHover","borderRadiusPaginSelect2ControlHover","borderColorPaginSelect2ControlHover","boxShadowPaginSelect2ControlHover","colorPaginSelect2ControlHover","backgroundColorPaginSelect2ControlHover","getTableStyles","flexDirectionHover","marginPaginationSvg","marginPaginationSvgHover","iconSizeHover","iconSizeNextImg","iconSizeNextImgHover","iconFillNextPath","iconFillNextPathHover","flexDirectionPaginationPrev","marginPaginationPrev","flexDirectionPaginationPrevHover","marginPaginationPrevHover","marginPrevSvg","iconSizePrevSvg","marginPrevSvgHover","iconSizePrevSvgHover","iconSizePrevImg","iconSizePrevImgHover","iconFillPrevPath","iconFillPrevPathHover","colorReplaceText","typographicReplaceText","colorReplaceTextHover","typographicReplaceTextHover","widthPictureReplacePicture","heightReplacePicture","paddingGroupedColumn","paddingGroupedColumnHover","iconFillTableThPath","iconFillTableThPathHover","iconSizeGroupedColumnSvgImg","iconSizeGroupedColumnSvgImgHover","paddingNotGroupedColumn","paddingNotGroupedColumnHover","iconFillNotGroupedColumnPath","iconFillNotGroupedColumnPathHover","iconSizeNotGroupedColumnSvgImg","iconSizeNotGroupedColumnSvgImgHover","paddingExpandedRow","paddingExpandedRowHover","iconFillExpandedRowPath","iconFillExpandedRowPathHover","iconSizeExpandedRowSvgImg","iconSizeExpandedRowSvgImgHover","paddingNotExpandedRow","paddingNotExpandedRowHover","iconFillNotExpandedRowPath","iconFillNotExpandedRowPathHover","iconSizeNotExpandedRowSvgImg","iconSizeNotExpandedRowSvgImgHover","colorThNthChild","colorThNthChildHover","colorFieldSelect2ControlBtn","backgroundColorFieldSelect2ControlBtn","inputPaddingFieldSelect2ControlBtn","typographicFieldSelect2ControlBtn","borderTypeFieldSelect2ControlBtn","borderWidthFieldSelect2ControlBtn","borderColorFieldSelect2ControlBtn","colorFieldSelect2ControlBtnHover","backgroundColorFieldSelect2ControlBtnHover","inputPaddingFieldSelect2ControlBtnHover","typographicFieldSelect2ControlBtnHover","borderTypeFieldSelect2ControlBtnHover","borderWidthFieldSelect2ControlBtnHover","borderColorFieldSelect2ControlBtnHover","labelPaddingLabel","labelPaddingLabelHover","textAlignTableTh","typographicTableTh","colorTableTh","paddingTableTh","borderTypeTableTh","borderColorTableTh","borderWidthTableTh","backgroundColorTableTh","textAlignTableThHover","typographicTableThHover","colorTableThHover","paddingTableThHover","borderTypeTableThHover","borderColorTableThHover","borderWidthTableThHover","backgroundColorTableThHover","backgroundColorTableHead","backgroundColorTableHeadHover","borderWidthTableThNotFirstChild","marginTopLeftStyled","borderWidthTableThNotFirstChildHover","borderWidthTableTrNotFirstChild","borderWidthTableTrNotFirstChildHover","verticalAlignDivNotAltrpElement","verticalAlignDivNotAltrpElementHover","textAlignTableTd","paddingTableTd","borderTypeTableTd","borderColorTableTd","colorTableTd","typographicTableTd","borderWidthTableTd","textAlignTableTdHover","paddingTableTdHover","borderTypeTableTdHover","borderColorTableTdHover","colorTableTdHover","typographicTableTdHover","borderWidthTableTdHover","colorTableTdA","typographicTableTdA","colorTableTdAHover","typographicTableTdAHover","backgroundColorTbodyBackground","backgroundColorTbodyBackgroundHover","borderWidthTransposeTableTdNot","borderWidthTransposeTableTdNotHover","borderWidthTransposeTableTdNotTd","borderWidthTransposeTableTdNotTdHover","colorTdGrouping","typographicTdGrouping","paddingTdGrouping","colorTdGroupingHover","typographicTdGroupingHover","paddingTdGroupingHover","backgroundColorTbodyTdGrouping","textAlignTbodyTdGrouping","backgroundColorTbodyTdGroupingHover","textAlignTbodyTdGroupingHover","verticalAlignDivNotAltrpElTd","verticalAlignDivNotAltrpElTdHover","iconSizeTdGroupingIconSvg","iconLeftSpaceTdGroupingIconSvg","iconRightSpaceTdGroupingIconSvg","iconTopTranslateTdGroupingIconSvg","iconLeftTranslateTdGroupingIconSvg","iconSizeTdGroupingIconSvgHover","iconLeftSpaceTdGroupingIconSvgHover","iconRightSpaceTdGroupingIconSvgHover","iconTopTranslateTdGroupingIconSvgHover","iconLeftTranslateTdGroupingIconSvgHover","iconFillTdGroupingIconSvgPath","iconFillTdGroupingIconSvgPathHover","paddingTableFootTd","textAlignTableFootTd","backgroundColorTableFootTd","colorTableFootTd","typographicTableFootTd","paddingTableFootTdHover","textAlignTableFootTdHover","backgroundColorTableFootTdHover","colorTableFootTdHover","typographicTableFootTdHover","paddingGlobalFilterLabel","colorGlobalFilterLabel","typographicGlobalFilterLabel","paddingGlobalFilterLabelHover","colorGlobalFilterLabelHover","typographicGlobalFilterLabelHover","paddingGlobalFilterInput","widthGlobalFilterInput","marginLeftGlobalFilterInput","colorGlobalFilterInput","backgroundColorGlobalFilterInput","typographicGlobalFilterInput","borderTypeGlobalFilterInput","borderWidthGlobalFilterInput","borderRadiusGlobalFilterInput","borderColorGlobalFilterInput","boxShadowGlobalFilterInput","paddingGlobalFilterInputHover","widthGlobalFilterInputHover","marginLeftGlobalFilterInputHover","colorGlobalFilterInputHover","backgroundColorGlobalFilterInputHover","typographicGlobalFilterInputHover","borderTypeGlobalFilterInputHover","borderWidthGlobalFilterInputHover","borderRadiusGlobalFilterInputHover","borderColorGlobalFilterInputHover","boxShadowGlobalFilterInputHover","paddingPagination","paddingPaginationHover","typographicPaginationPrev","typographicPaginationPrevHover","typographicPaginationNext","typographicPaginationNextHover","typographicPaginationPagesItem","typographicPaginationPagesItemHover","colorPaginationPrevNext","backgroundColorPaginationPrevNext","paddingPaginationPrevNext","borderTypePaginationPrevNext","borderWidthPaginationPrevNext","borderRadiusPaginationPrevNext","borderColorPaginationPrevNext","boxShadowPaginationPrevNext","colorPaginationPrevNextHover","backgroundColorPaginationPrevNextHover","paddingPaginationPrevNextHover","borderTypePaginationPrevNextHover","borderWidthPaginationPrevNextHover","borderRadiusPaginationPrevNextHover","borderColorPaginationPrevNextHover","boxShadowPaginationPrevNextHover","typographicNextItemCountPrevGotoSelect","typographicNextItemCountPrevGotoSelectHover","marginPaginationCount","colorPaginationCount","backgroundColorPaginationCount","paddingPaginationCount","marginPaginationCountHover","colorPaginationCountHover","backgroundColorPaginationCountHover","paddingPaginationCountHover","marginPaginationEllipsis","colorPaginationEllipsis","typographicPaginationEllipsis","marginPaginationEllipsisHover","colorPaginationEllipsisHover","typographicPaginationEllipsisHover","marginPaginationGotoPages","paddingPaginationGotoPages","colorPaginationGotoPages","backgroundColorPaginationGotoPages","borderTypePaginationGotoPages","borderWidthPaginationGotoPages","borderRadiusPaginationGotoPages","borderColorPaginationGotoPages","boxShadowPaginationGotoPages","marginPaginationGotoPagesHover","paddingPaginationGotoPagesHover","colorPaginationGotoPagesHover","backgroundColorPaginationGotoPagesHover","borderTypePaginationGotoPagesHover","borderWidthPaginationGotoPagesHover","borderRadiusPaginationGotoPagesHover","borderColorPaginationGotoPagesHover","boxShadowPaginationGotoPagesHover","widthPaginSelectSizeControl","borderTypePaginSelectSizeControl","borderWidthPaginSelectSizeControl","borderRadiusPaginSelectSizeControl","borderColorPaginSelectSizeControl","boxShadowPaginSelectSizeControl","colorPaginSelectSizeControl","backgroundColorPaginSelectSizeControl","widthPaginSelectSizeControlHover","borderTypePaginSelectSizeControlHover","borderWidthPaginSelectSizeControlHover","borderRadiusPaginSelectSizeControlHover","borderColorPaginSelectSizeControlHover","boxShadowPaginSelectSizeControlHover","colorPaginSelectSizeControlHover","backgroundColorPaginSelectSizeControlHover","typographicPaginSelectSize","marginCheckIconSvg","sizeCheckIconSvg","marginCheckIconSvgHover","sizeCheckIconSvgHover","marginUncheckIconSvg","sizeUncheckIconSvg","marginUncheckIconSvgHover","sizeUncheckIconSvgHover","marginCheckIconIndeterminateSvg","sizeCheckIconIndeterminateSvg","marginCheckIconIndeterminateSvgHover","sizeCheckIconIndeterminateSvgHover","iconFillCheckIconCheckedPath","iconFillCheckIconCheckedPathHover","iconFillCheckIconUncheckedPath","iconFillCheckIconUncheckedPathHover","iconFillCheckIconIndeterminatePath","iconFillCheckIconIndeterminatePathHover","sliderSizeTableResizer","backgroundColorTableResizer","sliderSizeTableResizerHover","backgroundColorTableResizerHover","backgroundColorTableResizerResizing","backgroundColorTableResizerResizingHover","filtersImage","filtersImageHover","fill","i_size","contentBackgroundColor","contentPadding","contentBorderType","contentBorderWidth","contentBorderColor","contentBorderRadius","indicatorColor","getTextStyles","columnCount","columnGap","columnGapStyled","borderRadiusStyled","paragraphMargin","textIndent","blockquoteMargin","blockquotePadding","blockquoteBackgroundColor","blockquoteBorderStyle","blockquoteBorderWidth","blockquoteBorderColor","blockquoteBorderRadius","blockquoteBoxShadow","blockquoteTypographic","blockquoteTextShadow","tableMargin","tableBackgroundColor","tableBorderStyle","tableBorderWidth","tableOddRowsColor","tableCellsPadding","dimensionsStyled","tableCellsBorderStyle","tableCellsBorderWidth","tableCellsBorderColor","tableCellsTypographic","tableCellsTextShadow","linkTypographic","linkTextShadow","numberedListMargin","numberedListItemMargin","numberedListStyle","unorderedListMargin","unorderedListItemMargin","unorderedListStyle","FRONT_DEFAULT_AREAS","getRouteStyles","areas","isArray","filter","area","columnsGrid","rightSidebar","find","area_type","sidebar_location","leftSidebar","sidebar_width","contentRow","getCustomCSS","getSetting"],"mappings":"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","file":"2991.d3b316afac904cd25ee6.bundle.js","sourcesContent":["/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","import styled, { keyframes} from 'styled-components';\r\n\r\nexport const defaultBaseColor = \"#eee\";\r\n\r\nexport const defaultHighlightColor = \"#f5f5f5\";\r\n\r\nexport const skeletonKeyframes = (duration, delay) => keyframes`\r\n  0% {\r\n    background-position: -200px 0;\r\n  }\r\n  ${\r\n  delay > 0\r\n    ? `${Math.floor((1 / (duration + delay)) * duration * 100)}% {\r\n    background-position: calc(200px + 100%) 0;\r\n  }`\r\n    : undefined\r\n}\r\n  100% {\r\n    background-position: calc(200px + 100%) 0;\r\n  }\r\n`;\r\nconst SkeletonSpan = styled.span`\r\n  animation: ${skeletonKeyframes} 1.2s ease-in-out infinite;\r\n  background-color: ${({color})=>`${color || defaultBaseColor}`};\r\n  background-size: 200px 100%;\r\n  background-repeat: no-repeat;\r\n  background-image: linear-gradient(90deg, ${({highlightColor, color})=>{\r\n    return `${color || defaultBaseColor}, ${highlightColor || defaultHighlightColor}, ${color || defaultBaseColor}`;\r\n  }});\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  height: 100%;\r\n`;\r\nconst Skeleton = (props) => <div className={props.className}><SkeletonSpan {...props} className=\"altrp-skeleton__span\"/></div>\r\nexport default Skeleton;\r\n","import styled from 'styled-components';\r\nimport {getResponsiveSetting} from \"../../../../../front-app/src/js/helpers\";\r\n\r\nconst ImagePlaceholder = styled.div`& {\r\n  position: relative;\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  width:${props => {\r\n  if (_.isNumber(props.width)) {\r\n    return props.width + 'px';\r\n  }\r\n  return props.width ? props.width : '100%'\r\n}};\r\n${(props) => {\r\n  const {settings} = props;\r\n  const aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n  if(Number(aspect_ratio_size) !== 0 && aspect_ratio_size === 'custom'|| Number(aspect_ratio_size)){\r\n    return 'height:auto;'\r\n  }\r\n  if(! props.height || props.height.indexOf('%') !== -1) {\r\n    return 'height:auto;'\r\n  }\r\n  return `height:${props.height ? props.height : 'auto'};`;\r\n}}\r\n\r\n  background-color: ${props => props.color ? props.color : '#fff'};\r\n}\r\n&::before{\r\n  display: block;\r\n  content: '';\r\n  width: 100%;\r\n${(props) => {\r\n  const {settings, height} = props;\r\n  let style = '';\r\n  const aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n  if(Number(aspect_ratio_size) !== 0) {\r\n    if(aspect_ratio_size === 'custom') {\r\n      let custom_aspect = getResponsiveSetting(settings, 'custom_aspect');\r\n      custom_aspect = Number(custom_aspect) || 100;\r\n      style += `padding-top:${custom_aspect}%;`;\r\n    } else if(Number(aspect_ratio_size)){\r\n      style += `padding-top:${aspect_ratio_size}%;`;\r\n    }\r\n    return style;\r\n  }\r\n  if (height && _.isString(height) && height.indexOf('%') === -1) {\r\n    return style;\r\n  }\r\n  if (Number(props.mediaWidth) && Number(props.mediaHeight)) {\r\n    style += `padding-top:${(props.mediaHeight / props.mediaWidth) * 100}%;`\r\n  }\r\n  return style;\r\n}};\r\n}\r\n&& .altrp-skeleton,\r\n&& .altrp-image{\r\n  position:absolute;\r\n  top:0;\r\n  left:0;\r\n  right:0;\r\n  bottom:0;\r\n  height:100%;\r\n  width:100%;\r\n}\r\n`;\r\n\r\nexport default ImagePlaceholder;\r\n","import Skeleton from './Skeleton';\r\nimport ImagePlaceholder from \"./ImagePlaceholder\";\r\nimport {checkElementInViewBox} from \"../../../../../front-app/src/js/helpers/elements\";\r\nconst {isEditor, isSSR, renderAsset} = window.altrpHelpers;\r\n\r\nclass AltrpImage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n    let visible = true;\r\n    if(isSSR() && ! props.element?.getResponsiveSetting('lazyload_disable')){\r\n      visible = false;\r\n    } else if (isEditor() || props.lazy === false) {\r\n\r\n    } else if (window.altrpImageLazy\r\n        && window.altrpImageLazy !== 'none'\r\n        && props.element\r\n        && ! props.element?.getResponsiveSetting('lazyload_disable')) {\r\n      visible = false;\r\n    }\r\n    this.state = {\r\n      visible,\r\n      update: 0,\r\n    };\r\n    this.timeoutId = setTimeout(() => this.setState(state => ({...state, update: state.update++})), 500);\r\n  }\r\n\r\n  /**\r\n   * очищаем обновление\r\n   */\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timeoutId);\r\n  }\r\n\r\n  /**\r\n   * Проверим нужно ли обновить видимость\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(this.state.visible){\r\n      clearTimeout(this.timeoutId);\r\n    }\r\n    if (this.state.visible || ! this.imageRef.current) {\r\n      return;\r\n    }\r\n    if(this.props?.element?.getRoot()?.popupGUID && this.props.element.getRoot().popupGUID === this.props.popupTrigger.popupID){\r\n      this.setState(state => ({...state, visible: true}));\r\n    }\r\n    if (prevProps.scrollPosition === this.props.scrollPosition && prevState.update === this.state.update) {\r\n      return;\r\n    }\r\n    let scroller = window.mainScrollbars;\r\n    if(! scroller){\r\n      scroller = document.querySelector('.front-app-content');\r\n    }\r\n    if(! scroller){\r\n      scroller = document.querySelector('.front-app');\r\n    }\r\n    if (this.imageRef.current && checkElementInViewBox(this.imageRef.current, scroller)) {\r\n      clearTimeout(this.timeoutId);\r\n      this.setState(state => ({...state, visible: true}));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let media = {...this.props.image};\r\n    const {visible} = this.state;\r\n    const noDefault = this.props.noDefault || false;\r\n    const placeholderStyles = {};\r\n\r\n    let width = this.props.width;\r\n\r\n    let height = this.props.height;\r\n    if (! isSSR() && this.props.image instanceof File) {\r\n      media = this.props.image\r\n    } else {\r\n      if (this.props.default) {\r\n        if ((Object.keys(media).length === 0)) {\r\n          media = this.props.default;\r\n        }\r\n      } else if (noDefault) {\r\n        return \"\"\r\n      } else {\r\n        media.url = media.url || '/img/nullImage.png';\r\n        media.name = media.name || 'null';\r\n        media.assetType = media.assetType || undefined;\r\n      }\r\n    }\r\n    let image = renderAsset(media);\r\n    if(visible || window.altrpImageLazy === 'skeleton'){\r\n      placeholderStyles.background = 'transparent';\r\n    }\r\n\r\n    let placeholder = <ImagePlaceholder color={media.main_color}\r\n                                        className={'altrp-image-placeholder '}\r\n                                        ref={this.imageRef}\r\n                                        settings={this.props.element?.getSettings() || {}}\r\n                                        height={height}\r\n                                        width={width}\r\n                                        style={placeholderStyles}\r\n                                        mediaWidth={media.width || 100}\r\n                                        mediaHeight={media.height || 75}>\r\n      {window.altrpImageLazy === 'skeleton'\r\n        && ! visible\r\n        &&\r\n          <Skeleton className=\"altrp-skeleton\"\r\n                    color={window.altrpSkeletonColor}\r\n                    highlightColor={window.altrpSkeletonHighlightColor}/>\r\n\r\n      }\r\n      {visible && React.cloneElement(image, {\r\n        className: this.props.className,\r\n        id: this.props.id || null,\r\n        style: this.props.style,\r\n      })}\r\n      </ImagePlaceholder>;\r\n\r\n    return <React.Fragment>\r\n      {placeholder}\r\n    </React.Fragment>\r\n  }\r\n}\r\n\r\nlet _export;\r\nif (isEditor()) {\r\n  _export = AltrpImage;\r\n} else {\r\n\r\n  function mapStateToProps(state) {\r\n    return {\r\n      scrollPosition: state.scrollPosition,\r\n      popupTrigger: state.popupTrigger,\r\n    };\r\n  }\r\n\r\n  _export = window.reactRedux.connect(mapStateToProps)(AltrpImage)\r\n}\r\nexport default _export;\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function AccordionComponent(settings) {\r\n  const styles = [\r\n    \"altrp-accordion-item-label\",\r\n\r\n    [\"\", \"font_typographic_title_style\", \"typographic\"],\r\n    [\"text-align\", \"alignment_item_style\"],\r\n    [\"color\", \"color_title_style\", \"color\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"spacing_icon_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `margin-left: ${slider}; margin-right: ${slider};`\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-label:hover\",\r\n\r\n    [\"color\", \"color_title_style\", \"color\", \":hover\"],\r\n    [\"\", \"font_typographic_title_style\", \"typographic\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-content\",\r\n\r\n    [\"background-color\", \"background_color_content_style\", \"color\"],\r\n    [\"color\", \"color_content_style\", \"color\"],\r\n    [\"border-radius\", \"border_radius_content_style\", \"dimensions\"],\r\n    [\"text-align\", \"alignment_item_style\"],\r\n    [\"margin-top\", \"spacing_content_style\", \"slider\"],\r\n    [\"\", \"typographic_content_style\", \"typographic\"],\r\n    [\"border-color\", \"border_color_content_style\", \"color\"],\r\n    [\"border-style\", \"border_type_content_style\" ],\r\n    [\"border-width\", \"border_width_content_style\", \"dimensions\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-content:hover\",\r\n\r\n    [\"background-color\", \"background_color_content_style\", \"color\", \":hover\"],\r\n    [\"color\", \"color_content_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius_content_style\", \"dimensions\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n\r\n    \"altrp-accordion-item-content-text\",\r\n\r\n    [\"padding\", \"padding_content_style\", \"dimensions\"],\r\n    [\"\", \"typographic_content_style\", \"typographic\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-content-text:hover\",\r\n\r\n    [\"padding\", \"padding_content_style\", \"dimensions\", \":hover\"],\r\n    [\"\", \"typographic_content_style\", \"typographic\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item\",\r\n\r\n    [\"margin-top\", \"spacing_item_style\", \"slider\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-button\",\r\n\r\n    [\"flex-direction\", \"alignment_icon_style\"],\r\n    [\"background-color\", \"background_color_title_style\", \"color\"],\r\n    [\"border-style\", \"border_type_title_style\" ],\r\n    [\"border-width\", \"border_width_title_style\", \"dimensions\"],\r\n    [\"border-color\", \"border_color_title_style\", \"color\"],\r\n    [\"border-radius\", \"border_radius_title_style\", \"dimensions\"],\r\n    [\"padding\", \"padding_title_style\", \"dimensions\"],\r\n    [\"\", \"box_shadow_title_style\", \"shadow\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-button:hover\",\r\n\r\n    [\"background-color\", \"background_color_title_style\", \"color\", \":hover\"],\r\n    [\"border-style\", \"border_type_title_style\", null, \":hover\"],\r\n    [\"border-width\", \"border_width_title_style\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color_title_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius_title_style\", \"dimensions\", \":hover\"],\r\n    [\"padding\", \"padding_title_style\", \"dimensions\", \":hover\"],\r\n    [\"\", \"box_shadow_title_style\", \"shadow\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-button.active\",\r\n\r\n    [\"background-color\", \"background_color_title_style\", \"color\", \".active\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-icon svg\",\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"spacing_icon_size\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `width: ${slider}; height: ${slider};`\r\n      }\r\n    },\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-icon svg path\",\r\n\r\n    [\"fill\", \"color_icon_style\", \"color\"],\r\n\r\n    \"}\",\r\n    \"altrp-accordion-item.active .altrp-accordion-item-icon path\",\r\n\r\n    [\"fill\", \"color_icon_style\", \"color\", '.active'],\r\n\r\n    \"}\",\r\n\r\n\r\n    \"altrp-accordion-item-button:hover .altrp-accordion-item-label\",\r\n\r\n    [\"color\", \"color_title_style\", \"color\", \":hover\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"spacing_icon_style\", \":hover\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `margin-left: ${slider}; margin-right: ${slider};`\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-button:hover .altrp-accordion-item-icon path\",\r\n\r\n    [\"fill\", \"color_icon_style\", \"color\", \":hover\"],\r\n\r\n    \"}\",\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function AdvancedComponent(settings) {\r\n\r\n  const styles = [\r\n    [\"z-index\", \"z_index\"],\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"advanced_opacity\");\r\n\r\n      if(value && value.size) {\r\n        return `opacity: ${value.size};`\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    // () => {\r\n    //   let element_css_editor = getResponsiveSetting(settings, \"element_css_editor\");\r\n    //   console.log(element_css_editor);\r\n    //   return _.isString(element_css_editor) ? element_css_editor.replace(/__selector__/g, '&') : '';\r\n    // },\r\n\r\n    [\"padding\", \"positioning_padding\", \"dimensions\"],\r\n    [\"margin\", \"positioning_margin\", \"dimensions\"],\r\n\r\n    [\"width\", \"positioning_width_type\"],\r\n    [\"width\", \"positioning_custom_width\", \"slider\"],\r\n\r\n    [\"align-self\", \"positioning_vertical_align\"],\r\n\r\n    [\"position\", \"positioning_position_type\", \"\", \"\"],\r\n\r\n    [\"left\", \"positioning_horizontal_offset\", \"slider\"],\r\n    [\"bottom\", \"positioning_vertical_offset\", \"slider\"],\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {\r\n  sliderStyled,\r\n  styledString,\r\n  colorPropertyStyled,\r\n  gradientStyled,\r\n  backgroundImageControllerToStyles,\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  sizeStyled,\r\n  shadowControllerToStyles,\r\n  typographicControllerToStyles,\r\n  iconSizeStyled,\r\n  dimensionsControllerToStyles,\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nexport function btnStyles(settings) {\r\n  return [\r\n    \"altrp-btn-wrapper\",\r\n\r\n    [\"align-items\", \"button_alignment\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-btn\",\r\n    // [\"flex-direction\", \"button_icon_position\"],\r\n    [\"justify-content\", \"content_alignment\"],\r\n    [\"margin\", \"position_margin\", \"dimensions\"],\r\n    [\"padding\", \"position_padding\", \"dimensions\"],\r\n    [\"z-index\", \"position_z_index\"],\r\n    [\"transition-property\", \"button_transition_property\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"button_transition_duration\");\r\n\r\n      if(value) {\r\n        return `transition-duration: ${value.size}s;`;\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    [\"transition-timing-function\", \"button_transition_timing\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"button_transition_delay\");\r\n\r\n      if (value) {\r\n        return `transition-delay: ${value.size}s;`;\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"position_opacity\");\r\n\r\n      if(value && value.size) {\r\n        return `opacity: ${value.size};`\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    [\"background-color\", \"background_color\", \"color\"],\r\n    [\"\", \"gradient\", \"gradient\"],\r\n    [\"\", \"background_image\", \"media\"],\r\n    [\"border-style\", \"border_type\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\"],\r\n    [\"border-color\", \"border_color\", \"color\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\"],\r\n    [\"\", \"style_background_shadow\", \"shadow\"],\r\n    [\"\", \"font_typographic\", \"typographic\"],\r\n    [\"color\", \"font_color\", \"color\"],\r\n\r\n    \"&:hover\",\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"position_opacity\", ':hover');\r\n\r\n      if (value && value.size) {\r\n        return `opacity: ${value.size};`\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    [\"background-color\", \"background_color\", \"color\", \":hover\"],\r\n    [\"\", \"gradient\", \"gradient\", \":hover\"],\r\n    [\"border-style\", \"border_type\", \"\", \":hover\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\", \":hover\"],\r\n    [\"\", \"style_background_shadow\", \"shadow\", \":hover\"],\r\n    [\"color\", \"font_color\", \"color\", \":hover\"],\r\n    [\"\", \"background_image\", \"media\", \":hover\"],\r\n\r\n    \"& .altrp-btn-icon\",\r\n    // [\"width\", \"icon_size\", \"slider\", \":hover\"],\r\n    // [\"height\", \"icon_size\", \"slider\", \":hover\"],\r\n\r\n    \"& svg\",\r\n    [\"background-color\", \"icon_color_background\", \"color\", \":hover\"],\r\n    [\"width\", \"icon_size\", \"slider\", \":hover\"],\r\n    [\"height\", \"icon_size\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"& img\",\r\n    [\"width\", \"icon_size\", \"slider\", \":hover\"],\r\n    [\"icon_size\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"& path\",\r\n    [\"fill\", \"icon_color\", \"color\", \":hover\"],\r\n    [\"stroke\", \"icon_color_stroke\", \"color\", \":hover\"],\r\n    \"}\",\r\n    \"}\",\r\n    \"}\",\r\n  \"&.state-disabled\",\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"position_opacity\", '.state-disabled');\r\n\r\n      if (value && value.size) {\r\n        return `opacity: ${value.size};`\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    [\"background-color\", \"background_color\", \"color\", \".state-disabled\"],\r\n    [\"\", \"gradient\", \"gradient\", \".state-disabled\"],\r\n    [\"border-style\", \"border_type\", \"\", \".state-disabled\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\", \".state-disabled\"],\r\n    [\"border-color\", \"border_color\", \"color\", \".state-disabled\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\", \".state-disabled\"],\r\n    [\"\", \"style_background_shadow\", \"shadow\", \".state-disabled\"],\r\n    [\"color\", \"font_color\", \"color\", \".state-disabled\"],\r\n    [\"\", \"background_image\", \"media\", \".state-disabled\"],\r\n\r\n    \"& .altrp-btn-icon\",\r\n    // [\"width\", \"icon_size\", \"slider\", \":hover\"],\r\n    // [\"height\", \"icon_size\", \"slider\", \":hover\"],\r\n\r\n    \"& svg\",\r\n    [\"background-color\", \"icon_color_background\", \"color\", \".state-disabled\"],\r\n    [\"width\", \"icon_size\", \"slider\", \".state-disabled\"],\r\n    [\"height\", \"icon_size\", \"slider\", \".state-disabled\"],\r\n    \"}\",\r\n\r\n    \"& img\",\r\n    [\"width\", \"icon_size\", \"slider\", \".state-disabled\"],\r\n    [\"icon_size\", \"slider\", \".state-disabled\"],\r\n    \"}\",\r\n\r\n    \"& path\",\r\n    [\"fill\", \"icon_color\", \"color\", \".state-disabled\"],\r\n    [\"stroke\", \"icon_color_stroke\", \"color\", \".state-disabled\"],\r\n    \"}\",\r\n    \"}\",\r\n    \"}\",\r\n\r\n    \"& .altrp-btn-icon\",\r\n    [\"padding\", \"icon_padding\", \"dimensions\"],\r\n    // [\"width\", \"icon_size\", \"slider\"],\r\n    // [\"height\", \"icon_size\", \"slider\"],\r\n\r\n    \"& svg\",\r\n    [\"background-color\", \"icon_color_background\", \"color\"],\r\n    [\"width\", \"icon_size\", \"slider\"],\r\n    [\"height\", \"icon_size\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"& img\",\r\n    [\"width\", \"icon_size\", \"slider\"],\r\n    [\"icon_size\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"& path\",\r\n    [\"fill\", \"icon_color\", \"color\"],\r\n    [\"stroke\", \"icon_color_stroke\", \"color\"],\r\n    \"}\",\r\n    \"}\",\r\n\r\n    \"}\",\r\n\r\n    \"altrp-background-image\",\r\n    [\"background-position\", \"background_position\"],\r\n    [\"background-attachment\", \"background_attachment\"],\r\n    [\"background-repeat\", \"background_repeat\"],\r\n    [\"background-size\", \"background_image_width\", \"slider\"],\r\n    [\"background-size\", \"background_size\"],\r\n    \"}\",\r\n  ]\r\n}\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function ButtonComponent(settings) {\r\n\r\n  const styles = [\r\n\r\n    ...btnStyles(settings)\r\n  ];\r\n\r\n  let stylesInString = '';\r\n\r\n  stylesInString += `& .altrp-btn.active {`;\r\n\r\n  const backgroundColorActive = getResponsiveSetting(settings, 'background_color', '.active');\r\n  if (backgroundColorActive) {\r\n    stylesInString += colorPropertyStyled(backgroundColorActive, 'background-color');\r\n  }\r\n\r\n  const gradientActive = getResponsiveSetting(settings, \"gradient\", '.active');\r\n\r\n  if (gradientActive) {\r\n    stylesInString += gradientStyled(gradientActive);\r\n  }\r\n\r\n  const backgroundImageActive = getResponsiveSetting(settings, \"background_image\", '.active');\r\n\r\n  if (backgroundImageActive) {\r\n    stylesInString += backgroundImageControllerToStyles(backgroundImageActive);\r\n  }\r\n\r\n  const borderTypeActive = getResponsiveSetting(settings, \"border_type\", '.active');\r\n\r\n  if (borderTypeActive) {\r\n    stylesInString += simplePropertyStyled(borderTypeActive, \"border-style\");\r\n  }\r\n\r\n  const borderWidthActive = getResponsiveSetting(settings, \"border_width\", '.active');\r\n\r\n  if (borderWidthActive) {\r\n    stylesInString += borderWidthStyled(borderWidthActive);\r\n  }\r\n\r\n  const borderColorActive = getResponsiveSetting(settings, \"border_color\", '.active');\r\n\r\n  if (borderColorActive) {\r\n    stylesInString += colorPropertyStyled(borderColorActive, \"border-color\");\r\n  }\r\n\r\n  const borderRadiusActive = getResponsiveSetting(settings, \"border_radius\", '.active');\r\n\r\n  if (borderRadiusActive) {\r\n    stylesInString += sizeStyled(borderRadiusActive, \"border-radius\");\r\n  }\r\n\r\n  const boxShadowActive = getResponsiveSetting(settings, 'style_background_shadow', '.active');\r\n\r\n  if (boxShadowActive) {\r\n    stylesInString += shadowControllerToStyles(boxShadowActive);\r\n  }\r\n\r\n  const typographicActive = getResponsiveSetting(settings, \"font_typographic\", '.active');\r\n\r\n  if (typographicActive) {\r\n    stylesInString += typographicControllerToStyles(typographicActive);\r\n  }\r\n\r\n  const colorActive = getResponsiveSetting(settings, 'font_color', '.active');\r\n\r\n  if (colorActive) {\r\n    stylesInString += colorPropertyStyled(colorActive, 'color');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn.active svg {`;\r\n\r\n  const backgroundColorSvgActive = getResponsiveSetting(settings, 'icon_color_background', '.active');\r\n\r\n  if (backgroundColorSvgActive) {\r\n    stylesInString += colorPropertyStyled(backgroundColorSvgActive, 'background-color');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn.active path {`;\r\n\r\n  const fillColorSvgActive = getResponsiveSetting(settings, 'icon_color', '.active');\r\n\r\n  if (fillColorSvgActive) {\r\n    stylesInString += colorPropertyStyled(fillColorSvgActive, 'fill');\r\n  }\r\n\r\n  const strokeColorSvgActive = getResponsiveSetting(settings, 'icon_color_stroke', '.active');\r\n\r\n  if (strokeColorSvgActive) {\r\n    stylesInString += colorPropertyStyled(strokeColorSvgActive, 'stroke');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn svg {`;\r\n\r\n  const backgroundColorSvg = getResponsiveSetting(settings, 'icon_color_background');\r\n\r\n  if (backgroundColorSvg) {\r\n    stylesInString += colorPropertyStyled(backgroundColorSvg, 'background-color');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn:hover svg {`;\r\n\r\n  const backgroundColorSvgHover = getResponsiveSetting(settings, 'icon_color_background', ':hover');\r\n\r\n  if (backgroundColorSvgHover) {\r\n    stylesInString += colorPropertyStyled(backgroundColorSvgHover, 'background-color');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn path {`;\r\n\r\n  const fillColorSvg = getResponsiveSetting(settings, 'icon_color');\r\n\r\n  if (fillColorSvg) {\r\n    stylesInString += colorPropertyStyled(fillColorSvg, 'fill');\r\n  }\r\n\r\n  const strokeColorSvg = getResponsiveSetting(settings, 'icon_color_stroke');\r\n\r\n  if (strokeColorSvg) {\r\n    stylesInString += colorPropertyStyled(strokeColorSvg, 'stroke');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn:hover path {`;\r\n\r\n  const fillColorSvgHover = getResponsiveSetting(settings, 'icon_color', ':hover');\r\n\r\n  if (fillColorSvgHover) {\r\n    stylesInString += colorPropertyStyled(fillColorSvgHover, 'fill');\r\n  }\r\n\r\n  const strokeColorSvgHover = getResponsiveSetting(settings, 'icon_color_stroke', ':hover');\r\n\r\n  if (strokeColorSvgHover) {\r\n    stylesInString += colorPropertyStyled(strokeColorSvgHover, 'stroke');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn .altrp-btn-icon-right svg, & .altrp-btn .altrp-btn-icon-right img {`;\r\n\r\n  const paddingIconRightBtn = getResponsiveSetting(settings, 'icon_padding_right');\r\n\r\n  if (paddingIconRightBtn) {\r\n    stylesInString += dimensionsControllerToStyles(paddingIconRightBtn);\r\n  }\r\n\r\n  const iconRightSizeBtn = getResponsiveSetting(settings, 'icon_size_right');\r\n\r\n  if (iconRightSizeBtn) {\r\n    stylesInString += iconSizeStyled(iconRightSizeBtn);\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn .altrp-btn-icon-left svg, & .altrp-btn .altrp-btn-icon-left img {`;\r\n\r\n  const paddingIconLeftBtn = getResponsiveSetting(settings, 'icon_padding_left');\r\n\r\n  if (paddingIconLeftBtn) {\r\n    stylesInString += dimensionsControllerToStyles(paddingIconLeftBtn);\r\n  }\r\n\r\n  const iconLeftSizeBtn = getResponsiveSetting(settings, 'icon_size_left');\r\n\r\n  if (iconLeftSizeBtn) {\r\n    stylesInString += iconSizeStyled(iconLeftSizeBtn);\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn .altrp-btn-icon-top svg, & .altrp-btn .altrp-btn-icon-top img {`;\r\n\r\n  const paddingIconTopBtn = getResponsiveSetting(settings, 'icon_padding_top');\r\n\r\n  if (paddingIconTopBtn) {\r\n    stylesInString += dimensionsControllerToStyles(paddingIconTopBtn);\r\n  }\r\n\r\n  const iconTopSizeBtn = getResponsiveSetting(settings, 'icon_size_top');\r\n\r\n  if (iconTopSizeBtn) {\r\n    stylesInString += iconSizeStyled(iconTopSizeBtn);\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn .altrp-btn-icon-bottom svg, & .altrp-btn .altrp-btn-icon-bottom img {`;\r\n\r\n  const paddingIconBottomBtn = getResponsiveSetting(settings, 'icon_padding_bottom');\r\n\r\n  if (paddingIconBottomBtn) {\r\n    stylesInString += dimensionsControllerToStyles(paddingIconBottomBtn);\r\n  }\r\n\r\n  const iconBottomSizeBtn = getResponsiveSetting(settings, 'icon_size_bottom');\r\n\r\n  if (iconBottomSizeBtn) {\r\n    stylesInString += iconSizeStyled(iconBottomSizeBtn);\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += styledString(styles, settings);\r\n\r\n  return stylesInString;\r\n}\r\n","import {sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n  .altrp-carousel-slide-img {\r\n    background: no-repeat 50%;\r\n    -webkit-background-size: cover;\r\n    cursor: grab;\r\n    background-size: cover;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    border-style: solid;\r\n    border-width: 0;\r\n    position: relative;\r\n  }\r\n\r\n  .altrp-carousel-slide {\r\n      overflow: hidden;\r\n      height: 220px;\r\n      position: relative;\r\n  }\r\n\r\n  .slick-list {\r\n    height: 100%;\r\n  }\r\n\r\n  .altrp-carousel-arrow svg {\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n\r\n  .slick-slide, .altrp-carousel-dots {\r\n    padding: 0 15px;\r\n  }\r\n\r\n  .altrp-carousel-paging {\r\n    width: 10px;\r\n    height: 10px;\r\n    background-color: #a4a4a4;\r\n  }\r\n\r\n  .altrp-carousel-slide-overlay {\r\n    background-color: rgb(255, 255, 255);\r\n  }\r\n\r\n  .altrp-carousel-arrow {\r\n      cursor: pointer;\r\n      position: relative;\r\n      z-index: 999;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n  }\r\n\r\n  .altrp-carousel-arrow-next {\r\n      transform: rotate(180deg);\r\n  }\r\n\r\n  .altrp-carousel {\r\n      position: relative;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 100%;\r\n      width: 100%;\r\n  }\r\n\r\n  .altrp-carousel-paging {\r\n      border-radius: 10vh;\r\n      background-color: #a4a4a4;\r\n      padding-right: 1px;\r\n  }\r\n\r\n  .altrp-carousel-container {\r\n      width: 100%;\r\n  }\r\n\r\n  .altrp-carousel-dots .slick-active .altrp-carousel-paging {\r\n      background-color: #136aed;\r\n  }\r\n\r\n  .altrp-carousel-dots-bottom-left {\r\n      text-align: left !important;\r\n  }\r\n\r\n  .altrp-carousel-dots-bottom-right {\r\n      text-align: right !important;\r\n  }\r\n\r\n  .altrp-carousel-dots-top-left {\r\n      text-align: left !important;\r\n  }\r\n\r\n  .altrp-carousel-dots-top {\r\n      text-align: center !important;\r\n      bottom: auto !important;\r\n  }\r\n\r\n  .altrp-carousel-dots-top-right {\r\n      text-align: right !important;\r\n  }\r\n\r\n  .altrp-carousel-dots {\r\n      position: relative;\r\n      list-style: none;\r\n      padding: 0;\r\n      text-align: center;\r\n      margin: 0;\r\n      bottom: 0;\r\n  }\r\n\r\n  .altrp-carousel-dots li {\r\n      position: relative;\r\n      display: inline-block;\r\n      margin-left: 5px;\r\n      cursor: pointer;\r\n  }\r\n\r\n  .altrp-carousel-paging:first-child {\r\n      margin-left: 0;\r\n  }\r\n\r\n  .altrp-carousel-container-no-arrow {\r\n      width: 100%;\r\n  }\r\n\r\n  .altrp-carousel-arrow-top-left {\r\n      top: 0;\r\n      left: 0;\r\n      margin-top: 10px;\r\n      margin-left: 10px;\r\n  }\r\n\r\n  .altrp-carousel-arrows-container {\r\n      position: absolute;\r\n      display: flex;\r\n      font-size: 25px;\r\n      flex-direction: row;\r\n      z-index: 999;\r\n  }\r\n\r\n  .altrp-carousel-arrow-top {\r\n      top: 0;\r\n  }\r\n\r\n  .altrp-carousel-arrows-container .altrp-carousel-arrow-prev {\r\n      display: flex;\r\n      margin-right: 2em;\r\n  }\r\n\r\n  .altrp-carousel-arrows-container .altrp-carousel-arrow-next {\r\n      display: flex;\r\n      margin-left: 2em;\r\n  }\r\n\r\n  .altrp-carousel-arrow-top-right {\r\n      top: 0;\r\n      right: 0;\r\n      margin-right: 10px;\r\n  }\r\n\r\n  .altrp-carousel-arrow-bottom-left {\r\n      bottom: 0;\r\n      left: 0;\r\n      margin-left: 10px;\r\n  }\r\n\r\n  .altrp-carousel-arrow-bottom {\r\n      bottom: 0;\r\n\r\n  }\r\n\r\n  .altrp-carousel-arrow-bottom-right {\r\n      bottom: 0;\r\n      right: 0;\r\n      margin-right: 10px;\r\n  }\r\n\r\n  .altrp-carousel-slides {\r\n      width: 100%;\r\n      display: flex;\r\n  }\r\n\r\n  .altrp-carousel-slides-dots-top {\r\n      flex-direction: column-reverse;\r\n  }\r\n\r\n  .altrp-carousel-slides-dots-top .altrp-carousel-dots {\r\n      margin-bottom: 15px;\r\n  }\r\n\r\n  .altrp-carousel-slides-dots-bottom {\r\n      flex-direction: column;\r\n  }\r\n\r\n  .altrp-carousel-slides-dots-bottom .altrp-carousel-dots {\r\n      margin-bottom: -15px;\r\n  }\r\n\r\n  .altrp-carousel-slide-overlay {\r\n      width: calc(100% - 40px);\r\n      margin: 20px;\r\n      top: 0;\r\n      opacity: 0;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      perspective: 20px;\r\n      height: calc(100% - 40px);\r\n      padding: 10px;\r\n      cursor: grab;\r\n      background-color: #ffffff;\r\n      z-index: 4;\r\n      position: absolute;\r\n      transition: 0.5s;\r\n  }\r\n\r\n  .altrp-carousel-slide:hover .altrp-carousel-slide-overlay {\r\n      opacity: 1;\r\n  }\r\n\r\n`);\r\n\r\nexport default function CarouselComponent(settings) {\r\n  const styles = [\r\n    \"altrp-carousel-slide\",\r\n\r\n    [\"height\", \"height_slides_content\", \"slider\"],\r\n    [\"background-color\", \"background_slides_style\", \"color\"],\r\n    [\"padding\", \"padding_slides_style\", \"dimensions\"],\r\n    [\"border-radius\", \"border_radius_slides_style\", \"dimensions\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-slide:hover\",\r\n\r\n    [\"background-color\", \"background_slides_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius_slides_style\", \"dimensions\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"slick-list\",\r\n\r\n    [\"width\", \"width_slides_content\", \"slider\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-slide-img\",\r\n\r\n    [\"background-size\", \"image_fit_additional_content\"],\r\n\r\n    \"}\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"space_between_slides_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n        & .slick-slide { padding: 0 ${slider}; }\r\n        & .altrp-carousel-dots { padding 0 ${slider}; }\r\n        `\r\n      }\r\n    },\r\n\r\n    \"altrp-carousel-arrow\",\r\n\r\n    [\"padding\", \"padding_arrows_navigation_style\", \"dimensions\"],\r\n    [\"border-radius\", \"border_radius_arrows_navigation_style\", \"dimensions\"],\r\n    [\"background-color\", \"arrows_background_navigation_style\", \"color\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"arrows_size_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `svg {height: ${slider}; width: ${slider};}`\r\n      }\r\n    },\r\n\r\n    \"& svg path\",\r\n\r\n    [\"stroke\", \"arrows_color_navigation_style\", \"color\"],\r\n\r\n    \"}\",\r\n\r\n    \"}\",\r\n\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"horizontal_offset_arrows_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n        & .altrp-carousel-arrow-prev { left: ${slider}; }\r\n        & .altrp-carousel-arrow-next { right: ${slider}; }\r\n        `\r\n      }\r\n    },\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"vertical_no_center_offset_arrows_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n        & .altrp-carousel-arrow { top:${slider}; }\r\n        `\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n\r\n    \"altrp-carousel-arrow:hover\",\r\n\r\n    [\"background-color\", \"arrows_background_navigation_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius_arrows_navigation_style\", \"dimensions\", \":hover\"],\r\n\r\n    \"& svg path\",\r\n\r\n    [\"stroke\", \"arrows_color_navigation_style\", \"color\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"arrows_size_navigation_style\", \":hover\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `& svg { height: ${slider}; width: ${slider}; }`\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"dots_size_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n        & .altrp-carousel-paging { width: ${slider}; height: ${slider}; }\r\n        `\r\n      } else {\r\n        return \"\"\r\n      }\r\n      // & .altrp-carousel-dots li { margin-left: calc(${slider} * 0.1); }\r\n    },\r\n\r\n    \"altrp-carousel-paging\",\r\n\r\n    [\"background-color\", \"background_color_dots_navigation_style\", \"color\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-paging:hover\",\r\n\r\n    [\"background-color\", \"background_color_dots_navigation_style\", \"color\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-dots .slick-active .altrp-carousel-paging\",\r\n\r\n    [\"background-color\", \"background_color_active_dots_navigation_style\", \"color\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-dots .slick-active .altrp-carousel-paging:hover\",\r\n\r\n    [\"background-color\", \"background_color_active_dots_navigation_style\", \"color\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-dots\",\r\n\r\n    [\"left\", \"horizontal_offset_dots_navigation_style\", \"slider\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"vertical_no_center_offset_dots_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n      transform: translateY(${slider})\r\n      `\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-slide-overlay\",\r\n\r\n    [\"background-color\", \"background_color_overlay\", \"color\"],\r\n\r\n\r\n    \"& .altrp-carousel-slide-overlay-text\",\r\n\r\n    [\"color\", \"font_color_overlay\", \"color\"],\r\n    [\"\", \"typographic_overlay\", \"typographic\"],\r\n\r\n    \"}\",\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-slide-overlay:hover\",\r\n\r\n    [\"background-color\", \"background_color_overlay\", \"color\", \":hover\"],\r\n\r\n\r\n    \"& .altrp-carousel-slide-overlay-text\",\r\n    [\"color\", \"font_color_overlay\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","const { getResponsiveSetting } = window.altrpHelpers;\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  sizeStyled,\r\n  gradientStyled,\r\n  shadowStyled,\r\n  backgroundImageControllerToStyles,\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nconst ColumnComponent = (settings) => {\r\n  let styles = \"\";\r\n\r\n  let flexWrap, flexDirection, align, justifyContent, overflow, backgroundColor, gradient, zIndex, borderType, borderWidth, borderColor, borderRadius, boxShadow;\r\n  let backgroundColorH, gradientH, borderTypeH, borderWidthH, borderColorH, borderRadiusH, boxShadowH;\r\n  let marginBottom, marginBottomH, backgroundImage, backgroundPosition, backgroundAttachment, backgroundRepeat, backgroundSizeInUnits, backgroundSize;\r\n  let backgroundImageH, backgroundPositionH, backgroundAttachmentH, backgroundRepeatH, backgroundSizeInUnitsH, backgroundSizeH, margin, marginH, padding, paddingH, width;\r\n\r\n  styles += \"& > div.altrp-column.altrp-column-priority {\";\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, \"style_position_padding\");\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n\r\n  //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    margin = getResponsiveSetting(settings, 'style_position_margin');\r\n  }\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  //Получаем значения flex-wrap из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    flexWrap = getResponsiveSetting(settings, 'layout_flex_wrap_content');\r\n  }\r\n\r\n  if (flexWrap) {\r\n    styles += simplePropertyStyled(flexWrap, 'flex-wrap');\r\n  }\r\n\r\n  //Получаем значения flex-direction из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    flexDirection = getResponsiveSetting(settings, 'layout_column_direction');\r\n  }\r\n\r\n  if (flexDirection) {\r\n    styles += simplePropertyStyled(flexDirection, 'flex-direction');\r\n  }\r\n\r\n  //Получаем значения align-content и align-items из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    align = getResponsiveSetting(settings, 'layout_type');\r\n  }\r\n\r\n  if (align) {\r\n    styles += simplePropertyStyled(align, 'align-content');\r\n    styles += simplePropertyStyled(align, 'align-items');\r\n  }\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'layout_justify_content');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  //Получаем значения overflow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    overflow = getResponsiveSetting(settings, 'layout_overflow');\r\n  }\r\n\r\n  if (overflow) {\r\n    styles += simplePropertyStyled(overflow, 'overflow',);\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'column_style_background_color');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n  // console.log(settings);\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    zIndex = getResponsiveSetting(settings, 'position_z_index');\r\n  }\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'column_style_border_type');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'column_style_border_width');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'column_style_border_color');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'column_style_border_radius');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'column_style_box_shadow');\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowStyled(boxShadow);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  //hover\r\n\r\n  styles += \"& > div.altrp-column.altrp-column-priority:hover {\";\r\n\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColorH = getResponsiveSetting(settings, 'column_style_background_color', ':hover');\r\n  }\r\n\r\n  if (backgroundColorH) {\r\n    styles += colorPropertyStyled(backgroundColorH, 'background-color');\r\n  }\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradientH = getResponsiveSetting(settings, 'gradient', ':hover');\r\n  }\r\n\r\n  if (gradientH) {\r\n    styles += gradientStyled(gradientH);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderTypeH = getResponsiveSetting(settings, 'column_style_border_type', ':hover');\r\n  }\r\n\r\n  if (borderTypeH) {\r\n    styles += simplePropertyStyled(borderTypeH, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidthH = getResponsiveSetting(settings, 'column_style_border_width', ':hover');\r\n  }\r\n\r\n  if (borderWidthH) {\r\n    styles += borderWidthStyled(borderWidthH);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColorH = getResponsiveSetting(settings, 'column_style_border_color', ':hover');\r\n  }\r\n\r\n  if (borderColorH) {\r\n    styles += colorPropertyStyled(borderColorH, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadiusH = getResponsiveSetting(settings, 'column_style_border_radius', ':hover');\r\n  }\r\n\r\n  if (borderRadiusH) {\r\n    styles += sizeStyled(borderRadiusH, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadowH = getResponsiveSetting(settings, 'column_style_box_shadow', ':hover');\r\n  }\r\n\r\n  if (boxShadowH) {\r\n    styles += shadowStyled(boxShadowH);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += \"& > .altrp-element:not(:last-child) {\";\r\n\r\n  if (settings !== undefined) {\r\n    marginBottom = getResponsiveSetting(settings, 'layout_widgets-space');\r\n  }\r\n\r\n  if (marginBottom) {\r\n    styles += `margin-bottom: ${marginBottom}px; `;\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  //hover\r\n\r\n  styles += \"& > .altrp-element:not(:last-child):hover {\";\r\n\r\n  if (settings !== undefined) {\r\n    marginBottomH = getResponsiveSetting(settings, 'layout_widgets-space', ':hover');\r\n  }\r\n\r\n  if (marginBottomH) {\r\n    styles += `margin-bottom: ${marginBottomH}px; `;\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += \"& > .altrp-column.altrp-background-image {\";\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnits = getResponsiveSetting(settings, 'background_image_width');\r\n  }\r\n\r\n  if (backgroundSizeInUnits) {\r\n    styles += sizeStyled(backgroundSizeInUnits, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  //hover\r\n\r\n  styles += \"& > div.altrp-column.altrp-background-image:hover {\";\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPositionH = getResponsiveSetting(settings, 'background_position', ':hover');\r\n  }\r\n\r\n  if (backgroundPositionH) {\r\n    styles += simplePropertyStyled(backgroundPositionH, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachmentH = getResponsiveSetting(settings, 'background_attachment', ':hover');\r\n  }\r\n\r\n  if (backgroundAttachmentH) {\r\n    styles += simplePropertyStyled(backgroundAttachmentH, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeatH = getResponsiveSetting(settings, 'background_repeat', ':hover');\r\n  }\r\n\r\n  if (backgroundRepeatH) {\r\n    styles += simplePropertyStyled(backgroundRepeatH, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnitsH = getResponsiveSetting(settings, 'background_image_width', ':hover');\r\n  }\r\n\r\n  if (backgroundSizeInUnitsH) {\r\n    styles += sizeStyled(backgroundSizeInUnitsH, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeH = getResponsiveSetting(settings, 'background_size', ':hover');\r\n  }\r\n\r\n  if (backgroundSizeH) {\r\n    styles += simplePropertyStyled(backgroundSizeH, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImageH = getResponsiveSetting(settings, 'background_image', ':hover');\r\n  }\r\n\r\n  if (backgroundImageH) {\r\n    styles += backgroundImageControllerToStyles(backgroundImageH);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  //<editor-fold description=active>\r\n  styles += \"& > div.altrp-column.altrp-column-priority.active {\";\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPositionH = getResponsiveSetting(settings, 'background_position', '.active');\r\n  }\r\n\r\n  if (backgroundPositionH) {\r\n    styles += simplePropertyStyled(backgroundPositionH, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachmentH = getResponsiveSetting(settings, 'background_attachment', '.active');\r\n  }\r\n\r\n  if (backgroundAttachmentH) {\r\n    styles += simplePropertyStyled(backgroundAttachmentH, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeatH = getResponsiveSetting(settings, 'background_repeat', '.active');\r\n  }\r\n\r\n  if (backgroundRepeatH) {\r\n    styles += simplePropertyStyled(backgroundRepeatH, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnitsH = getResponsiveSetting(settings, 'background_image_width', '.active');\r\n  }\r\n\r\n  if (backgroundSizeInUnitsH) {\r\n    styles += sizeStyled(backgroundSizeInUnitsH, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeH = getResponsiveSetting(settings, 'background_size', '.active');\r\n  }\r\n\r\n  if (backgroundSizeH) {\r\n    styles += simplePropertyStyled(backgroundSizeH, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImageH = getResponsiveSetting(settings, 'background_image', '.active');\r\n  }\r\n\r\n  if (backgroundImageH) {\r\n    styles += backgroundImageControllerToStyles(backgroundImageH);\r\n  }\r\n  styles += \"} \";\r\n\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColorH = getResponsiveSetting(settings, 'column_style_background_color', '.active');\r\n  }\r\n\r\n  if (backgroundColorH) {\r\n    styles += colorPropertyStyled(backgroundColorH, 'background-color');\r\n  }\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradientH = getResponsiveSetting(settings, 'gradient', '.active');\r\n  }\r\n\r\n  if (gradientH) {\r\n    styles += gradientStyled(gradientH);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderTypeH = getResponsiveSetting(settings, 'column_style_border_type', '.active');\r\n  }\r\n\r\n  if (borderTypeH) {\r\n    styles += simplePropertyStyled(borderTypeH, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidthH = getResponsiveSetting(settings, 'column_style_border_width', '.active');\r\n  }\r\n\r\n  if (borderWidthH) {\r\n    styles += borderWidthStyled(borderWidthH);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColorH = getResponsiveSetting(settings, 'column_style_border_color', '.active');\r\n  }\r\n\r\n  if (borderColorH) {\r\n    styles += colorPropertyStyled(borderColorH, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadiusH = getResponsiveSetting(settings, 'column_style_border_radius', '.active');\r\n  }\r\n\r\n  if (borderRadiusH) {\r\n    styles += sizeStyled(borderRadiusH, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadowH = getResponsiveSetting(settings, 'column_style_box_shadow', '.active');\r\n  }\r\n\r\n  if (boxShadowH) {\r\n    styles += shadowStyled(boxShadowH);\r\n  }\r\n\r\n  //</editor-fold>\r\n\r\n  const layout_column_width = getResponsiveSetting(settings, 'layout_column_width');\r\n  if(layout_column_width){\r\n    if (\r\n      Number(layout_column_width)\r\n    ){\r\n      styles += `&&&&{width:${layout_column_width}%;}`;\r\n\r\n    }else {\r\n      styles += `&&&&{width:${layout_column_width};}`;\r\n    }\r\n  }\r\n  return styles;\r\n};\r\n\r\nexport default ColumnComponent\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport function dashboardStyles(settings){\r\n\r\n    const style_font_typographic =() => {\r\n        const value = getResponsiveSetting(settings, \"style_font_typographic\");\r\n    \r\n        if(value) {\r\n          if(value.family) {\r\n            if(_.isString(value.family)) {\r\n              return `font-family: \"${value.family}\" sans-serif !important;`;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    \r\n    return [\r\n        \"altrp-dashboard__card--background\",\r\n          [\"background-color\", \"style_background_color\", \"color\", \"\", true],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--settings-tooltip-background\",\r\n          [\"background-color\", \"style_settings_tooltip_background_color\", \"color\", \"\", true],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--settings-tooltip-icon-background\",\r\n          [\"background-color\", \"style_settings_tooltip_icon_background_color\", \"color\", \"\", true],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--border-color\",\r\n          [\"border-color\", \"style_border_color\", \"color\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--border-style\",\r\n          [\"border-style\", \"style_border_style\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--border\",\r\n          [\"border-width\", \"style_border_width\", \"slider\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--border-radius\",\r\n          [\"border-radius\", \"style_border_radius\", \"slider\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--font\",\r\n          [\"border-style\", \"border_type_card\"],\r\n          [\"border-width\", \"border_width_card\", \"dimensions\"],\r\n          [\"border-color\", \"altrp-dashboard__card--font\", \"color\"],\r\n          [\"border-radius\", \"border_radius_card\", \"dimensions\"],\r\n          [\"\", \"style_background_shadow\", \"shadow\"],\r\n          style_font_typographic(),\r\n          \"& text\",\r\n            style_font_typographic(),\r\n          \"}\",\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--font-color\",\r\n          [\"color\", \"style_font_color\", \"color\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--font-size\",\r\n          [\"font-size\", \"style_font_size\", \"slider\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--font-weight\",\r\n          [\"font-weight\", \"style_font_weight\", \"slider\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__tooltip--label-background\",\r\n          [\"margin\", \"style_margin_tooltip\", \"dimensions\"],\r\n          [\"background-color\", \"style_background_color_tooltip\", \"color\", \"\", true],\r\n          [\"\", \"style_background_tooltip_shadow\", \"shadow\"],\r\n          [\"border-style\", \"border_type_tooltip\"],\r\n          [\"border-width\", \"border_width_tooltip\", \"dimensions\"],\r\n          [\"border-color\", \"border_color_tooltip\", \"color\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__tooltip--font\",\r\n          [\"padding\", \"style_padding_tooltip\", \"dimensions\"],\r\n          [\"\", \"style_font_tooltip\", \"typographic\"],\r\n          [\"color\", \"style_font_color_tooltip\", \"color\"],\r\n        \"}\",\r\n      ];\r\n}\r\n\r\nexport default function DashboardComponent(settings){\r\n    const styles=[\r\n        ...dashboardStyles(settings)\r\n    ];\r\n\r\n    return styledString(styles,settings);\r\n}","import { styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function DatePickerComponent(settings, elementId) {\r\n  const styles = [\r\n    `! div.altrp-date-picker${elementId}`,\r\n      [\"padding\", \"picker_padding\", \"dimensions\"],\r\n      [\"background-color\", \"picker_background\", \"color\"],\r\n      [\"border-style\", \"picker_border_type\"],\r\n      [\"border-width\", \"picker_border_width\", \"dimensions\"],\r\n      [\"border-color\", \"picker_border_color\", \"color\"],\r\n      [\"border-radius\", \"picker_border_radius\", \"dimensions\"],\r\n      [\"\", \"picker_shadow\", \"shadow\"],\r\n      [\"\", \"picker_typographic\", \"typographic\"],\r\n      \"bp3-datepicker-month-select select\",\r\n        [\"\", \"picker_month_typographic\", \"typographic\"],\r\n        [\"color\", \"picker_month_color\", \"color\"],\r\n      \"}\",\r\n      \"bp3-datepicker-year-select select\",\r\n        [\"\", \"picker_year_typographic\", \"typographic\"],\r\n        [\"color\", \"picker_year_color\", \"color\"],\r\n      \"}\",\r\n      \"bp3-icon > svg:not([fill])\",\r\n        [\"fill\", \"picker_icons_color\", \"color\"],\r\n      \"}\",\r\n      \"DayPicker-Weekday\",\r\n        [\"\", \"date_weekday_typographic\", \"typographic\"],\r\n        [\"color\", \"date_weekday_color\", \"color\"],\r\n      \"}\",\r\n      \"DayPicker-Day.DayPicker-Day.DayPicker-Day\",\r\n        [\"\", \"date_selected_typographic\", \"typographic\"],\r\n        [\"background-color\", \"date_background_color\", \"color\"],\r\n        [\"color\", \"date_font_color\", \"color\"],\r\n        [\"border-radius\", \"date_radius\", \"dimensions\"],\r\n      \"}\",\r\n      \"DayPicker-Day.DayPicker-Day.DayPicker-Day:hover\",\r\n        [\"background-color\", \"date_background_color\", \"color\", \":hover\"],\r\n        [\"color\", \"date_font_color\", \"color\", \":hover\"],\r\n        [\"border-radius\", \"date_radius\", \"dimensions\", \":hover\"],\r\n      \"}\",\r\n      \"& div.DayPicker-Day--selected.DayPicker-Day--selected.DayPicker-Day--selected\",\r\n        [\"color\", \"date_selected_font_color\", \"color\"],\r\n        [\"background-color\", \"date_selected_background_color\", \"color\"],\r\n      \"}\",\r\n      \"& div.DayPicker-Day--selected.DayPicker-Day--selected.DayPicker-Day--selected:hover\",\r\n        [\"color\", \"date_selected_font_color\", \"color\", \":hover\"],\r\n        [\"background-color\", \"date_selected_background_color\", \"color\", \":hover\"],\r\n      \"}\",\r\n      \"DayPicker-Day--outside.DayPicker-Day--outside\",\r\n        [\"color\", \"date_outside_font_color\", \"color\"],\r\n        [\"background-color\", \"date_outside_background_color\", \"color\"],\r\n      \"}\",\r\n      \"DayPicker-Day--outside:hover\",\r\n        [\"color\", \"date_outside_font_color\", \"color\", \":hover\"],\r\n       [\"background-color\", \"date_outside_background_color\", \"color\", \":hover\"],\r\n      \"}\",\r\n    \"}\",\r\n\r\n    `! div.altrp-date-picker-popover-${elementId}`,\r\n      [\"\", \"picker_shadow\", \"shadow\"],\r\n      [\"border-radius\", \"picker_border_radius\", \"dimensions\"],\r\n\r\n      \"bp3-popover-arrow-fill\",\r\n        [\"fill\", \"picker_background\", \"color\"],\r\n      \"}\",\r\n\r\n      \"bp3-popover-content\",\r\n        [\"border-radius\", \"picker_border_radius\", \"dimensions\"],\r\n      \"}\",\r\n    \"}\"\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function DiagramComponent(settings) {\r\n  const styles = [\r\n    \"altrp-dashboard__tooltip--margin\",\r\n      [\"margin\", \"style_margin_tooltip\", \"dimensions\"],\r\n      [\"padding\", \"style_padding_tooltip\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--width\",\r\n      [\"padding-top\", \"style_width_tooltip\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--font\",\r\n      [\"\", \"style_font_tooltip\", \"typographic\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--font-color\",\r\n      [\"color\", \"style_font_color_tooltip\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--label-background\",\r\n      [\"background-color\", \"style_background_color_tooltip\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--label-background-shadow\",\r\n      [\"background-color\", \"style_background_tooltip_shadow\", \"shadow\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--border-type\",\r\n      [\"border-style\", \"border_type_tooltip\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--border-width\",\r\n      [\"border-width\", \"border_width_tooltip\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--border-color\",\r\n      [\"border-color\", \"border_color_tooltip\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-diagram\",\r\n      [\"width\", \"width\", \"slider\"],\r\n      [\"height\", \"height\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-btn\",\r\n      [\"margin\", \"margin\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"diagram-title\",\r\n      [\"\", \"title_typography\", \"typographic\"],\r\n      [\"color\", \"title_color\", \"color\"],\r\n      [\"text-align\", \"title_alignment\"],\r\n      [\"padding\", \"title_padding\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"diagram-subtitle\",\r\n      [\"\", \"subtitle_typography\", \"typographic\"],\r\n      [\"color\", \"subtitle_color\", \"color\"],\r\n      [\"text-align\", \"subtitle_alignment\"],\r\n      [\"padding\", \"subtitle_padding\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    'centered-metric',\r\n      ['', 'centered_metric_typography', 'typographic'],\r\n      ['fill', 'centered_metric_color', 'color'],\r\n    '}',\r\n\r\n    'arc-label',\r\n      ['', 'arc_label_typography', 'typographic'],\r\n      ['fill', 'arc_label_color', 'color'],\r\n    '}'\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function DividerComponent(settings) {\r\n  const styles = [\r\n    \"altrp-divider-separator\",\r\n\r\n    [\"width\", \"divider_width\", \"slider\"],\r\n\r\n    \"}\",\r\n\r\n    \"&\",\r\n\r\n    [\"align-items\", \"divider_alignment\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-divider\",\r\n\r\n    [\"margin\", \"position_margin\", \"dimensions\"],\r\n    [\"z-index\", \"position_z_index\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"divider_style_gap\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return ` padding-top: ${slider}; padding-bottom: ${slider}; `\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-divider-label\",\r\n\r\n    [\"color\", \"text_style_color\", \"color\"],\r\n    [\"\", \"text_style_typographic\", \"typographic\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-divider .altrp-divider-separator\",\r\n    [\"border-color\", \"divider_style_color\", \"color\"],\r\n    \"}\",\r\n    \"altrp-divider.active\",\r\n\r\n    [\"margin\", \"position_margin\", \"dimensions\", \".active\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"divider_style_gap\", \".active\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return ` padding-top: ${slider}; padding-bottom: ${slider}; `\r\n      }\r\n    },\r\n\r\n    \"& .altrp-divider-label\",\r\n\r\n    [\"color\", \"text_style_color\", \"color\", \".active\"],\r\n\r\n    \"}\",\r\n\r\n    \"}\",\r\n    \"altrp-divider.active .altrp-divider-separator\",\r\n    [\"border-color\", \"divider_style_color\", \"color\", \".active\"],\r\n    \"}\",\r\n\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {btnStyles} from \"./ButtonComponent\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\nexport default function DropbarWidgetComponent(settings) {\r\n\r\n  const styles = [\r\n    ...btnStyles(settings)\r\n  ];\r\n\r\n  return styledString(styles, settings) + \"& .altrp-btn-wrapper{display:flex;flex-direction:column;}\";\r\n}\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  shadowControllerToStyles,\r\n  sizeStyled\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * Стили для класса .altrp-input-wrapper\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst inputWrapperStyle = settings => {\r\n  let styles = `&& .altrp-input-wrapper {`;\r\n  let width;\r\n  //width begin\r\n  settings && (width = getResponsiveSetting(settings, \"field_width\"));\r\n  width && (styles += sizeStyled(width, \"width\"));\r\n  //width end\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst containerStyle = settings => {\r\n  let styles = `&& .altrp-field-container {`;\r\n  let margin;\r\n\r\n  //margin begin\r\n  settings && (margin = getResponsiveSetting(settings, \"position_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n  //margin end\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyle = settings => {\r\n  let styles = `&& .altrp-field {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option{\";\r\n\r\n  input_position && (styles += `flex-direction:${input_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select{\";\r\n\r\n  justify_options && (styles += `justify-content:${justify_options};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select>.altrp-field{\";\r\n\r\n  image_select_item_width &&\r\n    (styles += `width:${image_select_item_width.size}${image_select_item_width.unit};`);\r\n\r\n  image_select_item_height &&\r\n    (styles += `height:${image_select_item_height.size}${image_select_item_height.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select img{\";\r\n  image_select_image_fit && (styles += `object-fit:${image_select_image_fit};`);\r\n  image_select_image_position &&\r\n    (styles += `object-position:${image_select_image_position};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-select2__control\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2ControlStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__control {`;\r\n  let padding,\r\n    color,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-image-select__label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst imageSelectLabel = settings => {\r\n  let styles = `&& .altrp-image-select__label {`;\r\n  let color, typographic;\r\n\r\n  const { placeholder_and_value_alignment_position_section } = settings;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__single-value\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2SingleValueStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__single-value {`;\r\n  let typographic, color;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelContainerStyle = settings => {\r\n  let styles = `&& .altrp-field-label-container {`;\r\n  let backgroundColor, padding, width;\r\n  const {\r\n    label_position_top,\r\n    label_position_left,\r\n    label_icon_position\r\n  } = settings;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"label_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"label_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (width = getResponsiveSetting(settings, \"label_width\"));\r\n  width && (styles += `${sizeStyled(width, \"width\")};flex-shrink: 0;`);\r\n\r\n  label_position_top && (styles += `top:${label_position_top};`);\r\n  label_position_left && (styles += `left:${label_position_left};`);\r\n  label_icon_position && (styles += `flex-direction:${label_icon_position};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabel = settings => {\r\n  let styles = `&& .altrp-field-label {`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"label_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"label_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-label-icon\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst labelIconStyle = settings => {\r\n  let styles = `&& .altrp-label-icon {`;\r\n  let padding, backgroundColor, iconSize;\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"icon_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (iconSize = getResponsiveSetting(settings, \"icon_size\"));\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for path\r\n  styles += `&& .altrp-label-icon path{`;\r\n\r\n  settings && (backgroundColor = getResponsiveSetting(settings, \"icon_color\"));\r\n  backgroundColor && (styles += colorPropertyStyled(backgroundColor, \"fill\"));\r\n\r\n  styles += \"}\";\r\n  //for svg\r\n  styles += `&& .altrp-label-icon svg{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(settings, \"icon_color_background\"));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background\"));\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for img\r\n  styles += `&& .altrp-label-icon img{`;\r\n\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для классов\r\n * altrp-field::placeholder\r\n * altrp-field-select2__placeholder\r\n * altrp-field-file__placeholder\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst placeholderStyle = settings => {\r\n  let styles = `&& .altrp-field::placeholder{`;\r\n  let color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"placeholder_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-select2__placeholder{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-file__placeholder{`;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"placeholder_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label--required::after\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelRequired = settings => {\r\n  let styles = `&& .altrp-field-label--required::after{`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"required_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"required_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__option\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2Option = (settings, id) => {\r\n  let styles = `.${id}.altrp-field-select2__option{`;\r\n  let backgroundColor;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-focused{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_focused_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-selected{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_selected_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса mask-mismatch-message\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst maskMismatchMessage = (settings, id) => {\r\n  let styles = `&& .mask-mismatch-message{`;\r\n  let margin, padding, color, typographic;\r\n\r\n  settings &&\r\n    (margin = getResponsiveSetting(settings, \"mismatch_message_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n\r\n  settings &&\r\n    (padding = getResponsiveSetting(settings, \"mismatch_message_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(margin, \"padding\"));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"mismatch_message_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"mismatch_message_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n//Точка входа\r\nfunction FormComponent(settings) {\r\n  let styles = \"\";\r\n  const { background_section_opacity } = settings;\r\n  //for all element\r\n  background_section_opacity &&\r\n    (styles += `opacity:${background_section_opacity.size};`);\r\n  //altrp-input-wrapper\r\n  const inputWrapperStyles = inputWrapperStyle(settings);\r\n  inputWrapperStyles && (styles += inputWrapperStyles);\r\n  //altrp-field-container\r\n  const containerStyles = containerStyle(settings);\r\n  containerStyles && (styles += containerStyles);\r\n  //altrp-field\r\n  const fieldStyles = fieldStyle(settings);\r\n  fieldStyles && (styles += fieldStyles);\r\n  //altrp-field-select2__control\r\n  const filedSelect2ControllerStyles = fieldSelect2ControlStyle(settings);\r\n  filedSelect2ControllerStyles && (styles += filedSelect2ControllerStyles);\r\n  //altrp-image-select__label\r\n  const imageSelectLabelStyles = imageSelectLabel(settings);\r\n  imageSelectLabelStyles && (styles += imageSelectLabelStyles);\r\n  //altrp-field-select2__single-value\r\n  const fieldSelect2SingleValueStyles = fieldSelect2SingleValueStyle(settings);\r\n  fieldSelect2SingleValueStyles && (styles += fieldSelect2SingleValueStyles);\r\n  //altrp-field-select2__single-value\r\n  const fieldLabelContainerStyles = fieldLabelContainerStyle(settings);\r\n  fieldLabelContainerStyles && (styles += fieldLabelContainerStyles);\r\n  //altrp-field-label\r\n  const fieldLabelStyles = fieldLabel(settings);\r\n  fieldLabelStyles && (styles += fieldLabelStyles);\r\n  //altrp-label-icon\r\n  const labelIconStyles = labelIconStyle(settings);\r\n  labelIconStyles && (styles += labelIconStyles);\r\n  //altrp-field::placeholder altrp-field-select2__placeholder altrp-field-file__placeholder\r\n  const placeholderStyles = placeholderStyle(settings);\r\n  placeholderStyles && (styles += placeholderStyles);\r\n  //altrp-field-label--required::after\r\n  const fieldLabelRequiredStyles = fieldLabelRequired(settings);\r\n  fieldLabelRequiredStyles && (styles += fieldLabelRequiredStyles);\r\n  //mask-mismatch-message\r\n  const maskMismatchMessageStyles = maskMismatchMessage(settings);\r\n  maskMismatchMessageStyles && (styles += maskMismatchMessageStyles);\r\n  //finish\r\n  return styles;\r\n}\r\nexport default {\r\n  FormComponent: FormComponent,\r\n  select2Options: fieldSelect2Option\r\n};\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function GalleryComponent(settings) {\r\n  const styles = [\r\n    \"altrp-gallery-img\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"aspect_ratio_grid_settings\");\r\n      let aspectRatio = \"100%\";\r\n\r\n      switch (value) {\r\n        case \"3to2\":\r\n          aspectRatio = \"66.6667%\";\r\n          break\r\n        case \"4to3\":\r\n          aspectRatio = \"75%\";\r\n          break\r\n        case \"9to16\":\r\n          aspectRatio = \"177.778%\";\r\n          break\r\n        case \"16to9\":\r\n          aspectRatio = \"56.25%\";\r\n          break\r\n        case \"21to9\":\r\n          aspectRatio = \"42.8571%\";\r\n          break\r\n      }\r\n\r\n      return `padding-bottom: ${aspectRatio}`\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-img-container\",\r\n\r\n    [\"border-style\", \"border_type\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\"],\r\n    [\"border-color\", \"border_color\", \"color\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-img-container\",\r\n\r\n    [\"border-style\", \"border_type\", \":hover\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-overlay-bg\",\r\n\r\n    [\"background-color\", \"overlay_background_color\", \"color\"],\r\n    [\"\", \"overlay_background_gradient\", \"gradient\"],\r\n    [\"mix-blend-mode\", \"blend_mode\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-overlay-bg\",\r\n\r\n    [\"background-color\", \"overlay_background_color\", \"color\", \":hover\"],\r\n    [\"\", \"overlay_background_gradient\", \"gradient\", \":hover\"],\r\n    [\"mix-blend-mode\", \"blend_mode\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-overlay\",\r\n\r\n    [\"align-items\", \"overlay_content_alignment\"],\r\n    [\"justify-content\", \"overlay_content_vertical\"],\r\n    [\"padding\", \"overlay_content_padding\", \"dimensions\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-overlay\",\r\n\r\n    [\"align-items\", \"overlay_content_alignment\", \":hover\"],\r\n    [\"justify-content\", \"overlay_content_vertical\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-overlay-title\",\r\n\r\n    [\"color\", \"overlay_title_color\", \"color\"],\r\n    [\"\", \"overlay_title_typographic\", \"typographic\"],\r\n    [\"margin-bottom\", \"overlay_title_spacing\", \"slider\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-overlay-title\",\r\n\r\n    [\"color\", \"overlay_title_color\", \"color\", \":hover\"],\r\n    [\"\", \"overlay_title_typographic\", \"typographic\", \":hover\"],\r\n    [\"margin-bottom\", \"overlay_title_spacing\", \"slider\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-overlay-description\",\r\n\r\n    [\"color\", \"overlay_description_color\", \"color\"],\r\n    [\"\", \"overlay_description_typographic\", \"typographic\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-overlay-description\",\r\n\r\n    [\"color\", \"overlay_description_color\", \"color\", \":hover\"],\r\n    [\"\", \"overlay_description_typographic\", \"typographic\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-grid\",\r\n\r\n    [\"grid-gap\", \"spacing_grid_settings\", \"slider\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"columns_grid_settings\");\r\n      const def = defaultStyled(value);\r\n\r\n      if(def) {\r\n        return `grid-template-columns: repeat(${def}, 1fr);`\r\n      }\r\n    },\r\n\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  gradientStyled,\r\n  filtersControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  sizeStyled,\r\n  opacityStyled,\r\n  borderWidthStyled,\r\n  backgroundImageControllerToStyles,\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n\r\nconst ImageLightboxComponent = (settings,id)=>{\r\n  let styles = '';\r\n\r\n  let objectFit, height, width, margin, padding, zIndex, opacity, borderType, filters;\r\n  let borderWidth, borderColor, borderRadius, transitionDuration, animationDuration, backgroundColor, backgroundColorHover, gradient;\r\n  let justifyContent;\r\n  let backgroundImage, backgroundPosition, backgroundAttachment, backgroundRepeat,backgroundSizeInUnit, backgroundSize;\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-image {`;\r\n\r\n  //Получаем значения object-fit из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    objectFit = getResponsiveSetting(settings, 'image_fit_size');\r\n  }\r\n\r\n  if (objectFit) {\r\n    styles += simplePropertyStyled(objectFit, 'object-fit');\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_color');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения filters из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    filters = getResponsiveSetting(settings, 'image_style_text_shadow');\r\n  }\r\n\r\n  if (filters) {\r\n    styles += filtersControllerToStyles(filters);\r\n  }\r\n\r\n  //Получаем значения height из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    height = getResponsiveSetting(settings, 'height_size');\r\n  }\r\n\r\n  if (height) {\r\n    if(height.size !== \"0\") {\r\n      styles += sizeStyled(height, 'height');\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  //Получаем значения width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    width = getResponsiveSetting(settings, 'width_size');\r\n  }\r\n\r\n  if (width) {\r\n    styles += sizeStyled(width, 'width');\r\n  }\r\n\r\n  //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n  //Свойство margin было убрано из Контроллера у виджета Image. Перенес сюда на всякий случай, так как были активные rules в Image.js\r\n\r\n  if (settings !== undefined) {\r\n    margin = getResponsiveSetting(settings, 'position_margin');\r\n  }\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'position_padding');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    zIndex = getResponsiveSetting(settings, 'position_z_index');\r\n  }\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  //Получаем значения opacity из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    opacity = getResponsiveSetting(settings, 'opacity_overlay');\r\n  }\r\n\r\n  if (opacity) {\r\n    styles += opacityStyled(opacity);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения transition-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    transitionDuration = getResponsiveSetting(settings, 'creative_hover_controller');\r\n  }\r\n\r\n  if (transitionDuration) {\r\n    styles += sizeStyled(transitionDuration, 'transition-duration');\r\n  }\r\n\r\n  //Получаем значения animation-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    animationDuration = getResponsiveSetting(settings, 'creative_hover_controller');\r\n  }\r\n\r\n  if (animationDuration) {\r\n    styles += sizeStyled(animationDuration, 'animation-duration');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-image:hover {`;\r\n\r\n  //Получаем значения object-fit из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    objectFit = getResponsiveSetting(settings, 'image_fit_size', ':hover');\r\n  }\r\n\r\n  if (objectFit) {\r\n    styles += simplePropertyStyled(objectFit, 'object-fit');\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_color', ':hover');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient', ':hover');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения filters из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    filters = getResponsiveSetting(settings, 'image_style_text_shadow', ':hover');\r\n  }\r\n\r\n  if (filters) {\r\n    styles += filtersControllerToStyles(filters);\r\n  }\r\n\r\n  //Получаем значения height из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    height = getResponsiveSetting(settings, 'height_size', ':hover');\r\n  }\r\n\r\n  if (height) {\r\n    if(height.size !== \"0\") {\r\n      styles += sizeStyled(height, 'height');\r\n    }\r\n  }\r\n\r\n  //Получаем значения width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    width = getResponsiveSetting(settings, 'width_size', ':hover');\r\n  }\r\n\r\n  if (width) {\r\n    styles += sizeStyled(width, 'width');\r\n  }\r\n\r\n  //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n  //Свойство margin было убрано из Контроллера у виджета Image. Перенес сюда на всякий случай, так как были активные rules в Image.js\r\n\r\n  if (settings !== undefined) {\r\n    margin = getResponsiveSetting(settings, 'position_margin', ':hover');\r\n  }\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'position_padding', ':hover');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    zIndex = getResponsiveSetting(settings, 'position_z_index', ':hover');\r\n  }\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  //Получаем значения opacity из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    opacity = getResponsiveSetting(settings, 'opacity_overlay', ':hover');\r\n  }\r\n\r\n  if (opacity) {\r\n    styles += opacityStyled(opacity);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type', ':hover');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width', ':hover');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color', ':hover');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius', ':hover');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения transition-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    transitionDuration = getResponsiveSetting(settings, 'creative_hover_controller', ':hover');\r\n  }\r\n\r\n  if (transitionDuration) {\r\n    styles += sizeStyled(transitionDuration, 'transition-duration');\r\n  }\r\n\r\n  //Получаем значения animation-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    animationDuration = getResponsiveSetting(settings, 'creative_hover_controller', ':hover');\r\n  }\r\n\r\n  if (animationDuration) {\r\n    styles += sizeStyled(animationDuration, 'animation-duration');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  styles+=`${parentClass} .altrp-image-container {`;\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'image_style_alignment');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  styles+=`${parentClass} .altrp-image-container:hover {`;\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'image_style_alignment', ':hover');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  styles+=`${parentClass} .altrp-background-image {`;\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в конкретных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width');\r\n  }\r\n\r\n  if (backgroundSizeInUnit) {\r\n    styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  styles+=`${parentClass} .altrp-background-image:hover {`;\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image', ':hover');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position', ':hover');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment', ':hover');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat', ':hover');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в конкретных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width', ':hover');\r\n  }\r\n\r\n  if (backgroundSizeInUnit) {\r\n    styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size', ':hover');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  let aspect_ratio_size;\r\n\r\n  if (settings !== undefined) {\r\n    aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n    if(Number(aspect_ratio_size) !== 0) {\r\n      styles+= 'padding:0;';\r\n    }\r\n    else{\r\n      padding = getResponsiveSetting(settings, 'position_padding');\r\n      styles +=dimensionsControllerToStyles(padding);\r\n    }\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nexport default ImageLightboxComponent;\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  shadowControllerToStyles,\r\n  sizeStyled, sliderStyled, defaultStyled, colorStyled\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * Стили для класса .altrp-input-wrapper\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst inputWrapperStyle = settings => {\r\n  let styles = `&& .altrp-input-wrapper {`;\r\n  let width;\r\n  //width begin\r\n  settings && (width = getResponsiveSetting(settings, \"field_width\"));\r\n  width && (styles += sizeStyled(width, \"width\"));\r\n  //width end\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst containerStyle = settings => {\r\n  let styles = `&& .altrp-field-container {`;\r\n  let margin;\r\n\r\n  //margin begin\r\n  settings && (margin = getResponsiveSetting(settings, \"position_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n  //margin end\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyle = settings => {\r\n  let styles = `&& .altrp-field, && .altrp-field-checkbox .bp3-control-indicator {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow,\r\n    size\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (size = getResponsiveSetting(settings, \"field_size\"));\r\n  size && (styles += `height:${sliderStyled(size)};width:${sliderStyled(size)};`);\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field, && .altrp-field-checkbox .bp3-control-indicator:before {`;\r\n\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  size && (styles += `height:${sliderStyled(size)};width:${sliderStyled(size)};`);\r\n\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  // settings &&\r\n  // (borderRadius = getResponsiveSetting(\r\n  //   settings,\r\n  //   \"global_filter_input_border_radius\"\r\n  // ));\r\n  // borderRadius &&\r\n  // (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-radio-group {`;\r\n\r\n  let fieldAlignment;\r\n\r\n  settings && (fieldAlignment = getResponsiveSetting(settings, \"field_alignment\"));\r\n  fieldAlignment && (styles += `justify-content: ${defaultStyled(fieldAlignment)};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option:hover span.bp3-control-indicator.bp3-control-indicator {\";\r\n\r\n  let backgroundColorHover;\r\n\r\n  settings && (backgroundColorHover = getResponsiveSetting(settings, \"background_style_background_color\", \":hover\"));\r\n\r\n  backgroundColorHover && (styles += colorStyled(backgroundColorHover, \"background-color\"));\r\n\r\n  let boxShadowHover;\r\n\r\n  settings && (boxShadowHover = getResponsiveSetting(settings, \"box_shadow\", \":hover\"));\r\n  boxShadowHover && (styles += shadowControllerToStyles(boxShadowHover));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option label.altrp-field-option__label {\";\r\n\r\n  let fontTypographic;\r\n\r\n  settings &&\r\n  (fontTypographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  fontTypographic && (styles += typographicControllerToStyles(fontTypographic));\r\n\r\n  let fontColor;\r\n\r\n  settings && (fontColor = getResponsiveSetting(settings, \"field_font_color\"));\r\n  fontColor && (styles += colorPropertyStyled(fontColor, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option:hover label.altrp-field-option__label {\";\r\n\r\n  let fontTypographicHover;\r\n\r\n  settings &&\r\n  (fontTypographicHover = getResponsiveSetting(settings, \"field_font_typographic\", \":hover\"));\r\n  fontTypographicHover && (styles += typographicControllerToStyles(fontTypographicHover));\r\n\r\n  let fontColorHover;\r\n\r\n  settings && (fontColorHover = getResponsiveSetting(settings, \"field_font_color\", \":hover\"));\r\n  fontColorHover && (styles += colorPropertyStyled(fontColorHover, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option.active label.altrp-field-option__label {\";\r\n\r\n  let fontTypographicActive;\r\n\r\n  settings &&\r\n  (fontTypographicActive = getResponsiveSetting(settings, \"field_font_typographic\", \".active\"));\r\n  fontTypographicActive && (styles += typographicControllerToStyles(fontTypographicActive));\r\n\r\n  let fontColorActive;\r\n\r\n  settings && (fontColorActive = getResponsiveSetting(settings, \"field_font_color\", \".active\"));\r\n  fontColorActive && (styles += colorPropertyStyled(fontColorActive, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option.active span.bp3-control-indicator.bp3-control-indicator   {\";\r\n\r\n  let backgroundColorActive;\r\n\r\n  settings && (backgroundColorActive = getResponsiveSetting(settings, \"background_style_background_color\", \".active\"));\r\n\r\n  backgroundColorActive && (styles += colorStyled(backgroundColorActive, \"background-color\"));\r\n\r\n  let boxShadowActive;\r\n\r\n  settings && (boxShadowActive = getResponsiveSetting(settings, \"box_shadow\", \".active\"));\r\n  boxShadowActive && (styles += shadowControllerToStyles(boxShadowActive));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option{\";\r\n\r\n  input_position && (styles += `flex-direction:${input_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select{\";\r\n\r\n  justify_options && (styles += `justify-content:${justify_options};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select>.altrp-field{\";\r\n\r\n  image_select_item_width &&\r\n  (styles += `width:${image_select_item_width.size}${image_select_item_width.unit};`);\r\n\r\n  image_select_item_height &&\r\n  (styles += `height:${image_select_item_height.size}${image_select_item_height.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select img{\";\r\n  image_select_image_fit && (styles += `object-fit:${image_select_image_fit};`);\r\n  image_select_image_position &&\r\n  (styles += `object-position:${image_select_image_position};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-option:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleHover = settings => {\r\n  let styles = `&& .altrp-field, && .altrp-field-option:hover .altrp-field-checkbox .bp3-control-indicator {`;\r\n  let backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    textarea_resize,\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":hover\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":hover\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":hover\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":hover\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\",\r\n    \":hover\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":hover\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles\r\n};\r\n\r\nconst fieldStyleActive = settings => {\r\n  let styles = `&& .altrp-field, && .altrp-field-option.active .altrp-field-checkbox .bp3-control-indicator {`;\r\n  let backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    textarea_resize,\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \".active\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \".active\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \".active\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \".active\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\",\r\n    \".active\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \".active\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleFocus = settings => {\r\n  let styles = `&& .altrp-field:focus, && .bp3-input:focus {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":focus\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":focus\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":focus\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":focus\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\",\r\n    \":focus\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":focus\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n\r\n/**\r\n * Стили для класса altrp-image-select__label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst imageSelectLabel = settings => {\r\n  let styles = `&& .altrp-image-select__label {`;\r\n  let color, typographic;\r\n\r\n  const { placeholder_and_value_alignment_position_section } = settings;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__single-value\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2SingleValueStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__single-value {`;\r\n  let typographic, color;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelContainerStyle = settings => {\r\n  let styles = `&& .altrp-field-label-container {`;\r\n  let backgroundColor, padding, width;\r\n  const {\r\n    label_position_top,\r\n    label_position_left,\r\n    label_icon_position\r\n  } = settings;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"label_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"label_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (width = getResponsiveSetting(settings, \"label_width\"));\r\n  width && (styles += `${sizeStyled(width, \"width\")};flex-shrink: 0;`);\r\n\r\n  label_position_top && (styles += `top:${label_position_top};`);\r\n  label_position_left && (styles += `left:${label_position_left};`);\r\n  label_icon_position && (styles += `flex-direction:${label_icon_position};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabel = settings => {\r\n  let styles = `&& .altrp-field-label {`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"label_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"label_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-label-icon\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst labelIconStyle = settings => {\r\n  let styles = `&& .altrp-label-icon {`;\r\n  let padding, backgroundColor, iconSize;\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"icon_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (iconSize = getResponsiveSetting(settings, \"icon_size\"));\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for path\r\n  styles += `&& .altrp-label-icon path{`;\r\n\r\n  settings && (backgroundColor = getResponsiveSetting(settings, \"icon_color\"));\r\n  backgroundColor && (styles += colorPropertyStyled(backgroundColor, \"fill\"));\r\n\r\n  styles += \"}\";\r\n  //for svg\r\n  styles += `&& .altrp-label-icon svg{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(settings, \"icon_color_background\"));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background\"));\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for img\r\n  styles += `&& .altrp-label-icon img{`;\r\n\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для классов\r\n * altrp-field::placeholder\r\n * altrp-field-select2__placeholder\r\n * altrp-field-file__placeholder\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst placeholderStyle = settings => {\r\n  let styles = `&& .altrp-field, && .bp3-input::placeholder{`;\r\n  let color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"placeholder_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-select2__placeholder{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-file__placeholder{`;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"placeholder_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label--required::after\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelRequired = settings => {\r\n  let styles = `&& .altrp-field-label--required::after{`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"required_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"required_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__option\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2Option = (settings, id) => {\r\n  let styles = `.${id}.altrp-field-select2__option{`;\r\n  let backgroundColor;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-focused{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_focused_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-selected{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_selected_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса mask-mismatch-message\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst maskMismatchMessage = (settings, id) => {\r\n  let styles = `&& .mask-mismatch-message{`;\r\n  let margin, padding, color, typographic;\r\n\r\n  settings &&\r\n  (margin = getResponsiveSetting(settings, \"mismatch_message_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n\r\n  settings &&\r\n  (padding = getResponsiveSetting(settings, \"mismatch_message_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(margin, \"padding\"));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"mismatch_message_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"mismatch_message_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n//Точка входа\r\nfunction InputCheckboxComponent(settings) {\r\n\r\n  let styles = \"\";\r\n  const { background_section_opacity } = settings;\r\n  //for all element\r\n  background_section_opacity &&\r\n  (styles += `opacity:${background_section_opacity.size};`);\r\n  //altrp-input-wrapper\r\n  const inputWrapperStyles = inputWrapperStyle(settings);\r\n  inputWrapperStyles && (styles += inputWrapperStyles);\r\n  //altrp-field-container\r\n  const containerStyles = containerStyle(settings);\r\n  containerStyles && (styles += containerStyles);\r\n  //altrp-field\r\n  const fieldStyles = fieldStyle(settings);\r\n  fieldStyles && (styles += fieldStyles);\r\n  //altrp-field:hover\r\n  const fieldStylesHover = fieldStyleHover(settings);\r\n  fieldStylesHover && (styles += fieldStylesHover);\r\n  //altrp-field.active\r\n  const fieldStylesActive = fieldStyleActive(settings);\r\n  fieldStylesActive && (styles += fieldStylesActive);\r\n  //altrp-field:focus\r\n  const fieldStylesFocus = fieldStyleFocus(settings);\r\n  fieldStylesFocus && (styles += fieldStylesFocus);\r\n  //altrp-image-select__label\r\n  const imageSelectLabelStyles = imageSelectLabel(settings);\r\n  imageSelectLabelStyles && (styles += imageSelectLabelStyles);\r\n  //altrp-field-select2__single-value\r\n  const fieldSelect2SingleValueStyles = fieldSelect2SingleValueStyle(settings);\r\n  fieldSelect2SingleValueStyles && (styles += fieldSelect2SingleValueStyles);\r\n  //altrp-field-select2__single-value\r\n  const fieldLabelContainerStyles = fieldLabelContainerStyle(settings);\r\n  fieldLabelContainerStyles && (styles += fieldLabelContainerStyles);\r\n  //altrp-field-label\r\n  const fieldLabelStyles = fieldLabel(settings);\r\n  fieldLabelStyles && (styles += fieldLabelStyles);\r\n  //altrp-label-icon\r\n  const labelIconStyles = labelIconStyle(settings);\r\n  labelIconStyles && (styles += labelIconStyles);\r\n  //altrp-field::placeholder altrp-field-select2__placeholder altrp-field-file__placeholder\r\n  const placeholderStyles = placeholderStyle(settings);\r\n  placeholderStyles && (styles += placeholderStyles);\r\n  //altrp-field-label--required::after\r\n  const fieldLabelRequiredStyles = fieldLabelRequired(settings);\r\n  fieldLabelRequiredStyles && (styles += fieldLabelRequiredStyles);\r\n  //mask-mismatch-message\r\n  const maskMismatchMessageStyles = maskMismatchMessage(settings);\r\n  maskMismatchMessageStyles && (styles += maskMismatchMessageStyles);\r\n  //finish\r\n  return styles;\r\n}\r\nexport default InputCheckboxComponent\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  shadowControllerToStyles,\r\n  sizeStyled\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * Стили для класса .altrp-input-wrapper\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst inputWrapperStyle = settings => {\r\n  let styles = `&& .altrp-input-wrapper {`;\r\n  let width;\r\n  //width begin\r\n  settings && (width = getResponsiveSetting(settings, \"field_width\"));\r\n  width && (styles += sizeStyled(width, \"width\"));\r\n  //width end\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst containerStyle = settings => {\r\n  let styles = `&& .altrp-field-container {`;\r\n  let margin;\r\n\r\n  //margin begin\r\n  settings && (margin = getResponsiveSetting(settings, \"position_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n  //margin end\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyle = settings => {\r\n  let styles = `& .altrp-field, & .bp3-input {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option{\";\r\n\r\n  input_position && (styles += `flex-direction:${input_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select{\";\r\n\r\n  justify_options && (styles += `justify-content:${justify_options};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select>.altrp-field{\";\r\n\r\n  image_select_item_width &&\r\n    (styles += `width:${image_select_item_width.size}${image_select_item_width.unit};`);\r\n\r\n  image_select_item_height &&\r\n    (styles += `height:${image_select_item_height.size}${image_select_item_height.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select img{\";\r\n  image_select_image_fit && (styles += `object-fit:${image_select_image_fit};`);\r\n  image_select_image_position &&\r\n    (styles += `object-position:${image_select_image_position};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n* Стили для класса altrp-field:hover\r\n* @param {Object} settings style settings of element\r\n* @returns {String} CSS style string\r\n*/\r\nconst fieldStyleHover = settings => {\r\n  let styles = `&& .altrp-field:hover, && .bp3-input:hover {`;\r\n  let color,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":hover\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\", \":hover\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":hover\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":hover\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":hover\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\",\r\n    \":hover\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":hover\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\", \":hover\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleFocus = settings => {\r\n  let styles = `&& .altrp-field:focus, && .bp3-input:focus {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":focus\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":focus\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":focus\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":focus\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\",\r\n    \":focus\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":focus\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n\r\n/**\r\n * Стили для класса altrp-image-select__label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst imageSelectLabel = settings => {\r\n  let styles = `&& .altrp-image-select__label {`;\r\n  let color, typographic;\r\n\r\n  const { placeholder_and_value_alignment_position_section } = settings;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__single-value\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2SingleValueStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__single-value {`;\r\n  let typographic, color;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabel = settings => {\r\n  let styles = `&& .altrp-field-label {`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"label_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"label_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `& .altrp-field-label-container {`;\r\n  let backgroundColor, padding, width;\r\n  const {\r\n    label_position_top,\r\n    label_position_left,\r\n    label_icon_position\r\n  } = settings;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"label_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"label_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (width = getResponsiveSetting(settings, \"label_width\"));\r\n  width && (styles += `${sizeStyled(width, \"width\")};flex-shrink: 0;`);\r\n\r\n  label_position_top && (styles += `top:${label_position_top};`);\r\n  label_position_left && (styles += `left:${label_position_left};`);\r\n  label_icon_position && (styles += `flex-direction:${label_icon_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-label-icon\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst labelIconStyle = settings => {\r\n  let styles = `&& .altrp-label-icon {`;\r\n  let padding, backgroundColor, iconSize;\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"icon_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (iconSize = getResponsiveSetting(settings, \"icon_size\"));\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for path\r\n  styles += `&& .altrp-label-icon path{`;\r\n\r\n  settings && (backgroundColor = getResponsiveSetting(settings, \"icon_color\"));\r\n  backgroundColor && (styles += colorPropertyStyled(backgroundColor, \"fill\"));\r\n\r\n  styles += \"}\";\r\n  //for svg\r\n  styles += `&& .altrp-label-icon svg{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(settings, \"icon_color_background\"));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background\"));\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for img\r\n  styles += `&& .altrp-label-icon img{`;\r\n\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для классов\r\n * altrp-field::placeholder\r\n * altrp-field-select2__placeholder\r\n * altrp-field-file__placeholder\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst placeholderStyle = settings => {\r\n  let styles = `&& .altrp-field, && .bp3-input::placeholder{`;\r\n  let color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"placeholder_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-select2__placeholder{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-file__placeholder{`;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"placeholder_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label--required::after\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelRequired = settings => {\r\n  let styles = `&& .altrp-field-label--required::after{`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"required_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"required_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__option\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2Option = (settings, id) => {\r\n  let styles = `.${id}.altrp-field-select2__option{`;\r\n  let backgroundColor;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-focused{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_focused_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-selected{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_selected_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса mask-mismatch-message\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst maskMismatchMessage = (settings, id) => {\r\n  let styles = `&& .mask-mismatch-message{`;\r\n  let margin, padding, color, typographic;\r\n\r\n  settings &&\r\n    (margin = getResponsiveSetting(settings, \"mismatch_message_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n\r\n  settings &&\r\n    (padding = getResponsiveSetting(settings, \"mismatch_message_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(margin, \"padding\"));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"mismatch_message_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"mismatch_message_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n//Точка входа\r\nfunction InputDateComponent(settings, elementId, prefix) {\r\n\r\n  let styles = \"\";\r\n  const { background_section_opacity } = settings;\r\n  //for all element\r\n  styles += `.${prefix}${elementId} {`\r\n  background_section_opacity &&\r\n    (styles += `opacity:${background_section_opacity.size};`);\r\n  //altrp-input-wrapper\r\n  styles += `}`;\r\n  styles += `.${prefix}${elementId} {`\r\n  const inputWrapperStyles = inputWrapperStyle(settings);\r\n  inputWrapperStyles && (styles += inputWrapperStyles);\r\n  styles += `}`;\r\n  //altrp-field-container\r\n  styles += `.${prefix}${elementId} {`\r\n  const containerStyles = containerStyle(settings);\r\n  containerStyles && (styles += containerStyles);\r\n  styles += `}`;\r\n  //altrp-field\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldStyles = fieldStyle(settings);\r\n  fieldStyles && (styles += fieldStyles);\r\n  styles += `}`;\r\n  //altrp-field:hover\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldStylesHover = fieldStyleHover(settings);\r\n  fieldStylesHover && (styles += fieldStylesHover);\r\n  styles += `}`;\r\n  //altrp-field:focus\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldStylesFocus = fieldStyleFocus(settings);\r\n  fieldStylesFocus && (styles += fieldStylesFocus);\r\n  styles += `}`;\r\n  //altrp-image-select__label\r\n  styles += `.${prefix}${elementId} {`\r\n  const imageSelectLabelStyles = imageSelectLabel(settings);\r\n  imageSelectLabelStyles && (styles += imageSelectLabelStyles);\r\n  styles += `}`;\r\n  //altrp-field-select2__single-value\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldSelect2SingleValueStyles = fieldSelect2SingleValueStyle(settings);\r\n  fieldSelect2SingleValueStyles && (styles += fieldSelect2SingleValueStyles);\r\n  styles += `}`;\r\n  //altrp-field-label\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldLabelStyles = fieldLabel(settings);\r\n  fieldLabelStyles && (styles += fieldLabelStyles);\r\n  styles += `}`;\r\n  //altrp-label-icon\r\n  styles += `.${prefix}${elementId} {`\r\n  const labelIconStyles = labelIconStyle(settings);\r\n  labelIconStyles && (styles += labelIconStyles);\r\n  styles += `}`;\r\n  //altrp-field::placeholder altrp-field-select2__placeholder altrp-field-file__placeholder\r\n  styles += `.${prefix}${elementId} {`\r\n  const placeholderStyles = placeholderStyle(settings);\r\n  placeholderStyles && (styles += placeholderStyles);\r\n  styles += `}`;\r\n  //altrp-field-label--required::after\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldLabelRequiredStyles = fieldLabelRequired(settings);\r\n  fieldLabelRequiredStyles && (styles += fieldLabelRequiredStyles);\r\n  styles += `}`;\r\n  //mask-mismatch-message\r\n  styles += `.${prefix}${elementId} {`\r\n  const maskMismatchMessageStyles = maskMismatchMessage(settings);\r\n  maskMismatchMessageStyles && (styles += maskMismatchMessageStyles);\r\n  styles += `}`;\r\n  //finish\r\n  return styles;\r\n}\r\nexport default InputDateComponent\r\n","import {styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nexport default function InputDateRangeComponent(settings, id, prefix) {\r\n  const styles = [\r\n    \"bp3-input.bp3-input\",\r\n      [\"\", \"typographic\", \"typographic\"],\r\n      [\"color\", \"color\", \"color\"],\r\n      () => {\r\n        const value = getResponsiveSetting(settings, \"width\");\r\n\r\n        if(value) {\r\n          return `width: ${value};`\r\n        }\r\n      },\r\n      () => {\r\n        const value = getResponsiveSetting(settings, \"height\");\r\n\r\n        if(value) {\r\n          return `height: ${value};`\r\n        }\r\n      },\r\n      [\"background-color\", \"background\", \"color\"],\r\n      [\"padding\", \"padding\", \"dimensions\"],\r\n      [\"border-radius\", \"border_radius\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"bp3-input.bp3-input:hover\",\r\n      [\"background-color\", \"background\", \"color\", \":hover\"],\r\n      [\"border-radius\", \"border_radius\", \"dimensions\", \":hover\"],\r\n      [\"color\", \"color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"bp3-input.bp3-input:focus\",\r\n      [\"background-color\", \"background\", \"color\", \":focus\"],\r\n      [\"border-radius\", \"border_radius\", \"dimensions\", \":hover\"],\r\n      [\"color\", \"color\", \"color\", \":focus\"],\r\n    \"}\",\r\n\r\n    \"bp3-input.bp3-input::placeholder\",\r\n      [\"\", \"placeholder_typographic\", \"typographic\"],\r\n      [\"color\", \"placeholder_color\", \"color\"],\r\n    \"}\",\r\n  ];\r\n\r\n  const target = `.${prefix}${id} {${styledString(styles, settings)}}`\r\n\r\n  const popoverStyles = [\r\n    \"bp3-datepicker\",\r\n      [\"background-color\", \"popover_background\", \"color\"],\r\n      [\"padding\", \"popover_padding\", \"dimensions\"],\r\n      [\"border-radius\", \"popover_border_radius\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"&.bp3-popover\",\r\n      [\"\", \"popover_shadow\", \"shadow\"],\r\n      [\"border-radius\", \"popover_border_radius\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"bp3-popover-content.bp3-popover-content\",\r\n      [\"border-radius\", \"popover_border_radius\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"bp3-daterangepicker-shortcuts\",\r\n      [\"\", \"shortcuts_typographic\", \"typographic\"],\r\n      [\"color\", \"shortcuts_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-daterangepicker-shortcuts .bp3-menu-item\",\r\n     [\"background-color\", \"shortcuts_background_shortcut\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-daterangepicker-shortcuts .bp3-menu-item:hover\",\r\n      [\"color\", \"shortcuts_color\", \"color\", \":hover\"],\r\n      [\"background-color\", \"shortcuts_background_shortcut\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"bp3-daterangepicker-shortcuts .bp3-menu-item.bp3-active\",\r\n      [\"color\", \"shortcuts_color\", \"color\", \".active\"],\r\n      [\"background-color\", \"shortcuts_background_shortcut\", \"color\", \".active\"],\r\n    \"}\",\r\n\r\n    \"bp3-divider\",\r\n      () => {\r\n        const value = getResponsiveSetting(settings, \"popover_dividers\");\r\n\r\n        if (value) {\r\n          if (value.color) {\r\n            return `\r\n            border-bottom: 1px solid ${value.color};\r\n            border-right: 1px solid ${value.color};\r\n            `\r\n          } else return \"\";\r\n        } else return \"\";\r\n      },\r\n\r\n\r\n    \"}\",\r\n\r\n    \"DayPicker-Caption\",\r\n      [\"background-color\", \"caption_background\", \"color\"],\r\n      [\"padding\", \"caption_padding\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"& span.bp3-icon-chevron-left svg, & span.bp3-icon-chevron-right svg, & span.bp3-icon-double-caret-vertical svg\",\r\n      [\"fill\", \"caption_arrow_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"DayPicker-NavButton:hover span.bp3-icon-chevron-left svg, & .DayPicker-NavButton:hover span.bp3-icon-chevron-right svg\",\r\n      [\"fill\", \"caption_arrow_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"DayPicker-Caption .bp3-html-select:hover .bp3-icon-double-caret-vertical svg\",\r\n      [\"fill\", \"caption_arrow_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"DayPicker-NavButton svg\",\r\n      [\"height\", \"caption_arrow_size\", \"slider\"],\r\n      [\"width\", \"caption_arrow_size\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"& div.DayPicker-Caption select\",\r\n      [\"\", \"caption_typographic\", \"typographic\"],\r\n      [\"color\", \"caption_color\", \"color\"],\r\n      [\"background-color\", \"caption_select_background_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"& div.DayPicker-Caption select:hover\",\r\n    [\"color\", \"caption_color\", \"color\", \":hover\"],\r\n    [\"background-color\", \"caption_select_background_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"DayPicker-Weekday\",\r\n      [\"\", \"calendar_weekday_typographic\", \"typographic\"],\r\n      [\"color\", \"calendar_weekday_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"DayPicker-Day\",\r\n      [\"\", \"calendar_typographic\", \"typographic\"],\r\n      [\"color\", \"calendar_color\", \"color\"],\r\n      [\"background-color\", \"calendar_background_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"DayPicker-Day.DayPicker-Day:hover\",\r\n      [\"color\", \"calendar_color\", \"color\", \":hover\"],\r\n      [\"background-color\", \"calendar_background_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"DayPicker-Day.DayPicker-Day.DayPicker-Day--selected\",\r\n    [\"color\", \"calendar_color\", \"color\", \".active\"],\r\n    [\"background-color\", \"calendar_background_color\", \"color\", \".active\"],\r\n    \"}\",\r\n\r\n    \"DayPicker-Day.DayPicker-Day--selected-range\",\r\n      [\"color\", \"calendar_range_color\", \"color\"],\r\n      [\"background-color\", \"calendar_range_background_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"DayPicker-Day.DayPicker-Day.DayPicker-Day--hovered-range\",\r\n      [\"color\", \"calendar_range_color\", \"color\", \":hover\"],\r\n      [\"background-color\", \"calendar_range_background_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n  ];\r\n\r\n  const popover = `.altrp-portal${id} {${styledString(popoverStyles, settings)}}`\r\n\r\n  return target + popover\r\n}\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  shadowControllerToStyles,\r\n  sizeStyled, sliderStyled, defaultStyled, colorStyled, colorStyledSecond, styledString\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * Стили для класса .altrp-input-wrapper\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst inputWrapperStyle = settings => {\r\n  let styles = `&& .altrp-input-wrapper {`;\r\n  let width;\r\n  //width begin\r\n  settings && (width = getResponsiveSetting(settings, \"field_width\"));\r\n  width && (styles += sizeStyled(width, \"width\"));\r\n  //width end\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst containerStyle = settings => {\r\n  let styles = `&& .altrp-field-container {`;\r\n  let margin, aligment;\r\n\r\n  //margin begin\r\n  settings && (margin = getResponsiveSetting(settings, \"position_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n  //margin end\r\n\r\n  settings && (aligment = getResponsiveSetting(settings, \"alignment_radio\"));\r\n  aligment && (styles += `align-items: ${defaultStyled(aligment)};`);\r\n  //margin end\r\n\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyle = settings => {\r\n  let styles = `.altrp-field-container .bp3-control-indicator.bp3-control-indicator.bp3-control-indicator {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow,\r\n    size\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (size = getResponsiveSetting(settings, \"field_size\"));\r\n  size && (styles += `height:${sliderStyled(size)};width:${sliderStyled(size)};`);\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio .bp3-control-indicator:before {\";\r\n\r\n  size && (styles += `height:${sliderStyled(size)};width:${sliderStyled(size)};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio {\";\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  styles += \"}\";\r\n\r\n\r\n  styles += \"&& .altrp-field-radio {\";\r\n\r\n  let fontTypographic;\r\n\r\n  settings &&\r\n  (fontTypographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  fontTypographic && (styles += typographicControllerToStyles(fontTypographic));\r\n\r\n  let fontColor;\r\n\r\n  settings && (fontColor = getResponsiveSetting(settings, \"field_font_color\"));\r\n  fontColor && (styles += colorPropertyStyled(fontColor, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio:hover {\";\r\n\r\n  let fontTypographicHover;\r\n\r\n  settings &&\r\n  (fontTypographicHover = getResponsiveSetting(settings, \"field_font_typographic\", \":hover\"));\r\n  fontTypographicHover && (styles += typographicControllerToStyles(fontTypographicHover));\r\n\r\n  let fontColorHover;\r\n\r\n  settings && (fontColorHover = getResponsiveSetting(settings, \"field_font_color\", \":hover\"));\r\n  fontColorHover && (styles += colorPropertyStyled(fontColorHover, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio.active {\";\r\n\r\n  let fontTypographicActive;\r\n\r\n  settings &&\r\n  (fontTypographicActive = getResponsiveSetting(settings, \"field_font_typographic\", \".active\"));\r\n  fontTypographicActive && (styles += typographicControllerToStyles(fontTypographicActive));\r\n\r\n  let fontColorActive;\r\n\r\n  settings && (fontColorActive = getResponsiveSetting(settings, \"field_font_color\", \".active\"));\r\n  fontColorActive && (styles += colorPropertyStyled(fontColorActive, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio.bp3-control.bp3-radio input:checked ~ .bp3-control-indicator::before {\";\r\n\r\n  let dotColor;\r\n\r\n  settings && (dotColor = getResponsiveSetting(settings, \"background_style_dot\"));\r\n\r\n  let dotSize;\r\n\r\n  settings && (dotSize = getResponsiveSetting(settings, \"size_style_dot\"));\r\n\r\n  if(dotSize || dotColor) {\r\n\r\n    if(!dotSize) {\r\n      dotSize = {\r\n        size: 28,\r\n        unit: \"%\"\r\n      }\r\n    }\r\n\r\n    if(!dotColor) {\r\n      dotColor = {\r\n        color: \"rgba(255, 255, 255, 1)\",\r\n        colorPickedHex: \"#ffffff\",\r\n        colorRGB: {r: 255, g: 255, b: 255, a: 1}\r\n      }\r\n    }\r\n\r\n    styles += `background-image: radial-gradient(${colorStyledSecond(dotColor)}, ${colorStyledSecond(dotColor)} ${sliderStyled(dotSize)}, rgba(0, 0, 0, 0) calc(${sliderStyled(dotSize)} + 6%));`\r\n  }\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-subgroup {`;\r\n\r\n  let fieldAlignment;\r\n\r\n  settings && (fieldAlignment = getResponsiveSetting(settings, \"alignment\"));\r\n  fieldAlignment && (styles += `justify-content: ${defaultStyled(fieldAlignment)};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option{\";\r\n\r\n  input_position && (styles += `flex-direction:${input_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select{\";\r\n\r\n  justify_options && (styles += `justify-content:${justify_options};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select>.altrp-field{\";\r\n\r\n  image_select_item_width &&\r\n  (styles += `width:${image_select_item_width.size}${image_select_item_width.unit};`);\r\n\r\n  image_select_item_height &&\r\n  (styles += `height:${image_select_item_height.size}${image_select_item_height.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select img{\";\r\n  image_select_image_fit && (styles += `object-fit:${image_select_image_fit};`);\r\n  image_select_image_position &&\r\n  (styles += `object-position:${image_select_image_position};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleHover = settings => {\r\n  let styles = `.altrp-field-container .altrp-field-radio:hover .bp3-control-indicator.bp3-control-indicator.bp3-control-indicator {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow,\r\n    size\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":hover\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":hover\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":hover\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":hover\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\",\r\n    \":hover\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":hover\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio.bp3-control.bp3-radio:hover input:checked ~ .bp3-control-indicator.bp3-control-indicator::before {\";\r\n\r\n  let dotColor;\r\n\r\n  settings && (dotColor = getResponsiveSetting(settings, \"background_style_dot\", \":hover\"));\r\n\r\n  let dotSize;\r\n\r\n  settings && (dotSize = getResponsiveSetting(settings, \"size_style_dot\", \":hover\"));\r\n\r\n  if(dotSize || dotColor) {\r\n\r\n    if(!dotSize) {\r\n      dotSize = {\r\n        size: 28,\r\n        unit: \"%\"\r\n      }\r\n    }\r\n\r\n    if(!dotColor) {\r\n      dotColor = {\r\n        color: \"rgba(255, 255, 255, 1)\",\r\n        colorPickedHex: \"#ffffff\",\r\n        colorRGB: {r: 255, g: 255, b: 255, a: 1}\r\n      }\r\n    }\r\n\r\n    styles += `background-image: radial-gradient(${colorStyledSecond(dotColor)}, ${colorStyledSecond(dotColor)} ${sliderStyled(dotSize)}, rgba(0, 0, 0, 0) calc(${sliderStyled(dotSize)} + 6%));`\r\n  }\r\n\r\n  styles += \"}\";\r\n\r\n  return styles\r\n};\r\n\r\nconst fieldStyleActive = settings => {\r\n  let styles = `.altrp-field-container .altrp-field-radio.active .bp3-control-indicator.bp3-control-indicator.bp3-control-indicator {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow,\r\n    size\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \".active\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \".active\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \".active\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \".active\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\",\r\n    \".active\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \".active\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleFocus = settings => {\r\n  let styles = `&& .altrp-field:focus, && .bp3-input:focus {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":focus\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":focus\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":focus\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":focus\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\",\r\n    \":focus\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":focus\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n\r\n/**\r\n * Стили для класса altrp-image-select__label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst imageSelectLabel = settings => {\r\n  let styles = `&& .altrp-image-select__label {`;\r\n  let color, typographic;\r\n\r\n  const { placeholder_and_value_alignment_position_section } = settings;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__single-value\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2SingleValueStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__single-value {`;\r\n  let typographic, color;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelContainerStyle = settings => {\r\n  let styles = `&& .altrp-field-label-container {`;\r\n  let backgroundColor, padding, width;\r\n  const {\r\n    label_position_top,\r\n    label_position_left,\r\n    label_icon_position\r\n  } = settings;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"label_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"label_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (width = getResponsiveSetting(settings, \"label_width\"));\r\n  width && (styles += `${sizeStyled(width, \"width\")};flex-shrink: 0;`);\r\n\r\n  label_position_top && (styles += `top:${label_position_top};`);\r\n  label_position_left && (styles += `left:${label_position_left};`);\r\n  label_icon_position && (styles += `flex-direction:${label_icon_position};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabel = settings => {\r\n  let styles = `&& .altrp-field-label {`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"label_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"label_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-label-icon\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst labelIconStyle = settings => {\r\n  let styles = `&& .altrp-label-icon {`;\r\n  let padding, backgroundColor, iconSize;\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"icon_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (iconSize = getResponsiveSetting(settings, \"icon_size\"));\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for path\r\n  styles += `&& .altrp-label-icon path{`;\r\n\r\n  settings && (backgroundColor = getResponsiveSetting(settings, \"icon_color\"));\r\n  backgroundColor && (styles += colorPropertyStyled(backgroundColor, \"fill\"));\r\n\r\n  styles += \"}\";\r\n  //for svg\r\n  styles += `&& .altrp-label-icon svg{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(settings, \"icon_color_background\"));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background\"));\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for img\r\n  styles += `&& .altrp-label-icon img{`;\r\n\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для классов\r\n * altrp-field::placeholder\r\n * altrp-field-select2__placeholder\r\n * altrp-field-file__placeholder\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst placeholderStyle = settings => {\r\n  let styles = `&& .altrp-field, && .bp3-input::placeholder{`;\r\n  let color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"placeholder_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-select2__placeholder{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-file__placeholder{`;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"placeholder_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label--required::after\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelRequired = settings => {\r\n  let styles = `&& .altrp-field-label--required::after{`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"required_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"required_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__option\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2Option = (settings, id) => {\r\n  let styles = `.${id}.altrp-field-select2__option{`;\r\n  let backgroundColor;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-focused{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_focused_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-selected{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_selected_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса mask-mismatch-message\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst maskMismatchMessage = (settings, id) => {\r\n  let styles = `&& .mask-mismatch-message{`;\r\n  let margin, padding, color, typographic;\r\n\r\n  settings &&\r\n  (margin = getResponsiveSetting(settings, \"mismatch_message_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n\r\n  settings &&\r\n  (padding = getResponsiveSetting(settings, \"mismatch_message_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(margin, \"padding\"));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"mismatch_message_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"mismatch_message_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n//Точка входа\r\nfunction InputCheckboxComponent(settings, elementId, prefix) {\r\n\r\n  let styles = \"\";\r\n\r\n  styles += `.${prefix}${elementId} {`;\r\n  const { background_section_opacity } = settings;\r\n  //for all element\r\n  background_section_opacity &&\r\n  (styles += `opacity:${background_section_opacity.size};`);\r\n  styles += `}`;\r\n  //altrp-input-wrapper\r\n  styles += `.${prefix}${elementId} {`;\r\n  const inputWrapperStyles = inputWrapperStyle(settings);\r\n  inputWrapperStyles && (styles += inputWrapperStyles);\r\n  styles += `}`;\r\n  //altrp-field-container\r\n  styles += `.${prefix}${elementId} {`;\r\n  const containerStyles = containerStyle(settings);\r\n  containerStyles && (styles += containerStyles);\r\n  styles += `}`;\r\n  //altrp-field-radio\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldStyles = fieldStyle(settings);\r\n  fieldStyles && (styles += fieldStyles);\r\n  styles += `}`;\r\n  //altrp-field-radio:hover\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldStylesHover = fieldStyleHover(settings);\r\n  fieldStylesHover && (styles += fieldStylesHover);\r\n  styles += `}`;\r\n  //altrp-field-radio.active\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldStylesActive = fieldStyleActive(settings);\r\n  fieldStylesActive && (styles += fieldStylesActive);\r\n  styles += `}`;\r\n\r\n  //altrp-field:focus\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldStylesFocus = fieldStyleFocus(settings);\r\n  fieldStylesFocus && (styles += fieldStylesFocus);\r\n  styles += `}`;\r\n  //altrp-image-select__label\r\n  styles += `.${prefix}${elementId} {`;\r\n  const imageSelectLabelStyles = imageSelectLabel(settings);\r\n  imageSelectLabelStyles && (styles += imageSelectLabelStyles);\r\n  styles += `}`;\r\n  //altrp-field-select2__single-value\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldSelect2SingleValueStyles = fieldSelect2SingleValueStyle(settings);\r\n  fieldSelect2SingleValueStyles && (styles += fieldSelect2SingleValueStyles);\r\n  styles += `}`;\r\n  //altrp-field-select2__single-value\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldLabelContainerStyles = fieldLabelContainerStyle(settings);\r\n  fieldLabelContainerStyles && (styles += fieldLabelContainerStyles);\r\n  styles += `}`;\r\n  //altrp-field-label\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldLabelStyles = fieldLabel(settings);\r\n  fieldLabelStyles && (styles += fieldLabelStyles);\r\n  styles += `}`;\r\n  //altrp-label-icon\r\n  styles += `.${prefix}${elementId} {`;\r\n  const labelIconStyles = labelIconStyle(settings);\r\n  labelIconStyles && (styles += labelIconStyles);\r\n  styles += `}`;\r\n  //altrp-field::placeholder altrp-field-select2__placeholder altrp-field-file__placeholder\r\n  styles += `.${prefix}${elementId} {`;\r\n  const placeholderStyles = placeholderStyle(settings);\r\n  placeholderStyles && (styles += placeholderStyles);\r\n  styles += `}`;\r\n  //altrp-field-label--required::after\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldLabelRequiredStyles = fieldLabelRequired(settings);\r\n  fieldLabelRequiredStyles && (styles += fieldLabelRequiredStyles);\r\n  styles += `}`;\r\n  //mask-mismatch-message\r\n  styles += `.${prefix}${elementId} {`;\r\n  const maskMismatchMessageStyles = maskMismatchMessage(settings);\r\n  maskMismatchMessageStyles && (styles += maskMismatchMessageStyles);\r\n  styles += `}`;\r\n  //finish\r\n  return styles;\r\n}\r\nexport default InputCheckboxComponent\r\n","\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nexport default function InputRangeSliderComponent(settings) {\r\n  const styles = [\r\n    \"bp3-slider-axis .bp3-slider-label\",\r\n      [\"\", \"label_typographic\", \"typographic\"],\r\n      [\"color\", \"label_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-axis .bp3-slider-label:hover\",\r\n      [\"\", \"label_typographic\", \"typographic\", \":hover\"],\r\n      [\"color\", \"label_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle span.bp3-slider-label\",\r\n      [\"\", \"current_label_typographic\", \"typographic\"],\r\n      [\"color\", \"current_label_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle:hover span.bp3-slider-label\",\r\n      [\"\", \"current_label_typographic\", \"typographic\", \":hover\"],\r\n      [\"color\", \"current_label_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-horizontal .bp3-slider-handle\",\r\n      () => {\r\n        let width = getResponsiveSetting(settings, \"size\");\r\n\r\n        width = sliderStyled(width);\r\n\r\n        if(width) {\r\n          return `width: calc(${width} / 2);`\r\n        } else {\r\n          return \"\"\r\n        }\r\n      },\r\n      [\"height\", \"handle_size\", \"slider\"],\r\n    \"}\",\r\n\r\n\r\n    \"bp3-slider-handle\",\r\n      [\"border-radius\", \"handle_radius\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle.bp3-start\",\r\n      [\"border-radius\", \"handle_radius\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle.bp3-end\",\r\n      [\"border-radius\", \"handle_radius_second\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-horizontal .altrp-field-slider\",\r\n      [\"width\", \"width\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-vertical .altrp-field-slider\",\r\n      [\"height\", \"length\", \"slider\"],\r\n    \"}\",\r\n\r\n    () => {\r\n      let tr_x = getResponsiveSetting(settings, \"tr_x\") ;\r\n      let tr_y = getResponsiveSetting(settings, \"tr_y\") ;\r\n      if(! tr_x && ! tr_y){\r\n        return ''\r\n      }\r\n      return `& .bp3-slider-handle{transform:translate(${tr_x || '0px'},${tr_y || '0px'});}`\r\n    },\r\n\r\n    \"bp3-slider-progress, & .bp3-slider-track\",\r\n      [\"height\", \"height\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-vertical .bp3-slider-progress.bp3-slider-progress, & .altrp-field-slider-vertical .bp3-slider-track.bp3-slider-track\",\r\n      [\"width\", \"thickness\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-horizontal .bp3-slider-label\",\r\n      () => {\r\n        let height = getResponsiveSetting(settings, \"height\", \"\", { size: 6, unit: \"px\" })\r\n\r\n        height = sliderStyled(height)\r\n\r\n        return `transform: translate(-50%, calc(14px + ${height}));`\r\n      },\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-vertical .bp3-slider-label.bp3-slider-label.bp3-slider-label\",\r\n      () => {\r\n        let thickness = getResponsiveSetting(settings, \"thickness\", \"\", { size: 6, unit: \"px\" })\r\n\r\n        thickness = sliderStyled(thickness)\r\n\r\n        return `transform: translate(calc(14px + ${thickness}), 50%);`\r\n      },\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle .bp3-slider-label, & .bp3-slider-handle.bp3-active .bp3-slider-label\",\r\n      [\"background-color\", \"tooltip_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle, & .bp3-slider-handle.bp3-active\",\r\n      [\"background-color\", \"handle_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle:hover, & .bp3-slider-handle:hover.bp3-active\",\r\n      [\"background-color\", \"handle_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle:active, & .bp3-slider-handle:active.bp3-active \",\r\n    [\"background-color\", \"handle_color\", \"color\", \".active\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-progress.bp3-intent-primary\",\r\n      [\"background-color\", \"filled_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-progress\",\r\n      [\"background-color\", \"blank_color\", \"color\"],\r\n    \"}\",\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nexport default function InputSliderComponent(settings) {\r\n  const styles = [\r\n    \"bp3-slider-axis .bp3-slider-label\",\r\n      [\"\", \"label_typographic\", \"typographic\"],\r\n      [\"color\", \"label_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-axis .bp3-slider-label:hover\",\r\n      [\"\", \"label_typographic\", \"typographic\", \":hover\"],\r\n      [\"color\", \"label_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle span.bp3-slider-label\",\r\n      [\"\", \"current_label_typographic\", \"typographic\"],\r\n      [\"color\", \"current_label_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle:hover span.bp3-slider-label\",\r\n      [\"\", \"current_label_typographic\", \"typographic\", \":hover\"],\r\n      [\"color\", \"current_label_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n\r\n    \"bp3-slider-handle\",\r\n      [\"height\", \"handle_size\", \"slider\"],\r\n      [\"width\", \"handle_size\", \"slider\"],\r\n      [\"border-radius\", \"handle_radius\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-horizontal .altrp-field-slider\",\r\n      [\"width\", \"width\", \"slider\"],\r\n    \"}\",\r\n      () => {\r\n        let tr_x = getResponsiveSetting(settings, \"tr_x\") ;\r\n        let tr_y = getResponsiveSetting(settings, \"tr_y\") ;\r\n        if(! tr_x && ! tr_y){\r\n          return ''\r\n        }\r\n        return `& .bp3-slider-handle{transform:translate(${tr_x || '0px'},${tr_y || '0px'});}`\r\n      },\r\n    \"altrp-field-slider-vertical .altrp-field-slider\",\r\n      [\"height\", \"length\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-progress, & .bp3-slider-track\",\r\n      [\"height\", \"height\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-vertical .bp3-slider-progress.bp3-slider-progress, & .altrp-field-slider-vertical .bp3-slider-track.bp3-slider-track\",\r\n      [\"width\", \"thickness\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-horizontal .bp3-slider-label\",\r\n      () => {\r\n        let height = getResponsiveSetting(settings, \"height\", \"\", { size: 6, unit: \"px\" })\r\n\r\n        height = sliderStyled(height)\r\n\r\n        return `transform: translate(-50%, calc(14px + ${height}));`\r\n      },\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-vertical .bp3-slider-label.bp3-slider-label.bp3-slider-label\",\r\n      () => {\r\n        let thickness = getResponsiveSetting(settings, \"thickness\", \"\", { size: 6, unit: \"px\" })\r\n\r\n        thickness = sliderStyled(thickness)\r\n\r\n        return `transform: translate(calc(14px + ${thickness}), 50%);`\r\n      },\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle .bp3-slider-label, & .bp3-slider-handle.bp3-active .bp3-slider-label\",\r\n      [\"background-color\", \"tooltip_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle, & .bp3-slider-handle.bp3-active\",\r\n      [\"background-color\", \"handle_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle:hover, & .bp3-slider-handle:hover.bp3-active\",\r\n      [\"background-color\", \"handle_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle:active, & .bp3-slider-handle:active.bp3-active \",\r\n    [\"background-color\", \"handle_color\", \"color\", \".active\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-progress.bp3-intent-primary\",\r\n      [\"background-color\", \"filled_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-progress\",\r\n      [\"background-color\", \"blank_color\", \"color\"],\r\n    \"}\",\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function ListComponent(settings) {\r\n  const styles = [\r\n    \"altrp-list\",\r\n    [\"margin\", \"position_margin\", \"dimensions\"],\r\n    [\"padding\", \"position_padding\", \"dimensions\"],\r\n\r\n    [\"z-index\", \"position_z_index\"],\r\n    \"}\",\r\n\r\n    \"altrp-list:hover\",\r\n    [\"margin\", \"position_margin\", \"dimensions\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-ul-inline, & .altrp-list-ul-default .altrp-list-li\",\r\n    [\"justify-content\", \"alignment_list_style\"],\r\n    \"}\",\r\n\r\n    \"& div.altrp-list-li-divider-default\",\r\n    [\"border-top-style\", \"divider_style_list_style\"],\r\n    [\"border-top-width\", \"divider_weight_list_style\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-li-divider-inline\",\r\n    [\"border-right-style\", \"divider_style_list_style\"],\r\n    [\"border-right-width\", \"divider_weight_list_style\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"& div.altrp-list-li-divider\",\r\n    [\"border-color\", \"divider_color_list_style\", \"color\"],\r\n    [\"width\", \"divider_width_list_style\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon, & .altrp-list-icon svg\",\r\n    [\"width\", \"size_icon_style\", \"slider\"],\r\n    [\"height\", \"size_icon_style\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon path\",\r\n    [\"fill\", \"fill_icon_style\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon\",\r\n    [\"background-color\", \"background_icon_style\", \"color\"],\r\n    [\"padding\", \"padding_icon_style\", \"dimensions\"],\r\n    [\"border-radius\", \"border-radius_icon_style\", \"dimensions\"],\r\n    [\"border-style\", \"border-type_icon_style\"],\r\n    [\"border-width\", \"border-width_icon_style\", \"dimensions\"],\r\n    [\"border-color\", \"border_color_icon_style\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-label\",\r\n    [\"margin-left\", \"indent_text_style\", \"slider\"],\r\n    [\"color\", \"color_text_style\", \"color\"],\r\n    [\"background-color\", \"background_color_text_style\", \"color\"],\r\n    [\"padding\", \"padding_text_style\", \"dimensions\"],\r\n    [\"border-radius\", \"border-radius_text_style\", \"dimensions\"],\r\n    [\"border-style\", \"border-type_text_style\"],\r\n    [\"border-width\", \"border-width_text_style\", \"dimensions\"],\r\n    [\"border-color\", \"border_color_text_style\", \"color\"],\r\n    [\"\", \"typographic_text_style\", \"typographic\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-li:hover\",\r\n    \"altrp-list-icon, & .altrp-list-icon svg\",\r\n    [\"width\", \"size_icon_style\", \"slider\", \":hover\"],\r\n    [\"height\", \"size_icon_style\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon:hover path\",\r\n    [\"fill\", \"fill_icon_style\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon:hover\",\r\n    [\"background-color\", \"background_icon_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border-radius_icon_style\", \"dimensions\", \":hover\"],\r\n    [\"border-style\", \"border-type_icon_style\", \"\", \":hover\"],\r\n    [\"border-width\", \"border-width_icon_style\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color_icon_style\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-label:hover\",\r\n    [\"margin-left\", \"indent_text_style\", \"slider\", \":hover\"],\r\n    [\"color\", \"color_text_style\", \"color\", \":hover\"],\r\n    [\"background-color\", \"background_color_text_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border-radius_text_style\", \"dimensions\", \":hover\"],\r\n    [\"border-style\", \"border-type_text_style\", \"\", \":hover\"],\r\n    [\"border-width\", \"border-width_text_style\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color_text_style\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-li-link:hover\",\r\n    [\"text-decoration\", \"link_decoration_text_style\", \"\", \":hover\"],\r\n    \"}\",\r\n    \"}\",\r\n\r\n    \"altrp-list-li-link\",\r\n    [\"text-decoration\", \"link_decoration_text_style\"],\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function MapComponent(settings) {\r\n  const styles = [\r\n    \"altrp-image\",\r\n    [\"height\", \"style_height\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-btn\",\r\n    [\"margin\", \"style_margin\", \"dimensions\"],\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n};\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function MapConstructorComponent(settings) {\r\n  const styles = [\r\n    \"altrp-image\",\r\n    [\"height\", \"style_height\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-btn\",\r\n    [\"margin\", \"style_margin\", \"dimensions\"],\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n\r\n","import {\r\n  styledString\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nexport default function ProgressBarComponent(settings) {\r\n  const styles = [\r\n    \"&.altrp-element\",\r\n      [\"align-items\", \"alignment\"],\r\n    \"}\",\r\n\r\n    \"bp3-progress-bar\",\r\n      () => {\r\n        const value = getResponsiveSetting(settings, \"width\");\r\n\r\n        if(value) {\r\n          return `width: ${value};`\r\n        } else {\r\n          return \"\"\r\n        }\r\n      },\r\n    \"}\",\r\n\r\n    \"bp3-progress-meter.bp3-progress-meter.bp3-progress-meter\",\r\n      [\"background-color\", \"color\", \"color\"],\r\n      () => {\r\n        const value = getResponsiveSetting(settings, \"stripes_color\");\r\n        const firstColor = getResponsiveSetting(settings, \"color\")?.color || \"rgba(92, 112, 128, 0.8)\";\r\n        const switcher = getResponsiveSetting(settings, \"stripes\", \"\", true);\r\n\r\n        if (value && switcher) {\r\n          if (value.color) {\r\n            const color = value.color;\r\n\r\n            return `background: linear-gradient(-45deg, ${firstColor}  25%, ${color} 25%, ${color} 50%, ${firstColor} 50%, ${firstColor} 75%, ${color} 75%); background-size: 30px 30px;`\r\n          } else return \"\";\r\n        } else return \"\";\r\n      },\r\n    \"}\",\r\n\r\n\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","const { getResponsiveSetting } = window.altrpHelpers;\r\nimport {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  sizeStyled,\r\n  shadowControllerToStyles,\r\n  gradientStyled,\r\n  backgroundImageControllerToStyles, sliderStyled, styledString,\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nfunction altrpSection(settings) {\r\n  let styles = '';\r\n\r\n  let backgroundColor, flexWrap, verticalAlign, gorizontalAlign, flexDirection, minHeight, overflow, borderStyle, borderWidth, borderColor, borderRadius, boxShadow;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'section_style_background_color');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background');\r\n  }\r\n\r\n  //Получаем значения flex-wrap из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    flexWrap = getResponsiveSetting(settings, 'layout_flex_wrap_content');\r\n  }\r\n  if (flexWrap) {\r\n    styles += simplePropertyStyled(flexWrap, 'flex-wrap');\r\n  }\r\n\r\n  //Получаем значения vertical-align из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    verticalAlign = getResponsiveSetting(settings, 'layout_column_position');\r\n  }\r\n\r\n  if (verticalAlign) {\r\n    styles += simplePropertyStyled(verticalAlign, 'align-content');\r\n    styles += simplePropertyStyled(verticalAlign, 'align-items');\r\n  }\r\n\r\n  //Получаем значения gorizontal-align из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gorizontalAlign = getResponsiveSetting(settings, 'layout_justify_content');\r\n  }\r\n\r\n  if (gorizontalAlign) {\r\n    styles += simplePropertyStyled(gorizontalAlign, 'justify-content');\r\n  }\r\n\r\n  //Получаем значения flex-direction из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    flexDirection = getResponsiveSetting(settings, 'layout_column_direction');\r\n  }\r\n\r\n  if (flexDirection) {\r\n    styles += simplePropertyStyled(flexDirection, 'flex-direction');\r\n  }\r\n\r\n  //Получаем значения min-height из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    minHeight = getResponsiveSetting(settings, 'label_style_min_height');\r\n  }\r\n\r\n  if (minHeight) {\r\n    styles += sizeStyled(minHeight, 'min-height');\r\n  }\r\n\r\n  //Получаем значения overflow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    overflow = getResponsiveSetting(settings, 'layout_overflow');\r\n  }\r\n\r\n  if (overflow) {\r\n    styles += simplePropertyStyled(overflow, 'overflow');\r\n  }\r\n\r\n  //Получаем значения border-style из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderStyle = getResponsiveSetting(settings, 'section_style_border_type');\r\n  }\r\n\r\n  if (borderStyle) {\r\n    styles += simplePropertyStyled(borderStyle, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'section_style_border_width');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'section_style_border_color');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'section_style_border_radius');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'section_style_box_shadow');\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionHover(settings,state=':hover') {\r\n  let styles = '';\r\n\r\n  let backgroundColor, borderStyle, borderWidth, borderColor, borderRadius, boxShadow;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'section_style_background_color', state);\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background');\r\n  }\r\n\r\n  //Получаем значения border-style из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderStyle = getResponsiveSetting(settings, 'section_style_border_type', state);\r\n  }\r\n\r\n  if (borderStyle) {\r\n    styles += simplePropertyStyled(borderStyle, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'section_style_border_width', state);\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'section_style_border_color', state);\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'section_style_border_radius', state);\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'section_style_box_shadow', state);\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionColumn(settings) {\r\n  let styles = '';\r\n\r\n  let padding;\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'layout_columns_gap');\r\n  }\r\n\r\n  if (padding && padding !== 'none') {\r\n    styles += `padding: ${padding}px; `;\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionColumnHover(settings) {\r\n  let styles = '';\r\n\r\n  let padding;\r\n\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionSecond(settings) {\r\n  let styles = '';\r\n\r\n  let gradient, positionTop, positionRight, positionLeft, positionBottom, zIndex;\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения position-top из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionTop = getResponsiveSetting(settings, 'position_top');\r\n  }\r\n\r\n  if (positionTop) {\r\n    styles += simplePropertyStyled(positionTop, 'top');\r\n  }\r\n\r\n  //Получаем значения position-right из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionRight = getResponsiveSetting(settings, 'position_right');\r\n  }\r\n\r\n  if (positionRight) {\r\n    styles += simplePropertyStyled(positionRight, 'right');\r\n  }\r\n\r\n  //Получаем значения position-left из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionLeft = getResponsiveSetting(settings, 'position_left');\r\n  }\r\n\r\n  if (positionLeft) {\r\n    styles += simplePropertyStyled(positionLeft, 'left');\r\n  }\r\n\r\n  //Получаем значения position-bottom из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionBottom = getResponsiveSetting(settings, 'position_bottom');\r\n  }\r\n\r\n  if (positionBottom) {\r\n    styles += simplePropertyStyled(positionBottom, 'bottom');\r\n  }\r\n\r\n  //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    zIndex = getResponsiveSetting(settings, 'position_style_z_index');\r\n  }\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionSecondHover(settings) {\r\n  let styles = '';\r\n\r\n  let gradient, positionTop, positionRight, positionLeft, positionBottom;\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient', ':hover');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения position-top из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionTop = getResponsiveSetting(settings, 'position_top', ':hover');\r\n  }\r\n\r\n  if (positionTop) {\r\n    styles += simplePropertyStyled(positionTop, 'top');\r\n  }\r\n\r\n  //Получаем значения position-right из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionRight = getResponsiveSetting(settings, 'position_right', ':hover');\r\n  }\r\n\r\n  if (positionRight) {\r\n    styles += simplePropertyStyled(positionRight, 'right');\r\n  }\r\n\r\n  //Получаем значения position-left из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionLeft = getResponsiveSetting(settings, 'position_left', ':hover');\r\n  }\r\n\r\n  if (positionLeft) {\r\n    styles += simplePropertyStyled(positionLeft, 'left');\r\n  }\r\n\r\n  //Получаем значения position-bottom из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionBottom = getResponsiveSetting(settings, 'position_bottom', ':hover');\r\n  }\r\n\r\n  if (positionBottom) {\r\n    styles += simplePropertyStyled(positionBottom, 'bottom');\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpBackgroundImage(settings) {\r\n  let styles = '';\r\n\r\n  let backgroundSize, backgroundRepeat, backgroundSizeInUnit, backgroundAttachment, backgroundPosition, backgroundImage;\r\n\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width');\r\n  }\r\n\r\n  if (backgroundSizeInUnit) {\r\n    styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpBackgroundImageHover(settings) {\r\n  let styles = '';\r\n\r\n  let backgroundSize, backgroundRepeat, backgroundSizeInUnit, backgroundAttachment, backgroundPosition, backgroundImage;\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size', ':hover');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat', ':hover');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width', ':hover');\r\n  }\r\n\r\n  if (backgroundSizeInUnit) {\r\n    styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment', ':hover');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position', ':hover');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image', ':hover');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionBoxed(settings) {\r\n  let styles = '';\r\n\r\n  let width;\r\n\r\n  //Получаем значения width в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    width = getResponsiveSetting(settings, 'layout_content_width');\r\n  }\r\n\r\n  if (width) {\r\n    width = sliderStyled(width);\r\n    styles += `width: ${width};`;\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionBoxedHover(settings) {\r\n  let styles = '';\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionSectionBoxed(settings) {\r\n  let styles = '';\r\n\r\n  let padding;\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'layout_content_width');\r\n  }\r\n  let width = '100vw';\r\n  if(window?.page_areas?.length > 4){//todo:weak place\r\n    width = '100%';\r\n  }\r\n  if (padding) {\r\n    if(padding.size) {\r\n      styles += `padding-left:calc((${width} - ${padding.size + padding.unit}) / 2);padding-right:calc((${width} - ${padding.size + padding.unit}) / 2);width:${width};`;\r\n    }\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionFull(settings) {\r\n  let styles = '';\r\n\r\n  let margin, padding;\r\n\r\n  //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    margin = getResponsiveSetting(settings, 'position_style_position_margin');\r\n  }\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'position_style_position_padding');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += ` > .altrp-section{${dimensionsControllerToStyles(padding, 'padding')}}`;\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionFullHover(settings) {\r\n  let styles = '';\r\n\r\n  // let margin;\r\n  //\r\n  // //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n  //\r\n  // if (settings !== undefined) {\r\n  //   margin = getResponsiveSetting(settings, 'position_style_position_margin', ':hover');\r\n  // }\r\n  //\r\n  // if (margin) {\r\n  //   styles += dimensionsControllerToStyles(margin, 'margin');\r\n  // }\r\n\r\n  return styles;\r\n}\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function SectionWidgetComponent(settings, childrenLength) {\r\n\r\n  // console.log(`& > .altrp-section > .altrp-element_column{width:${100/childrenLength}%;}`);\r\n  return `\r\n\r\n  & > .altrp-section > .altrp-element_column{width:${100/childrenLength}%;}\r\n\r\n  & > div.altrp-section,\r\n  & > div.altrp-section-full-fill {\r\n    ${altrpSection(settings)}\r\n  }\r\n\r\n  & > div.altrp-section:hover,\r\n  & > div.altrp-section-full-fill:hover {\r\n    ${altrpSectionHover(settings)}\r\n  }\r\n  & > div.altrp-section.active,\r\n  & > div.altrp-section-full-fill.active {\r\n    ${altrpSectionHover(settings,'.active')}\r\n    ${(()=>{\r\n      const  styles = [\r\n        ['margin', 'position_style_position_margin', 'dimensions', '.active'],\r\n        ['padding', 'position_style_position_padding', 'dimensions', '.active'],\r\n      ];\r\n      return styledString(styles, settings);\r\n    })()\r\n  }\r\n  }\r\n  & > div.altrp-section div.altrp-column {\r\n    ${altrpSectionColumn(settings)}\r\n  }\r\n\r\n  & > div.altrp-section:hover div.altrp-column:hover {\r\n    ${altrpSectionColumnHover(settings)}\r\n  }\r\n\r\n  & > div.altrp-section {\r\n    ${altrpSectionSecond(settings)}\r\n  }\r\n\r\n  & > div.altrp-section:hover {\r\n    ${altrpSectionSecondHover(settings)}\r\n  }\r\n\r\n  & > div.altrp-section.altrp-background-image {\r\n    ${altrpBackgroundImage(settings)}\r\n  }\r\n\r\n  & > div.altrp-section.altrp-background-image:hover {\r\n    ${altrpBackgroundImageHover(settings)}\r\n  }\r\n\r\n  & > div.altrp-section_boxed,\r\n  & > div.altrp-section_section_boxed {\r\n    ${altrpSectionBoxed(settings)}\r\n  }\r\n\r\n  & > div.altrp-section_boxed:hover,\r\n  & > div.altrp-section_section_boxed:hover {\r\n    ${altrpSectionBoxedHover(settings)}\r\n  }\r\n\r\n  & > div.altrp-section_section-boxed {\r\n    ${altrpSectionSectionBoxed(settings)}\r\n  }\r\n\r\n  &,\r\n  & > div.altrp-section-full-fill {\r\n    ${altrpSectionFull(settings)}\r\n  }\r\n\r\n  &:hover,\r\n  & > div.altrp-section-full-fill:hover {\r\n    ${altrpSectionFullHover(settings)}\r\n  }\r\n`\r\n}\r\n","import {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\n\r\nexport default function StarsComponent(settings) {\r\n  const styles = [\r\n    \"altrp-stars-list\",\r\n      [\"flex-direction\", \"direction\"],\r\n      [\"grid-gap\", \"gap\", \"slider\"],\r\n      () => {\r\n        const direction = getResponsiveSetting(settings, \"direction\", \"\", \"row\");\r\n        const alignment = getResponsiveSetting(settings, \"alignment\", \"\", \"flex-start\");\r\n        let value = \"\"\r\n\r\n        switch (direction) {\r\n          case \"row\":\r\n          case \"row-reverse\":\r\n            value =`justify-content: ${alignment};`\r\n            break\r\n          case \"column\":\r\n          case \"column-reverse\":\r\n            value = `align-items: ${alignment};`\r\n            break\r\n        }\r\n\r\n        return value\r\n      },\r\n    \"}\",\r\n\r\n    \"altrp-stars-star svg\",\r\n      [\"height\", \"size\", \"slider\"],\r\n      [\"width\", \"size\", \"slider\"],\r\n      [\"fill\", \"color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-stars-star:hover svg\",\r\n      [\"fill\", \"color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-stars-star.active svg\",\r\n      [\"fill\", \"color\", \"color\", \".active\"],\r\n    \"}\",\r\n\r\n    \"altrp-stars-visual.active svg\",\r\n      [\"fill\", \"visual_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"& li.altrp-stars-visual.active:hover svg\",\r\n     [\"fill\", \"visual_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nexport default function TabsSwitcherComponent(settings) {\r\n  const styles = [\r\n    \"& div.altrp-tabs-switcher_switch-wrapper span.bp3-control-indicator.bp3-control-indicator.bp3-control-indicator\",\r\n      [\"background\", \"box_around_color_one\", \"color\"],\r\n      [\"border-radius\", \"box_border_radius\", \"slider\"],\r\n      () => {\r\n        const value = getResponsiveSetting(settings, \"size\");\r\n        const slider = sliderStyled(value);\r\n\r\n        if(slider) {\r\n          return `\r\n            height: ${slider};\r\n            width: calc(${slider} * 2);\r\n\r\n            &:before {\r\n              height: calc(${slider} - 4px);\r\n              width: calc(${slider} - 4px);\r\n            }\r\n          `\r\n        } else {\r\n          return \"\"\r\n        }\r\n      },\r\n    \"}\",\r\n\r\n    \"& div.altrp-tabs-switcher_switch-wrapper span.bp3-control-indicator.bp3-control-indicator.bp3-control-indicator::before\",\r\n      [\"border-radius\", \"switch_border_radius\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"& div.altrp-tabs-switcher_switch-wrapper .altrp-tabs-switcher_switch:hover span.bp3-control-indicator.bp3-control-indicator.bp3-control-indicator::before\",\r\n    [\"border-radius\", \"switch_border_radius\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n\r\n    \"altrp-tabs-switcher_switch-wrapper span.bp3-control-indicator.bp3-control-indicator::before\",\r\n      [\"background\", \"switch_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_switch-wrapper .altrp-tabs-switcher_switch:hover span.bp3-control-indicator.bp3-control-indicator::before\",\r\n    [\"background\", \"switch_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_switch-wrapper .altrp-tabs-switcher_switch:hover span.bp3-control-indicator.bp3-control-indicator\",\r\n      [\"background\", \"box_around_color_one\", \"color\", \":hover\"],\r\n      [\"border-radius\", \"box_border_radius\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_switch-wrapper .altrp-tabs-switcher_switch:hover input:checked ~ span.bp3-control-indicator.bp3-control-indicator\",\r\n      [\"background\", \"box_around_color_two\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"& div.altrp-tabs-switcher_switch-wrapper input:checked ~ span.bp3-control-indicator.bp3-control-indicator.bp3-control-indicator\",\r\n      [\"background\", \"box_around_color_two\", \"color\"],\r\n      () => {\r\n        const value = getResponsiveSetting(settings, \"size\");\r\n        const slider = sliderStyled(value);\r\n\r\n        if(slider) {\r\n          return `\r\n            &:before {\r\n              left: calc(100% - ${slider});\r\n            }\r\n          `\r\n        } else {\r\n          return \"\"\r\n        }\r\n      },\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-one\",\r\n      [\"margin-right\", \"spacing\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-two\",\r\n      [\"margin-left\", \"spacing\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_wrapper\",\r\n      [\"margin-bottom\", \"margin_bottom\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-one\",\r\n      [\"\", \"typographic_title_one\", \"typographic\"],\r\n      [\"color\", \"color_title_one\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-one:hover\",\r\n      [\"\", \"typographic_title_one\", \"typographic\", \":hover\"],\r\n      [\"color\", \"color_title_one\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-two\",\r\n    [\"\", \"typographic_title_two\", \"typographic\"],\r\n    [\"color\", \"color_title_two\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-two:hover\",\r\n    [\"\", \"typographic_title_two\", \"typographic\", \":hover\"],\r\n    [\"color\", \"color_title_two\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n\r\n    \"altrp-tabs-switcher_content-one\",\r\n    [\"\", \"typographic_section_one\", \"typographic\"],\r\n    [\"color\", \"color_section_one\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_content-one:hover\",\r\n    [\"\", \"typographic_section_one\", \"typographic\", \":hover\"],\r\n    [\"color\", \"color_section_one\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_content-two\",\r\n    [\"\", \"typographic_section_two\", \"typographic\"],\r\n    [\"color\", \"color_section_two\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_content-two:hover\",\r\n    [\"\", \"typographic_section_two\", \"typographic\", \":hover\"],\r\n    [\"color\", \"color_section_two\", \"color\", \":hover\"],\r\n    \"}\",\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nexport default function TooltipComponent(settings) {\r\n  const styles = [\r\n    [\"\", \"tooltip_background_shadow\", \"shadow\"],\r\n    [\"border-radius\", \"tooltip_border_radius\", \"dimensions\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"tooltip_background_color\");\r\n      if(value) {\r\n        if(value.color) {\r\n          return `border-color: transparent transparent ${value.color}`\r\n        } else {\r\n          return \"\"\r\n        }\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n\r\n    \"&::after\",\r\n    [\"border-width\", \"arrow_size\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"bp3-popover2-content\",\r\n      [\"background-color\", \"tooltip_background_color\", \"color\"],\r\n      [\"padding\", \"tooltip_position_padding\", \"dimensions\"],\r\n      [\"color\", \"tooltip_font_color\", \"color\"],\r\n      [\"\", \"tooltip_font_typographic\", \"typographic\"],\r\n      [\"border-radius\", \"tooltip_border_radius\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"bp3-popover2-arrow-fill\",\r\n      [\"fill\", \"tooltip_background_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-popover2-arrow svg\",\r\n      [\"color\", \"tooltip_background_color\", \"color\"],\r\n    \"}\",\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\nimport styled from \"styled-components\";\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\nimport AltrpImage from \"../../altrp-image/AltrpImage\";\n\nexport default function TreeComponent(settings, prefix) {\n  const styles = [\n    \"bp3-tree-node svg\",\n      [\"width\", \"icon_size\", \"slider\"],\n      [\"height\", \"icon_size\", \"slider\"],\n    \"}\",\n\n    \"bp3-tree-node.bp3-tree-node-selected path\",\n      [\"fill\", \"icon_fill\", \"color\", \".active\"],\n      [\"stroke\", \"icon_stroke\", \"color\", \".active\"],\n    \"}\",\n\n    \"bp3-tree-node path\",\n      [\"fill\", \"icon_fill\", \"color\"],\n      [\"stroke\", \"icon_stroke\", \"color\"],\n    \"}\",\n\n    \"bp3-tree-node path\",\n      [\"fill\", \"icon_fill\", \"color\"],\n      [\"stroke\", \"icon_stroke\", \"color\"],\n    \"}\",\n\n    \"bp3-tree-node-label\",\n      [\"\", \"typographic\", \"typographic\"],\n      [\"color\", \"typographic_color\", \"color\"],\n    \"}\",\n\n    \"bp3-tree-node-selected .bp3-tree-node-label\",\n      [\"\", \"typographic\", \"typographic\", \".active\"],\n      [\"color\", \"typographic_color\", \"color\", \".active\"],\n    \"}\",\n\n    \"bp3-tree-node-content\",\n      [\"height\", \"item_height\", \"slider\"],\n      [\"background-color\", \"item_background\", \"color\"],\n      [\"border-radius\", \"border_radius\", \"dimensions\"],\n      [\"\", \"border_shadow\", \"shadow\"],\n      [\"border-style\", \"border_type\", \"\"],\n      [\"border-width\", \"border_width\", \"dimensions\"],\n      [\"border-color\", \"border_color\", \"color\"],\n    \"}\",\n\n    \"bp3-tree-node-content:hover\",\n      [\"background-color\", \"item_background\", \"color\"],\n    \"}\",\n\n    \"bp3-tree-node-content:hover.bp3-tree-node-content:hover\",\n      [\"background-color\", \"item_background\", \"color\", \":hover\"],\n      [\"border-radius\", \"border_radius\", \"dimensions\", \":hover\"],\n      [\"border-style\", \"border_type\", \"\", \":hover\"],\n      [\"border-width\", \"border_width\", \"dimensions\", \":hover\"],\n      [\"border-color\", \"border_color\", \"color\", \":hover\"],\n      [\"\", \"border_shadow\", \"shadow\", \":hover\"],\n    \"}\",\n\n    (\"bp3-tree-node-selected > .bp3-tree-node-content:nth-child(1).bp3-tree-node-content, \" +\n    \".bp3-tree-node-selected > .bp3-tree-node-content:nth-child(1):hover.bp3-tree-node-content:hover\"),\n      [\"background-color\", \"item_background\", \"color\", \".active\"],\n      [\"border-radius\", \"border_radius\", \"dimensions\", \".active\"],\n      [\"border-style\", \"border_type\", \"\", \".active\"],\n      [\"border-width\", \"border_width\", \"dimensions\", \".active\"],\n      [\"border-color\", \"border_color\", \"color\", \".active\"],\n      [\"\", \"border_shadow\", \"shadow\", \".active\"],\n    \"}\",\n  ]\n\n  return styledString(styles, settings, {\n    settingsPrefix: prefix\n  })\n}\n\nexport const NullArray = styled.div`\n  height: 75px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #C4C4C4;\n`\n","\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function VideoComponent(settings) {\r\n  const styles = [\r\n    \"altrp-video\",\r\n    [\"width\", \"video_width\", \"slider\"],\r\n    [\"height\", \"video_height\", \"slider\"],\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {styledString} from \"../../helpers/styles\";\r\nconst {getResponsiveSetting} = window.altrpHelpers;\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getInputFileStyles(settings, elementId) {\r\n  let styles = [\r\n    ()=>{\r\n      let styles ='&&{';\r\n      const alignment = getResponsiveSetting(settings, 'alignment')\r\n      if(alignment ){\r\n        // styles += `flex-direction:row;\r\n        // .bp3-file-input{flex-grow:0}`\r\n        switch(alignment){\r\n          case 'stretch':{\r\n            styles += `.bp3-file-input{align-self:${alignment};width:100%}`\r\n          }\r\n          break\r\n          default:{\r\n            styles += `.bp3-file-input{align-self:${alignment}}`\r\n          }break\r\n        }\r\n      }\r\n      styles += '}';\r\n      if(getResponsiveSetting(settings, 'preview')){\r\n        styles += `& .bp3-file-upload-input{display:none!important}\r\n\r\n        `\r\n      }\r\n      return styles\r\n    },\r\n    //<editor-fold description=text>\r\n    '.bp3-file-input.bp3-file-input',\r\n    ['width', 'width', 'slider'],\r\n    ['height', 'height', 'slider'],\r\n    '}',\r\n    '.bp3-file-upload-input',\r\n    ['height', 'height', 'slider'],\r\n    ['padding', 'padding', 'dimensions'],\r\n    ['', 'typographic', 'typographic'],\r\n    ['color', 'color', 'color'],\r\n    ['background-color', 'background', 'color'],\r\n    ['box-shadow', 'box_shadow', 'shadow'],\r\n    ['border-radius', 'radius', 'dimensions'],\r\n    ['border-style', 'border_type'],\r\n    ['border-width', 'border_width', 'dimensions'],\r\n    ['border-color', 'border_color', 'color'],\r\n    '}',\r\n    '.bp3-file-input_preview',\r\n    ['color', 'color', 'color'],\r\n    ['background-color', 'background', 'color'],\r\n    '}',\r\n    '.bp3-file-input .bp3-file-upload-input::after',\r\n    ['width', 'b_width', 'slider'],\r\n    ['height', 'b_height', 'slider'],\r\n    ['margin', 'b_margin', 'dimensions'],\r\n    ['padding', 'b_padding', 'dimensions'],\r\n    ['background-image', 'b_background', 'gradient'],\r\n    ['', 'b_typographic', 'typographic'],\r\n    ['color', 'b_color', 'color'],\r\n    ['background-color', 'b_bg_color', 'color'],\r\n    ['box-shadow', 'b_box_shadow', 'shadow'],\r\n    ['border-style', 'b_border_type'],\r\n    ['border-width', 'b_border_width', 'dimensions'],\r\n    ['border-color', 'b_border_color', 'color'],\r\n    '}',\r\n    /**\r\n     * hover\r\n     */\r\n    '.bp3-file-upload-input:hover',\r\n    ['', 'typographic', 'typographic', ':hover'],\r\n    ['color', 'color', 'color', ':hover'],\r\n    ['background-color', 'background', 'color', ':hover'],\r\n    ['box-shadow', 'box_shadow', 'shadow', ':hover'],\r\n    ['border-style', 'border_type', '', ':hover'],\r\n    ['border-width', 'border_width', 'dimensions', ':hover'],\r\n    ['border-color', 'border_color', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-file-upload-input.bp3-file-upload-input:hover::after',\r\n    ['background-image', 'b_background', 'gradient', ':hover'],\r\n    ['', 'b_typographic', 'typographic', ':hover'],\r\n    ['color', 'b_color', 'color', ':hover'],\r\n    ['background-color', 'b_bg_color', 'color', ':hover'],\r\n    ['box-shadow', 'b_box_shadow', 'shadow', ':hover'],\r\n    ['border-style', 'b_border_type', ':hover'],\r\n    ['border-width', 'b_border_width', 'dimensions', ':hover'],\r\n    ['border-color', 'b_border_color', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-file-input_preview:hover',\r\n    ['color', 'color', 'color', ':hover'],\r\n    ['background-color', 'background', 'color', ':hover'],\r\n    '}',\r\n    /**\r\n     * active\r\n     */\r\n    '.bp3-file-input_preview:active',\r\n    ['color', 'color', 'color', '.active'],\r\n    ['background-color', 'background', 'color', '.active'],\r\n    '}',\r\n    '& input:active + .bp3-file-upload-input',\r\n    ['', 'typographic', 'typographic', '.active'],\r\n    ['color', 'color', 'color', '.active'],\r\n    ['background-color', 'background', 'color', '.active'],\r\n    ['box-shadow', 'box_shadow', 'shadow', '.active'],\r\n    ['border-style', 'border_type', '', '.active'],\r\n    ['border-width', 'border_width', 'dimensions', '.active'],\r\n    ['border-color', 'border_color', 'color', '.active'],\r\n    '}',\r\n    '& input:active + .bp3-file-upload-input.bp3-file-upload-input::after',\r\n    ['background-image', 'b_background', 'gradient', '.active'],\r\n    ['', 'b_typographic', 'typographic', '.active'],\r\n    ['color', 'b_color', 'color', '.active'],\r\n    ['background-color', 'b_bg_color', 'color', '.active'],\r\n    ['box-shadow', 'b_box_shadow', 'shadow', '.active'],\r\n    ['border-style', 'b_border_type', '.active'],\r\n    ['border-width', 'b_border_width', 'dimensions', '.active'],\r\n    ['border-color', 'b_border_color', 'color', '.active'],\r\n    '}',\r\n    //</editor-fold>\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n\r\n","import {styledString} from '../../helpers/styles';\r\nconst {getResponsiveSetting} = window.altrpHelpers;\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getInputGalleryStyles(settings, elementId) {\r\n  let styles = [\r\n    ()=>{\r\n      let styles ='&{';\r\n      let columns = getResponsiveSetting(settings, 'columns')\r\n      if(! columns){\r\n        columns = 6\r\n      }\r\n      styles += '.input-gallery-wrapper{grid-template-columns:'\r\n      let width = 100 / columns + '%';\r\n      let v_gap = getResponsiveSetting(settings, 'v_gap')\r\n      if(v_gap && v_gap.size && columns > 1){\r\n        width = `calc(${width} - ${(v_gap.size * (columns - 1)) / columns  + (v_gap.unit || 'px')})`\r\n      }\r\n      styles += `repeat(${columns}, ${width});`\r\n      const alignment = getResponsiveSetting(settings, 'alignment');\r\n\r\n      styles +='}'\r\n      styles +='}'\r\n      return styles\r\n    },\r\n\r\n    '.input-gallery-wrapper',\r\n    ['column-gap', 'v_gap', 'slider'],\r\n    ['row-gap', 'h_gap', 'slider'],\r\n    '}',\r\n    //<editor-fold description=items>\r\n    '.input-gallery__item.input-gallery__item',\r\n    ['height', 'height', 'slider'],\r\n    ['background-color', 'background', 'color'],\r\n    ['background-image', 'gradient', 'gradient'],\r\n    ['box-shadow', 'box_shadow', 'shadow'],\r\n    ['border-radius', 'radius', 'dimensions'],\r\n    ['border-style', 'b_style', '',],\r\n    ['border-width', 'b_width', 'dimensions',],\r\n    ['border-color', 'b_color', 'color',],\r\n    '}',\r\n    /**\r\n     * hover\r\n     */\r\n\r\n    '.input-gallery__item.input-gallery__item:hover',\r\n    ['background-color', 'background', 'color', ':hover'],\r\n    ['background-image', 'gradient', 'gradient', ':hover'],\r\n    ['box-shadow', 'box_shadow', 'shadow', ':hover'],\r\n    ['border-radius', 'radius', 'dimensions', ':hover'],\r\n    ['border-style', 'b_style', '', ':hover'],\r\n    ['border-width', 'b_width', 'dimensions', ':hover'],\r\n    ['border-color', 'b_color', 'color', ':hover'],\r\n    '}',\r\n    /**\r\n     * active\r\n     */\r\n\r\n    //</editor-fold>\r\n    //<editor-fold description=delete>\r\n\r\n    '.input-gallery__delete.input-gallery__delete',\r\n    ['height', 'delete_s', 'slider'],\r\n    ['width', 'delete_s', 'slider'],\r\n    ['top', 'delete_o', 'slider'],\r\n    ['right', 'delete_o', 'slider'],\r\n\r\n    '}',\r\n    //</editor-fold>\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n\r\n","import {gradientStyled, styledString} from \"../../helpers/styles\";\r\nconst {getResponsiveSetting} = window.altrpHelpers;\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getInputMultiSelectStyles(settings, elementId) {\r\n  let styles = [\r\n    //<editor-fold description=\"стили лэйбла\">\r\n    '.altrp-field-label-container',\r\n    ['background-color', 'label_background_color', 'color'],\r\n    ['padding', 'label_padding', 'dimensions'],\r\n    ['color', 'label_style_font_color', 'color'],\r\n    ['top', 'label_position_top', 'slider'],\r\n    ['left', 'label_position_left', 'slider'],\r\n    ['width', 'label_width', 'slider'],\r\n    '}',\r\n    '.altrp-field-label',\r\n    ['', 'label_style_font_typographic', 'typographic'],\r\n    '}',\r\n    '.altrp-label-icon',\r\n    ['padding', 'icon_padding', 'dimensions'],\r\n    // ['width', 'icon_size', 'slider'],\r\n    // ['height', 'icon_size', 'slider'],\r\n    '}',\r\n\r\n    '.altrp-label-icon svg',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon svg path',\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon img',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    '}',\r\n    //</editor-fold>\r\n    '.altrp-field-label--required::after',\r\n    ['', 'required_style_font_typographic', 'typographic'],\r\n    ['color', 'required_style_font_color', 'color'],\r\n    '}',\r\n    '.mask-mismatch-message',\r\n    ['margin', 'mismatch_message_margin', 'dimensions'],\r\n    ['padding', 'mismatch_message_padding', 'dimensions'],\r\n    ['color', 'mismatch_message_font_color', 'color'],\r\n    ['', 'mismatch_message_typographic', 'typographic'],\r\n    '}',\r\n    //<editor-fold description=\"стили иконок\">\r\n    '.bp3-icon_text-widget.bp3-icon_text-widget.bp3-icon_text-widget',\r\n    ['margin', 'input_icons_margin', 'dimensions'],\r\n    ['padding', 'input_icons_padding', 'dimensions'],\r\n    ['border-radius', 'input_icons_radius', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon_text-widget',\r\n    ['background-color', 'input_icons_background', 'color', ],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover',\r\n    ['background-color', 'input_icons_background', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active',\r\n    ['background-color', 'input_icons_background', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg,& .bp3-icon_text-widget path',\r\n    ['fill', 'input_icons_fill', 'color'],\r\n    ['stroke', 'input_icons_stroke', 'color'],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover svg,& .bp3-icon_text-widget:hover path',\r\n    ['fill', 'input_icons_fill', 'color', ':hover'],\r\n    ['stroke', 'input_icons_stroke', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active svg,& .bp3-icon_text-widget:active path',\r\n    ['fill', 'input_icons_fill', 'color', '.active'],\r\n    ['stroke', 'input_icons_stroke', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget img',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n    //</editor-fold>\r\n    //<editor-fold description=\"стили тэгов\">\r\n    '.bp3-tag',\r\n    ['margin', 'tags_ma', 'dimensions'],\r\n    ['background-color', 'tags_bg', 'color'],\r\n    ['', 'tags_t', 'typographic'],\r\n    ['color', 'tags_color', 'color'],\r\n    '}',\r\n    '.bp3-tag:hover',\r\n    ['background-color', 'tags_bg', 'color', ':hover'],\r\n    ['', 'tags_t', 'typographic', ':hover'],\r\n    ['color', 'tags_color', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-tag svg',\r\n    ['margin', 'delete_ma', 'dimensions'],\r\n    ['width', 'delete_s', 'slider'],\r\n    ['height', 'delete_s', 'slider'],\r\n    '}',\r\n    '.bp3-tag path',\r\n    ['fill', 'tags_delete_color', 'color'],\r\n    '}',\r\n    //</editor-fold>\r\n    //<editor-fold description=\"стили кнопки очистить\">\r\n    '.altrp-clear',\r\n    ['background-color', 'clear_bg', 'clear_bg'],\r\n    ['margin', 'clear_ma', 'dimensions'],\r\n    ['padding', 'clear_pa', 'dimensions'],\r\n    '}',\r\n    '.altrp-clear:hover',\r\n    ['background-color', 'clear_bg', 'clear_bg', ':hover'],\r\n    '}',\r\n    '.altrp-clear:active',\r\n    ['background-color', 'clear_bg', 'clear_bg', '.active'],\r\n    '}',\r\n    '.altrp-clear svg',\r\n    ['width', 'clear_s', 'slider'],\r\n    ['height', 'clear_s', 'slider'],\r\n    ['fill', 'clear_color', 'color'],\r\n    '}',\r\n    '.altrp-clear:hover svg',\r\n    ['fill', 'clear_color', 'color',':hover'],\r\n    '}',\r\n    '.altrp-clear:active svg',\r\n    ['fill', 'clear_color', 'color','.active'],\r\n    '}',\r\n    //</editor-fold>\r\n    //<editor-fold description=\"стили кнопки\">\r\n    ()=>{\r\n      const alignment = getResponsiveSetting(settings, 'alignment')\r\n      switch (alignment){\r\n        case 'flex-start':{\r\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}'\r\n        }\r\n        case 'flex-end':{\r\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}& .bp3-popover-wrapper{justify-content:flex-end;}'\r\n        }\r\n        case 'center':{\r\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}& .bp3-popover-wrapper{justify-content:center;}'\r\n        }\r\n      }\r\n    },\r\n    '.bp3-popover-target',\r\n    ['width', 'field_width', 'slider'],\r\n    ['margin', 'position_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-tag-input-values.bp3-tag-input-values',\r\n    ['height', 'field_height', 'slider'],\r\n    ['text-align', 'placeholder_and_value_alignment_position_section', ],\r\n    ['padding', 'position_padding', 'dimensions'],\r\n    ['', 'field_font_typographic', 'typographic'],\r\n    ['color', 'field_font_color', 'color'],\r\n    ['opacity', 'background_section_opacity', 'slider'],\r\n    '}',\r\n    '.bp3-tag-input',\r\n    ['background-color', 'input_bg', 'color'],\r\n    ['align-items', 'clear_align', ''],\r\n    ['border-style', 'border_type',],\r\n    ['border-width', 'border_width', 'dimensions'],\r\n    ['border-color', 'border_color', 'color'],\r\n    ['border-radius', 'border_radius', 'dimensions'],\r\n    ['', 'box_shadow', 'shadow'],\r\n    '}',\r\n    '.bp3-tag-input:hover',\r\n    ['background-color', 'input_bg', 'color', ':hover'],\r\n    ['', 'box_shadow', 'shadow',':hover'],\r\n    '}',\r\n    '.bp3-tag-input.bp3-active',\r\n    ['background-color', 'input_bg', 'color', ':focus'],\r\n    ['', 'box_shadow', 'shadow',':focus'],\r\n    '}',\r\n    '.bp3-tag-input-values.bp3-tag-input-values:hover',\r\n    ['', 'field_font_typographic', 'typographic', ':hover'],\r\n    ['color', 'field_font_color', 'color', ':hover'],\r\n    ['border-color', 'border_color', 'color',':hover'],\r\n    ['border-radius', 'border_radius', 'dimensions',':hover'],\r\n    '.bp3-icon svg',\r\n    ['height', 'i_size', 'slider',':hover'],\r\n    ['width', 'i_size', 'slider',':hover'],\r\n    ['margin', 'i_margin', 'dimensions',':hover'],\r\n    '}',\r\n    '.bp3-icon path',\r\n    ['fill', 'i_color', 'color',':hover'],\r\n    '}',\r\n    '.bp3-icon img',\r\n    ['height', 'i_size', 'slider',':hover'],\r\n    ['width', 'i_size', 'slider',':hover'],\r\n    ['margin', 'i_margin', 'dimensions',':hover'],\r\n    '}',\r\n    '}',\r\n    //</editor-fold>\r\n    //<editor-fold description=\"стили иконок\">\r\n    '.bp3-icon svg',\r\n    ['height', 'i_size', 'slider'],\r\n    ['width', 'i_size', 'slider'],\r\n    ['margin', 'i_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon path',\r\n    ['fill', 'i_color', 'color'],\r\n    '}',\r\n    '.bp3-icon img',\r\n    ['height', 'i_size', 'slider'],\r\n    ['width', 'i_size', 'slider'],\r\n    ['margin', 'i_margin', 'dimensions'],\r\n    '}',\r\n    //</editor-fold>\r\n\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n\r\nexport function getInputMultiSelectPopoverStyles(settings, elementId){\r\n  let styles = [\r\n  //<editor-fold description=\"стили поповера\">\r\n    `.altrp-portal${elementId}`,\r\n    '.bp3-menu',\r\n    ['background-color', 'menu_bg', 'color'],\r\n    '}',\r\n    '.bp3-menu-item',\r\n    ['background-color', 'background_style_background_color', 'color'],\r\n    ['color', 'items_font_color', 'color'],\r\n    ['', 'field_font_typographic', 'typographic',],\r\n    '}',\r\n    '.bp3-menu-item:hover',\r\n    ['color', 'items_font_color', 'color', ':hover'],\r\n    ['background-color', 'background_style_background_color', 'color',':hover'],\r\n    ['', 'field_font_typographic', 'typographic', ':hover'],\r\n    '}',\r\n    '.bp3-menu-item.bp3-active.bp3-active',\r\n    ['color', 'items_font_color', 'color', '.active'],\r\n    ['background-color', 'background_style_background_color', 'color','.active'],\r\n    ['', 'field_font_typographic', 'typographic', '.active'],\r\n    '}',\r\n\r\n    '.bp3-icon-add svg',\r\n    ['height', 'a_size', 'slider'],\r\n    ['width', 'a_size', 'slider'],\r\n    ['margin', 'a_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon-add path',\r\n    ['fill', 'a_color', 'color'],\r\n    '}',\r\n    '.bp3-menu-item:hover .bp3-icon-add path',\r\n    ['fill', 'a_color', 'color', ':hover'],\r\n    '}',\r\n    '}',\r\n  //</editor-fold>\r\n  ];\r\n  return styledString(styles, settings)\r\n\r\n}\r\n","import {gradientStyled, styledString} from \"../../helpers/styles\";\r\nconst {getResponsiveSetting} = window.altrpHelpers;\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n */\r\nexport default function getInputSelectStyles(settings) {\r\n  let styles = [\r\n    //<editor-fold description=\"стили лэйбла\">\r\n    '.altrp-field-label-container',\r\n    ['background-color', 'label_background_color', 'color'],\r\n    ['padding', 'label_padding', 'dimensions'],\r\n    ['color', 'label_style_font_color', 'color'],\r\n    ['top', 'label_position_top', 'slider'],\r\n    ['left', 'label_position_left', 'slider'],\r\n    ['width', 'label_width', 'slider'],\r\n    '}',\r\n    '.altrp-field-label',\r\n    ['', 'label_style_font_typographic', 'typographic'],\r\n    '}',\r\n    '.altrp-label-icon',\r\n    ['padding', 'icon_padding', 'dimensions'],\r\n    // ['width', 'icon_size', 'slider'],\r\n    // ['height', 'icon_size', 'slider'],\r\n    '}',\r\n\r\n    '.altrp-label-icon svg',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon svg path',\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon img',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    '}',\r\n    //</editor-fold>\r\n    '.altrp-field-label--required::after',\r\n    ['', 'required_style_font_typographic', 'typographic'],\r\n    ['color', 'required_style_font_color', 'color'],\r\n    '}',\r\n    '.mask-mismatch-message',\r\n    ['margin', 'mismatch_message_margin', 'dimensions'],\r\n    ['padding', 'mismatch_message_padding', 'dimensions'],\r\n    ['color', 'mismatch_message_font_color', 'color'],\r\n    ['', 'mismatch_message_typographic', 'typographic'],\r\n    '}',\r\n    //<editor-fold description=\"стили иконок\">\r\n    '.bp3-icon_text-widget.bp3-icon_text-widget.bp3-icon_text-widget',\r\n    ['margin', 'input_icons_margin', 'dimensions'],\r\n    ['padding', 'input_icons_padding', 'dimensions'],\r\n    ['border-radius', 'input_icons_radius', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon_text-widget',\r\n    ['background-color', 'input_icons_background', 'color', ],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover',\r\n    ['background-color', 'input_icons_background', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active',\r\n    ['background-color', 'input_icons_background', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg,& .bp3-icon_text-widget path',\r\n    ['fill', 'input_icons_fill', 'color'],\r\n    ['stroke', 'input_icons_stroke', 'color'],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover svg,& .bp3-icon_text-widget:hover path',\r\n    ['fill', 'input_icons_fill', 'color', ':hover'],\r\n    ['stroke', 'input_icons_stroke', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active svg,& .bp3-icon_text-widget:active path',\r\n    ['fill', 'input_icons_fill', 'color', '.active'],\r\n    ['stroke', 'input_icons_stroke', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget img',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n    //</editor-fold>\r\n    //<editor-fold description=\"стили кнопки\">\r\n    ()=>{\r\n      const alignment = getResponsiveSetting(settings, 'alignment')\r\n      switch (alignment){\r\n        case 'flex-start':{\r\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}'\r\n        }\r\n        case 'flex-end':{\r\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}& .bp3-popover-wrapper{justify-content:flex-end;}'\r\n        }\r\n        case 'center':{\r\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}& .bp3-popover-wrapper{justify-content:center;}'\r\n        }\r\n      }\r\n    },\r\n    '.bp3-popover-target',\r\n    ['width', 'field_width', 'slider'],\r\n    ['margin', 'position_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-button.bp3-button',\r\n    ['height', 'field_height', 'slider'],\r\n    ['text-align', 'placeholder_and_value_alignment_position_section', ],\r\n    ['padding', 'position_padding', 'dimensions'],\r\n    ['', 'field_font_typographic', 'typographic'],\r\n    ['color', 'field_font_color', 'color'],\r\n    ['opacity', 'background_section_opacity', 'slider'],\r\n    ['border-style', 'border_type',],\r\n    ['border-width', 'border_width', 'dimensions'],\r\n    ['border-color', 'border_color', 'color'],\r\n    ['border-radius', 'border_radius', 'dimensions'],\r\n    ['', 'box_shadow', 'shadow'],\r\n    '}',\r\n    ()=>{\r\n      let styles = '.bp3-button.bp3-button{';\r\n      let button_gradient = getResponsiveSetting(settings, 'button_gradient')\r\n      if(button_gradient){\r\n        styles += gradientStyled(button_gradient)\r\n      }\r\n      styles += '}'\r\n      styles += '.bp3-button:hover{'\r\n      button_gradient = getResponsiveSetting(settings, 'button_gradient', ':hover')\r\n      if(button_gradient){\r\n        styles += gradientStyled(button_gradient)\r\n      }\r\n      styles += '}'\r\n      styles += '.bp3-button.bp3-button:active{'\r\n      button_gradient = getResponsiveSetting(settings, 'button_gradient', '.active')\r\n      if(button_gradient){\r\n        styles += gradientStyled(button_gradient)\r\n      }\r\n      styles += '}'\r\n      return styles;\r\n    },\r\n    '.bp3-button.bp3-button:hover',\r\n    ['', 'field_font_typographic', 'typographic', ':hover'],\r\n    ['color', 'field_font_color', 'color', ':hover'],\r\n    ['border-color', 'border_color', 'color',':hover'],\r\n    ['border-radius', 'border_radius', 'dimensions',':hover'],\r\n    '.bp3-icon svg',\r\n    ['height', 'i_size', 'slider',':hover'],\r\n    ['width', 'i_size', 'slider',':hover'],\r\n    ['margin', 'i_margin', 'dimensions',':hover'],\r\n    '}',\r\n    '.bp3-icon path',\r\n    ['fill', 'i_color', 'color',':hover'],\r\n    '}',\r\n    '.bp3-icon img',\r\n    ['height', 'i_size', 'slider',':hover'],\r\n    ['width', 'i_size', 'slider',':hover'],\r\n    ['margin', 'i_margin', 'dimensions',':hover'],\r\n    '}',\r\n    ['', 'box_shadow', 'shadow',':hover'],\r\n    '}',\r\n    '.bp3-button.bp3-button:active',\r\n    ['', 'field_font_typographic', 'typographic', '.active'],\r\n    ['color', 'field_font_color', 'color', '.active'],\r\n    ['border-color', 'border_color', 'color','.active'],\r\n    ['border-radius', 'border_radius', 'dimensions','.active'],\r\n    ['', 'box_shadow', 'shadow','.active'],\r\n\r\n    '.bp3-icon svg',\r\n    ['height', 'i_size', 'slider','.active'],\r\n    ['width', 'i_size', 'slider','.active'],\r\n    ['margin', 'i_margin', 'dimensions','.active'],\r\n    '}',\r\n    '.bp3-icon path',\r\n    ['fill', 'i_color', 'color','.active'],\r\n    '}',\r\n    '.bp3-icon img',\r\n    ['height', 'i_size', 'slider','.active'],\r\n    ['width', 'i_size', 'slider','.active'],\r\n    ['margin', 'i_margin', 'dimensions','.active'],\r\n    '}',\r\n    '}',\r\n    // '.bp3-input.bp3-input.bp3-input.bp3-input::placeholder',\r\n    // ['', 'placeholder_style_font_typographic', 'typographic'],\r\n    // ['color', 'placeholder_style_font_color', 'color'],\r\n    // '}',\r\n    // '.bp3-input.bp3-input.bp3-input.bp3-input:hover::placeholder',\r\n    // ['', 'placeholder_style_font_typographic', 'typographic',':hover'],\r\n    // ['color', 'placeholder_style_font_color', 'color', ':hover'],\r\n    // '}',\r\n    // '.bp3-input.bp3-input.bp3-input.bp3-input:focus::placeholder',\r\n    // ['', 'placeholder_style_font_typographic', 'typographic',':focus'],\r\n    // ['color', 'placeholder_style_font_color', 'color', ':focus'],\r\n    // '}',\r\n    //</editor-fold>\r\n    //<editor-fold description=\"стили иконок\">\r\n    '.bp3-icon svg',\r\n    ['height', 'i_size', 'slider'],\r\n    ['width', 'i_size', 'slider'],\r\n    ['margin', 'i_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon path',\r\n    ['fill', 'i_color', 'color'],\r\n    '}',\r\n    '.bp3-icon img',\r\n    ['height', 'i_size', 'slider'],\r\n    ['width', 'i_size', 'slider'],\r\n    ['margin', 'i_margin', 'dimensions'],\r\n    '}',\r\n    //</editor-fold>\r\n\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n\r\nexport function getInputSelectPopoverStyles(settings, elementId){\r\n  let styles = [\r\n  //<editor-fold description=\"стили поповера\">\r\n    `.altrp-portal${elementId}`,\r\n    '.bp3-menu-item',\r\n    ['background-color', 'background_style_background_color', 'color'],\r\n    ['color', 'items_font_color', 'color'],\r\n    ['', 'field_font_typographic', 'typographic',],\r\n    '}',\r\n    '.bp3-menu-item:hover',\r\n    ['color', 'items_font_color', 'color', ':hover'],\r\n    ['background-color', 'background_style_background_color', 'color',':hover'],\r\n    ['', 'field_font_typographic', 'typographic', ':hover'],\r\n    '}',\r\n    '.bp3-menu-item.bp3-active.bp3-active',\r\n    ['color', 'items_font_color', 'color', '.active'],\r\n    ['background-color', 'background_style_background_color', 'color','.active'],\r\n    ['', 'field_font_typographic', 'typographic', '.active'],\r\n    '}',\r\n    '.bp3-input',\r\n    ['', 'field_font_typographic', 'typographic'],\r\n    ['height', 'si_size', 'slider'],\r\n    ['padding', 'si_padding', 'dimensions'],\r\n    ['color', 'si_color', 'color'],\r\n    ['background-color', 'si_bg_color', 'color'],\r\n    '}',\r\n    '.bp3-input:hover',\r\n    ['color', 'si_color', 'color', ':hover'],\r\n    ['background-color', 'si_bg_color', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-input:focus',\r\n    ['color', 'si_color', 'color', ':focus'],\r\n    ['background-color', 'si_bg_color', 'color', ':focus'],\r\n    '}',\r\n    '.bp3-input-group .bp3-icon svg',\r\n      ['height', 'sii_size', 'slider'],\r\n      ['width', 'sii_size', 'slider'],\r\n      ['margin', 'sii_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-input-group .bp3-icon path',\r\n      ['fill', 'sii_color', 'color'],\r\n    '}',\r\n    '.bp3-icon-add svg',\r\n\r\n    ['height', 'a_size', 'slider'],\r\n    ['width', 'a_size', 'slider'],\r\n    ['margin', 'a_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon-add path',\r\n    ['fill', 'a_color', 'color'],\r\n    '}',\r\n    '.bp3-menu-item:hover .bp3-icon-add path',\r\n    ['fill', 'a_color', 'color', ':hover'],\r\n    '}',\r\n    '}',\r\n  //</editor-fold>\r\n  ];\r\n  return styledString(styles, settings)\r\n\r\n}\r\n","import {styledString} from \"../../helpers/styles\";\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getInputTextAutocompleteStyles(settings, elementId) {\r\n  let styles = [\r\n    //<editor-fold description=\"стили лэйбла\">\r\n    '.altrp-field-label',\r\n    ['background-color', 'label_background_color', 'color'],\r\n    ['padding', 'label_padding', 'dimensions'],\r\n    ['color', 'label_style_font_color', 'color'],\r\n    ['', 'label_style_font_typographic', 'typographic'],\r\n    ['top', 'label_position_top', 'slider'],\r\n    ['left', 'label_position_left', 'slider'],\r\n    '}',\r\n    '.altrp-field-label-container',\r\n    ['width', 'label_width', 'slider'],\r\n    '}',\r\n    '.altrp-label-icon',\r\n    ['padding', 'icon_padding', 'dimensions'],\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    '}',\r\n\r\n    '.altrp-label-icon svg',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon svg path',\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon img',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    '}',\r\n    //</editor-fold>\r\n    //<editor-fold description=\"стили инпута\">\r\n    '.bp3-input-group',\r\n    ['width', 'field_width', 'slider'],\r\n    ['padding', 'position_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input',\r\n    ['height', 'field_height', 'slider'],\r\n    ['text-align', 'placeholder_and_value_alignment_position_section', ],\r\n    ['padding', 'position_padding', 'dimensions'],\r\n    ['', 'field_font_typographic', 'typographic'],\r\n    ['color', 'field_font_color', 'color'],\r\n    ['background-color', 'background_style_background_color', 'color'],\r\n    ['opacity', 'background_section_opacity', 'slider'],\r\n    ['border-style', 'border_type',],\r\n    ['border-width', 'border_width', 'dimensions'],\r\n    ['border-color', 'border_color', 'color'],\r\n    ['border-radius', 'border_radius', 'dimensions'],\r\n    ['', 'box_shadow', 'shadow'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:hover',\r\n    ['', 'field_font_typographic', 'typographic', ':hover'],\r\n    ['color', 'field_font_color', 'color', ':hover'],\r\n    ['background-color', 'background_style_background_color', 'color',':hover'],\r\n    ['border-color', 'border_color', 'color',':hover'],\r\n    ['border-radius', 'border_radius', 'dimensions',':hover'],\r\n    ['', 'box_shadow', 'shadow',':hover'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:focus',\r\n    ['', 'field_font_typographic', 'typographic', ':focus'],\r\n    ['color', 'field_font_color', 'color', ':focus'],\r\n    ['background-color', 'background_style_background_color', 'color',':focus'],\r\n    ['border-color', 'border_color', 'color',':focus'],\r\n    ['border-radius', 'border_radius', 'dimensions',':focus'],\r\n    ['', 'box_shadow', 'shadow',':focus'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input::placeholder',\r\n    ['', 'placeholder_style_font_typographic', 'typographic'],\r\n    ['color', 'placeholder_style_font_color', 'color'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:hover::placeholder',\r\n    ['', 'placeholder_style_font_typographic', 'typographic',':hover'],\r\n    ['color', 'placeholder_style_font_color', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:focus::placeholder',\r\n    ['', 'placeholder_style_font_typographic', 'typographic',':focus'],\r\n    ['color', 'placeholder_style_font_color', 'color', ':focus'],\r\n    '}',\r\n    //</editor-fold>\r\n    '.altrp-field-label--required::after',\r\n    ['', 'required_style_font_typographic', 'typographic'],\r\n    ['color', 'required_style_font_color', 'color'],\r\n    '}',\r\n    '.mask-mismatch-message',\r\n    ['margin', 'mismatch_message_margin', 'dimensions'],\r\n    ['padding', 'mismatch_message_padding', 'dimensions'],\r\n    ['color', 'mismatch_message_font_color', 'color'],\r\n    ['', 'mismatch_message_typographic', 'typographic'],\r\n    '}',\r\n    '.bp3-icon_text-widget.bp3-icon_text-widget.bp3-icon_text-widget',\r\n    ['margin', 'input_icons_margin', 'dimensions'],\r\n    ['padding', 'input_icons_padding', 'dimensions'],\r\n    ['border-radius', 'input_icons_radius', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon_text-widget',\r\n    ['background-color', 'input_icons_background', 'color', ],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover',\r\n    ['background-color', 'input_icons_background', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active',\r\n    ['background-color', 'input_icons_background', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg,& .bp3-icon_text-widget path',\r\n    ['fill', 'input_icons_fill', 'color'],\r\n    ['stroke', 'input_icons_stroke', 'color'],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover svg,& .bp3-icon_text-widget:hover path',\r\n    ['fill', 'input_icons_fill', 'color', ':hover'],\r\n    ['stroke', 'input_icons_stroke', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active svg,& .bp3-icon_text-widget:active path',\r\n    ['fill', 'input_icons_fill', 'color', '.active'],\r\n    ['stroke', 'input_icons_stroke', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget img',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n","import {styledString} from \"../../helpers/styles\";\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getInputTextCommonStyles(settings, elementId) {\r\n  let styles = [\r\n    //<editor-fold description=\"стили лэйбла\">\r\n    '.altrp-field-label',\r\n    ['background-color', 'label_background_color', 'color'],\r\n    ['padding', 'label_padding', 'dimensions'],\r\n    ['color', 'label_style_font_color', 'color'],\r\n    ['', 'label_style_font_typographic', 'typographic'],\r\n    ['top', 'label_position_top', 'slider'],\r\n    ['left', 'label_position_left', 'slider'],\r\n    '}',\r\n    '.altrp-field-label-container',\r\n    ['width', 'label_width', 'slider'],\r\n    '}',\r\n    '.altrp-label-icon',\r\n    ['padding', 'icon_padding', 'dimensions'],\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    '}',\r\n\r\n    '.altrp-label-icon svg',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon svg path',\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon img',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    '}',\r\n    //</editor-fold>\r\n    //<editor-fold description=\"стили инпута\">\r\n    '.bp3-input-group',\r\n    ['width', 'field_width', 'slider'],\r\n    ['padding', 'position_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input',\r\n    ['height', 'field_height', 'slider'],\r\n    ['text-align', 'placeholder_and_value_alignment_position_section', ],\r\n    ['padding', 'position_padding', 'dimensions'],\r\n    ['', 'field_font_typographic', 'typographic'],\r\n    ['color', 'field_font_color', 'color'],\r\n    ['background-color', 'background_style_background_color', 'color'],\r\n    ['opacity', 'background_section_opacity', 'slider'],\r\n    ['border-style', 'border_type',],\r\n    ['border-width', 'border_width', 'dimensions'],\r\n    ['border-color', 'border_color', 'color'],\r\n    ['border-radius', 'border_radius', 'dimensions'],\r\n    ['', 'box_shadow', 'shadow'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:hover',\r\n    ['', 'field_font_typographic', 'typographic', ':hover'],\r\n    ['color', 'field_font_color', 'color', ':hover'],\r\n    ['background-color', 'background_style_background_color', 'color',':hover'],\r\n    ['border-color', 'border_color', 'color',':hover'],\r\n    ['border-radius', 'border_radius', 'dimensions',':hover'],\r\n    ['', 'box_shadow', 'shadow',':hover'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:focus',\r\n    ['', 'field_font_typographic', 'typographic', ':focus'],\r\n    ['color', 'field_font_color', 'color', ':focus'],\r\n    ['background-color', 'background_style_background_color', 'color',':focus'],\r\n    ['border-color', 'border_color', 'color',':focus'],\r\n    ['border-radius', 'border_radius', 'dimensions',':focus'],\r\n    ['', 'box_shadow', 'shadow',':focus'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input::placeholder',\r\n    ['', 'placeholder_style_font_typographic', 'typographic'],\r\n    ['color', 'placeholder_style_font_color', 'color'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:hover::placeholder',\r\n    ['', 'placeholder_style_font_typographic', 'typographic',':hover'],\r\n    ['color', 'placeholder_style_font_color', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:focus::placeholder',\r\n    ['', 'placeholder_style_font_typographic', 'typographic',':focus'],\r\n    ['color', 'placeholder_style_font_color', 'color', ':focus'],\r\n    '}',\r\n    //</editor-fold>\r\n    '.altrp-field-label--required::after',\r\n    ['', 'required_style_font_typographic', 'typographic'],\r\n    ['color', 'required_style_font_color', 'color'],\r\n    '}',\r\n    '.mask-mismatch-message',\r\n    ['margin', 'mismatch_message_margin', 'dimensions'],\r\n    ['padding', 'mismatch_message_padding', 'dimensions'],\r\n    ['color', 'mismatch_message_font_color', 'color'],\r\n    ['', 'mismatch_message_typographic', 'typographic'],\r\n    '}',\r\n    '.bp3-icon_text-widget.bp3-icon_text-widget.bp3-icon_text-widget',\r\n    ['margin', 'input_icons_margin', 'dimensions'],\r\n    ['padding', 'input_icons_padding', 'dimensions'],\r\n    ['border-radius', 'input_icons_radius', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon_text-widget',\r\n    ['background-color', 'input_icons_background', 'color', ],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover',\r\n    ['background-color', 'input_icons_background', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active',\r\n    ['background-color', 'input_icons_background', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg,& .bp3-icon_text-widget path',\r\n    ['fill', 'input_icons_fill', 'color'],\r\n    ['stroke', 'input_icons_stroke', 'color'],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover svg,& .bp3-icon_text-widget:hover path',\r\n    ['fill', 'input_icons_fill', 'color', ':hover'],\r\n    ['stroke', 'input_icons_stroke', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active svg,& .bp3-icon_text-widget:active path',\r\n    ['fill', 'input_icons_fill', 'color', '.active'],\r\n    ['stroke', 'input_icons_stroke', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget img',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n","import {getResponsiveSetting} from '../../helpers';\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  shadowControllerToStyles, styledString,\r\n  typographicControllerToStyles\r\n} from \"../../helpers/styles\";\r\n\r\nconst getMenuStyles = (settings, id) => {\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  let styles = `${parentClass} .altrp-menu{`;\r\n\r\n  const menuAlignment = getResponsiveSetting(settings, \"menu_alignment\");\r\n\r\n  if (getResponsiveSetting(settings, 'type') === 'horizontal') {\r\n    styles += 'display: flex;';\r\n    styles += 'flex-direction: row;'\r\n    // styles += '.bp3-submenu{flex-grow:1}';\r\n    styles += '.bp3-icon-caret-right{transform: rotate(90deg);}';\r\n    if(menuAlignment) {\r\n      styles += `justify-content: ${menuAlignment}`\r\n    }\r\n  } else {\r\n    styles += 'flex-direction: column;'\r\n    if(menuAlignment) {\r\n      styles += `align-items: ${menuAlignment}`\r\n    }\r\n  }\r\n\r\n  styles += '} ';\r\n  /**\r\n   * Стили поповера\r\n   * @type {string}\r\n   */\r\n  let renderButton = getResponsiveSetting(settings, 'button');\r\n  if (renderButton) {\r\n    styles += `${parentClass}${parentClass} {`;\r\n    let alignment = getResponsiveSetting(settings, 'alignment')\r\n    styles += `justify-content:${alignment};flex-direction: row;`;\r\n    if (alignment !== 'stretch') {\r\n      styles += `& .altrp-popover{flex-grow:0; width: auto;}`;\r\n    } else {\r\n      styles += `& .bp3-button {width: 100%;}`;\r\n    }\r\n    styles += '} ';\r\n  }\r\n  /**\r\n   * Стили кнопки\r\n   * @type {string}\r\n   */\r\n  if (renderButton) {\r\n    styles += `${parentClass}${parentClass} .altrp-menu-toggle{`;\r\n    let buttonBg = getResponsiveSetting(settings, 'button_bg')\r\n    if (buttonBg && buttonBg.color) {\r\n      styles += `background-color:${buttonBg.color};background-image:none;`;\r\n    }\r\n    let buttonColor = getResponsiveSetting(settings, 'button_color')\r\n    if (buttonColor && buttonColor.color) {\r\n      styles += `svg, path{fill:${buttonColor.color};}`;\r\n    }\r\n    let buttonPadding = getResponsiveSetting(settings, 'button_padding')\r\n    if (buttonPadding) {\r\n      styles += dimensionsControllerToStyles(buttonPadding);\r\n    }\r\n    let border = getResponsiveSetting(settings, 'border');\r\n    if (border) {\r\n      styles += `border-style:${border};`;\r\n      styles += dimensionsControllerToStyles(getResponsiveSetting(settings, 'border_width'), 'border-width');\r\n      let borderColor = getResponsiveSetting(settings, 'border_color')\r\n      if (borderColor && borderColor.color) {\r\n        styles += `border-color:${borderColor.color};`;\r\n      }\r\n    }\r\n    let borderRadius = getResponsiveSetting(settings, 'button_radius');\r\n    if (borderRadius) {\r\n      styles += dimensionsControllerToStyles(borderRadius, 'border-radius');\r\n    }\r\n    styles += '} ';\r\n\r\n    styles += `${parentClass} .altrp-menu-toggle:hover{`;\r\n    buttonBg = getResponsiveSetting(settings, 'button_bg', ':hover')\r\n    if (buttonBg && buttonBg.color) {\r\n      styles += `background-color:${buttonBg.color};background-image:none;`;\r\n    }\r\n    buttonColor = getResponsiveSetting(settings, 'button_color', ':hover')\r\n    if (buttonColor && buttonColor.color) {\r\n      styles += `svg, path{fill:${buttonColor.color};}`;\r\n    }\r\n    border = getResponsiveSetting(settings, 'border', ':hover');\r\n    if (border) {\r\n      styles += `border-style:${border};`;\r\n      styles += dimensionsControllerToStyles(getResponsiveSetting(settings, 'border_width', ':hover'), 'border-width');\r\n      let borderColor = getResponsiveSetting(settings, 'border_color', ':hover')\r\n      if (borderColor && borderColor.color) {\r\n        styles += `border-color:${borderColor.color};`;\r\n      }\r\n    }\r\n    borderRadius = getResponsiveSetting(settings, 'button_radius', ':hover');\r\n    if (borderRadius) {\r\n      styles += dimensionsControllerToStyles(borderRadius, 'border-radius');\r\n    }\r\n    styles += '}';\r\n  }\r\n\r\n  styles += `.altrp-element${id}.altrp-widget_menu {`; // было .altrp-portal${id} .altrp-menu\r\n\r\n  // const menuPadding = getResponsiveSetting(settings, 'menu_padding');\r\n  // if (menuPadding) {\r\n  //   styles += dimensionsControllerToStyles(menuPadding);\r\n  // }\r\n  // let menu_radius = getResponsiveSetting(settings, 'menu_radius');\r\n  // if (menu_radius) {\r\n  //   styles += dimensionsControllerToStyles(menu_radius, 'border-radius');\r\n  // }\r\n  // let gap = getResponsiveSetting(settings, 'gap');\r\n  // if (gap) {\r\n  //   gap = gap.replace(',', '.')\r\n  //   styles += `& .altrp-menu > li:not(:last-child) { margin-${\r\n  //     getResponsiveSetting(settings, 'type') === 'horizontal' ? 'right' : 'bottom'\r\n  //   }: ${gap}}`;\r\n  //\r\n  // }\r\n  styles += '}';\r\n  // styles += `.altrp-element${id} .altrp-menu{`;\r\n  // let menuBg = getResponsiveSetting(settings, 'menu_bg');\r\n  // if (menuBg && menuBg.color) {\r\n  //   styles += `background-color: ${menuBg.color};`;\r\n  // }\r\n  // styles += '}';\r\n  /**\r\n   * стили для ховера\r\n   * @type {string}\r\n   */\r\n  styles += `.altrp-element${id}.altrp-widget_menu:hover {`; // было .altrp-portal${id} .altrp-menu:hover\r\n\r\n  // menu_radius = getResponsiveSetting(settings, 'menu_radius', ':hover');\r\n  // if (menu_radius) {\r\n  //   styles += dimensionsControllerToStyles(menu_radius, 'border-radius');\r\n  // }\r\n\r\n  styles += '}';\r\n  if (renderButton) {\r\n    styles += `.altrp-portal_main.altrp-portal${id} .altrp-menu{`;\r\n    let mainPortalWidth = getResponsiveSetting(settings, 'width');\r\n    if (mainPortalWidth) {\r\n      styles += `max-width:${mainPortalWidth};width:${mainPortalWidth};`;\r\n    }\r\n    styles += '}';\r\n  }\r\n\r\n  styles += `.bp3-menu-item.altrp-menu-item${id}{align-items:center;border-radius:0;`;\r\n\r\n  let padding = getResponsiveSetting(settings, 'padding');\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  let typographic = getResponsiveSetting(settings, 'typographic');\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  let bg = getResponsiveSetting(settings, 'bg');\r\n\r\n\r\n  if (bg && bg.color) {\r\n    styles += `background-color: ${bg.color};`;\r\n  }\r\n  let color = getResponsiveSetting(settings, 'color');\r\n\r\n  if (color && color.color) {\r\n    styles += `color: ${color.color};`;\r\n    styles += `.bp3-icon svg, .bp3-icon path{fill: ${color.color};}`;\r\n  }\r\n\r\n\r\n  styles += '}';\r\n  /**\r\n   * Hover Styles\r\n   */\r\n  styles += `.bp3-popover-open.bp3-popover-target .bp3-menu-item.altrp-menu-item.altrp-menu-item${id},\r\n    .bp3-menu-item.altrp-menu-item.altrp-menu-item${id}:hover{`;\r\n  bg = getResponsiveSetting(settings, 'bg', ':hover');\r\n  if (bg && bg.color) {\r\n    styles += `background-color: ${bg.color};`;\r\n  }\r\n\r\n  typographic = getResponsiveSetting(settings, 'typographic', ':hover');\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  color = getResponsiveSetting(settings, 'color', ':hover');\r\n  if (color && color.color) {\r\n    styles += `color: ${color.color};`;\r\n    styles += `.bp3-icon svg, .bp3-icon path{fill: ${color.color};}`;\r\n  }\r\n  styles += '}';\r\n\r\n  /**\r\n   * Active Styles\r\n   */\r\n  styles += `.bp3-popover-open.bp3-popover-target .bp3-menu-item.altrp-menu-item.altrp-menu-item${id},\r\n    .bp3-menu-item.altrp-menu-item.altrp-menu-item${id}.active{`;\r\n  bg = getResponsiveSetting(settings, 'bg', '.active');\r\n  if (bg && bg.color) {\r\n    styles += `background-color: ${bg.color};`;\r\n  }\r\n\r\n  typographic = getResponsiveSetting(settings, 'typographic', '.active');\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  color = getResponsiveSetting(settings, 'color', '.active');\r\n  if (color && color.color) {\r\n    styles += `color: ${color.color};`;\r\n    styles += `.bp3-icon svg, .bp3-icon path{fill: ${color.color};}`;\r\n  }\r\n  styles += '}';\r\n\r\n  // if (gap) {\r\n  //   styles += `.altrp-portal${id} .bp3-menu > li:not(:last-child) { margin-bottom: ${gap}}`;\r\n  // }\r\n\r\n  /**\r\n   * Submenu styles\r\n   */\r\n  styles += `.altrp-portal${id} .bp3-menu{`;\r\n\r\n  // let sub_menu_padding = getResponsiveSetting(settings, 'sub_menu_padding');\r\n  // if (sub_menu_padding) {\r\n  //   styles += dimensionsControllerToStyles(sub_menu_padding);\r\n  // }\r\n\r\n  let sub_menu_bg = getResponsiveSetting(settings, 'sub_menu_bg');\r\n  if (sub_menu_bg && sub_menu_bg.color) {\r\n    styles += `background-color: ${sub_menu_bg.color};`;\r\n  }\r\n\r\n\r\n  styles += '}';\r\n\r\n  styles += `.bp3-portal .altrp-portal.altrp-portal${id} .bp3-popover-content{`\r\n\r\n  let sub_menu_shadow = getResponsiveSetting(settings, 'sub_menu_shadow');\r\n  if (sub_menu_shadow) {\r\n    styles += shadowControllerToStyles(sub_menu_shadow);\r\n  }\r\n  styles += '}';\r\n\r\n  styles += `.altrp-portal.altrp-portal${id} .bp3-popover-content,\r\n    .altrp-portal.altrp-portal${id} .bp3-menu{`;\r\n  // let sub_menu_radius = getResponsiveSetting(settings, 'sub_menu_radius');\r\n  // if (sub_menu_radius) {\r\n  //   styles += dimensionsControllerToStyles(sub_menu_radius, 'border-radius');\r\n  // }\r\n  styles += '}';\r\n  styles += `.altrp-portal${id} .bp3-menu:hover{`;\r\n\r\n  sub_menu_bg = getResponsiveSetting(settings, 'sub_menu_bg', ':hover');\r\n  if (sub_menu_bg && sub_menu_bg.color) {\r\n    styles += `background-color: ${sub_menu_bg.color};`;\r\n  }\r\n\r\n\r\n  styles += `.bp3-portal .altrp-portal.altrp-portal${id} .bp3-popover-content:hover{`\r\n\r\n  sub_menu_shadow = getResponsiveSetting(settings, 'sub_menu_shadow', ':hover');\r\n  if (sub_menu_shadow) {\r\n    styles += shadowControllerToStyles(sub_menu_shadow);\r\n  }\r\n  styles += '}';\r\n  styles += '}';\r\n\r\n  styles += `.altrp-portal.altrp-portal${id} .bp3-popover-content:hover,\r\n    .altrp-portal.altrp-portal${id} .bp3-menu:hover{`;\r\n\r\n  // sub_menu_radius = getResponsiveSetting(settings, 'sub_menu_radius', ':hover');\r\n  // if (sub_menu_radius) {\r\n  //   styles += dimensionsControllerToStyles(sub_menu_radius, 'border-radius');\r\n  // }\r\n  styles += '}';\r\n\r\n\r\n  const menuStyles = [\r\n    \"altrp-menu\",\r\n      [\"padding\", \"menu_padding\", \"dimensions\"],\r\n      () => {\r\n        const value = getResponsiveSetting(settings, 'gap');\r\n\r\n        if(value) {\r\n          return `grid-gap: ${value};`\r\n        } else {\r\n          return \"\"\r\n        }\r\n      },\r\n      [\"background-color\", \"menu_bg\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-menu li .bp3-menu-item\",\r\n      [\"border-radius\", \"item_radius\", \"dimensions\"],\r\n    \"}\",\r\n  ]\r\n\r\n  const styledArray = [\r\n    ...menuStyles\r\n  ]\r\n\r\n  styles += `.altrp-element${id} {${styledString(styledArray, settings)}}`\r\n\r\n  const styledPortalArray = [\r\n    \"bp3-popover-content.bp3-popover-content\",\r\n      [\"border-radius\", \"popover_radius\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"& li .bp3-menu-item\",\r\n      [\"border-radius\", \"sub_menu_radius\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"bp3-popover-content .bp3-menu\",\r\n      [\"border-radius\", \"popover_radius\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"bp3-menu\",\r\n\r\n      () => {\r\n        let styles = \"\";\r\n        if (getResponsiveSetting(settings, 'type') === 'horizontal') {\r\n          styles += 'display: flex;';\r\n          styles += 'flex-direction: row;'\r\n          // styles += '.bp3-submenu{flex-grow:1}';\r\n          styles += '.bp3-icon-caret-right{transform: rotate(90deg);}';\r\n          if(menuAlignment) {\r\n            styles += `justify-content: ${menuAlignment}`\r\n          }\r\n        } else {\r\n          styles += 'flex-direction: column;'\r\n          if(menuAlignment) {\r\n            styles += `align-items: ${menuAlignment};`\r\n          }\r\n        }\r\n\r\n        return styles\r\n      },\r\n    \"}\",\r\n\r\n    \"&.altrp-menu-first-portal .bp3-menu\",\r\n      () => {\r\n        const value = getResponsiveSetting(settings, \"popover_width\");\r\n\r\n        if(value) {\r\n          return `max-width:${value};width: ${value};`;\r\n        }\r\n      },\r\n    \"}\",\r\n\r\n    \"&.altrp-sub-portal .bp3-menu\",\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"sub_width\");\r\n\r\n      if(value) {\r\n        return `max-width:${value};width: ${value};`;\r\n      }\r\n    },\r\n    \"}\",\r\n\r\n    ...menuStyles,\r\n  ]\r\n  styles += `.altrp-portal${id} {${styledString(styledPortalArray, settings)}}`\r\n\r\n  return styles;\r\n}\r\n\r\nexport default getMenuStyles;\r\n","import { getResponsiveSetting } from '../../helpers';\r\nimport { borderWidthStyled, sizeStyled, colorPropertyStyled, simplePropertyStyled, dimensionsControllerToStyles, typographicControllerToStyles } from '../../helpers/styles';\r\n\r\nconst getSchedulerStyles = (settings, id) => {\r\n    let styles = ''\r\n    styles += `.popup {\r\n        position: absolute;\r\n        top: 60%;\r\n        left: 50%;\r\n        transform: translate(-50%, -60%);\r\n        width: 800px;\r\n        max-width: 100%;\r\n        background-color: white;\r\n        z-index: 999;\r\n        border: solid #ddd 1px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n    }`\r\n\r\n    styles += ` .popup-wrapper {\r\n        position: relative;\r\n    }`\r\n\r\n    styles += ` .popup__body {\r\n        padding: 20px;\r\n    }`\r\n\r\n    styles += `.popup__text-field {\r\n        font-size: 14px;\r\n        margin-bottom: 8px;\r\n    }`\r\n\r\n    styles += `.bp3-input {\r\n        height: 40px;\r\n    }`\r\n\r\n    styles += ` .popup__actions {\r\n        padding: 16px;\r\n        border-top: solid #ddd 1px;\r\n    }`\r\n\r\n    styles += `.popup__field-title {\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n    }`\r\n\r\n    styles += `.popup__field-title:not(:first-child) {\r\n        margin-top: 8px\r\n    }`\r\n\r\n    styles += `.popup__textarea {\r\n        height: 80px;\r\n    }`\r\n    \r\n    styles += `.popup__actions .button {\r\n        border: solid #ddd 1px;\r\n        background-color: #fff;\r\n        margin-right: 10px;\r\n        padding: 9px 15px;\r\n        border-radius: 3px;\r\n        font-size: 15px;\r\n    }`\r\n\r\n    styles += `.popup__actions .button.button-danger {\r\n        border: none;\r\n        background-color: #e82721;\r\n        color: #fff;\r\n    }`\r\n\r\n    styles += `.popup__actions .button.button-danger:hover {\r\n        background-color: #a62219;\r\n    }`\r\n\r\n\r\n    styles += `.popup__actions input[type=\"button\"]:hover {\r\n        background-color: #fafafa;\r\n    }`\r\n\r\n    const switcher_bgc = getResponsiveSetting(settings, 'switcher_bgc', '', {\r\n        color: 'rgba(44, 62, 80, 100)',\r\n        colorPickedHex: '#2C3E50'\r\n    })\r\n\r\n    styles += `.fc-button {\r\n        background-color: ${switcher_bgc?.color} !important;\r\n    }`\r\n\r\n    const switcherBgcActive = getResponsiveSetting(settings, 'switcher_bgc', ':active', {\r\n        color: 'rgba(44, 62, 80, 100)',\r\n        colorPickedHex: '#2C3E50'\r\n    })\r\n\r\n    styles += `.fc .fc-button-primary:not(:disabled).fc-button-active, .fc .fc-button-primary:not(:disabled):active {\r\n        background-color: ${switcherBgcActive?.color} !important;\r\n    }`\r\n\r\n    const switcher_bgc_hover = getResponsiveSetting(settings, 'switcher_bgc', ':hover')\r\n\r\n    styles += `.fc-button:hover {\r\n        background-color: ${switcher_bgc_hover?.color} !important;\r\n    }`\r\n\r\n    styles += `.fc-col-header-cell-cushion {\r\n        color: inherit;\r\n    }`\r\n\r\n    styles += `.fc-daygrid-day-number {\r\n        color: inherit;\r\n    }`\r\n\r\n    styles += `.fc .fc-day-other .fc-daygrid-day-top {\r\n        opacity: 1;\r\n    }`\r\n\r\n    styles += `.fc-h-event .fc-event-main {\r\n        color: inherit;\r\n    }`\r\n\r\n    const switcherBorderType = getResponsiveSetting(settings, \"switcher_border_type\", '', 'solid');\r\n    const switcherBorderWidth = getResponsiveSetting(settings, 'switcher_border_width', '', {\r\n        top: 1,\r\n        right: 1,\r\n        bottom: 1,\r\n        left: 1,\r\n        unit: \"px\",\r\n        bind: true\r\n    })\r\n\r\n    const switcherBorderColor = getResponsiveSetting(settings, 'switcher_border_color', '', {\r\n        color: \"rgba(44,62,80,100)\",\r\n        colorPickedHex: \"#2C3E50\"\r\n      })\r\n\r\n    styles += `.fc .fc-button {\r\n        ${simplePropertyStyled(switcherBorderType, 'border-style')}\r\n        ${borderWidthStyled(switcherBorderWidth)}\r\n        ${colorPropertyStyled(switcherBorderColor, 'border-color')}\r\n        ${typographicControllerToStyles(getResponsiveSetting(settings, 'switcher_typography'))}\r\n    }`\r\n\r\n    const switcherHoverBorderColor = getResponsiveSetting(settings, 'switcher_border_color', ':hover', {\r\n        color: 'rgb(26, 37, 47)',\r\n        colorPickedHex: '#1a252f'\r\n    })\r\n\r\n    styles += `.fc .fc-button:hover {\r\n        ${simplePropertyStyled( getResponsiveSetting(settings, 'switcher_border_type', ':hover') , 'border-style')}\r\n        ${borderWidthStyled( getResponsiveSetting(settings, 'switcher_border_width', ':hover') )}\r\n        ${colorPropertyStyled( switcherHoverBorderColor , 'border-color')}\r\n        ${typographicControllerToStyles(getResponsiveSetting(settings, 'switcher_typography', ':hover'))}\r\n    }`\r\n\r\n    const toolbarTitleColor = getResponsiveSetting(settings, 'toolbar_title_color', '', {\r\n      color: \"rgba(0,0,0,100)\",\r\n      colorPickedHex: \"#000000\"\r\n    })\r\n\r\n    styles += `.fc-toolbar-title {\r\n        ${colorPropertyStyled(toolbarTitleColor, 'color')}\r\n        ${typographicControllerToStyles(getResponsiveSetting(settings, 'toolbar_title_typography'))}\r\n    }`\r\n\r\n    styles += `.fc-toolbar-title:hover {\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'toolbar_title_color', ':hover', {\r\n            color: \"rgba(0,0,0,100)\",\r\n            colorPickedHex: \"#000000\"\r\n        }) , 'color')}\r\n    }`\r\n\r\n    // styles += `.fc-theme-standard .fc-scrollgrid {\r\n    //     ${simplePropertyStyled( getResponsiveSetting(settings, 'table_border_type') , 'border-style')}\r\n    //     ${borderWidthStyled( getResponsiveSetting(settings, 'table_border_width') )}\r\n    //     ${colorPropertyStyled( getResponsiveSetting(settings, 'table_border_color') , 'border-color')}\r\n    //     ${dimensionsControllerToStyles( getResponsiveSetting(settings, 'table_border_radius') , \"border-radius\")}\r\n    // }`\r\n\r\n    const tableBorderColor = colorPropertyStyled( getResponsiveSetting(settings, 'table_border_color', '', {\r\n        color: \"rgba(221,221,221,100)\",\r\n        colorPickedHex: \"#DDDDDD\"\r\n    }) , 'border-color')\r\n\r\n    styles += `.fc-theme-standard .fc-scrollgrid {\r\n        ${tableBorderColor}\r\n    }`\r\n\r\n    styles += `.fc-theme-standard td, .fc-theme-standard th {\r\n        ${tableBorderColor}\r\n    }`\r\n\r\n    styles += `.fc-col-header-cell {\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'header_cell_color', '', {\r\n            color: \"rgba(0,0,0,100)\",\r\n            colorPickedHex: \"#000000\"\r\n        }) , 'color')}\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'header_cell_background-color', '', {\r\n            color: \"rgba(255,255,255,100)\",\r\n            colorPickedHex: \"#FFFFFF\"\r\n        }) , 'background-color')}\r\n        ${typographicControllerToStyles( getResponsiveSetting(settings, 'header_cell_typography') )}\r\n    }`\r\n    styles += `.fc-col-header-cell:hover {\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'header_cell_color', ':hover', {\r\n            color: \"rgba(0,0,0,100)\",\r\n            colorPickedHex: \"#000000\"\r\n        }), 'color')}\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'header_cell_background-color', ':hover', {\r\n            color: \"rgba(255,255,255,100)\",\r\n            colorPickedHex: \"#FFFFFF\"\r\n        }) , 'background-color')}\r\n        ${typographicControllerToStyles( getResponsiveSetting(settings, 'header_cell_typography', ':hover') )}\r\n    }`\r\n\r\n\r\n    styles += `.fc-daygrid-day:not(.fc-day-other):not(.fc-day-today) {\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'active_cell_color', '', {\r\n            color: \"rgba(0,0,0,100)\",\r\n            colorPickedHex: \"#000000\"\r\n        }), 'color')}\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'active_cell_background-color', '', {\r\n            color: \"rgba(255,255,255,100)\",\r\n            colorPickedHex: \"#FFFFFF\"\r\n        }) , 'background-color')}\r\n        ${typographicControllerToStyles( getResponsiveSetting(settings, 'active_cell_typography') )}\r\n    }`\r\n    styles += `.fc-daygrid-day:not(.fc-day-other):not(.fc-day-today):hover {\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'active_cell_color', ':hover', {\r\n            color: \"rgba(0,0,0,100)\",\r\n            colorPickedHex: \"#000000\"\r\n        }), 'color')}\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'active_cell_background-color', ':hover', {\r\n            color: \"rgba(255,255,255,100)\",\r\n            colorPickedHex: \"#FFFFFF\"\r\n        }) , 'background-color')}\r\n        ${typographicControllerToStyles( getResponsiveSetting(settings, 'active_cell_typography', ':hover') )}\r\n    }`\r\n\r\n    \r\n    styles += `.fc-day-other {\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'muted_cell_color', '', {\r\n            color: \"rgba(34,25,77,100)\",\r\n            colorPickedHex: \"#F5F5F5\"\r\n        }) , 'color')}\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'muted_cell_background-color', '', {\r\n            color: \"rgba(255,255,255,100)\",\r\n            colorPickedHex: \"#FFFFFF\"\r\n        }) , 'background-color')}\r\n        ${typographicControllerToStyles( getResponsiveSetting(settings, 'muted_cell_typography') )}\r\n    }`\r\n    styles += `.fc-day-other:hover {\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'muted_cell_color', ':hover', {\r\n            color: \"rgba(34,25,77,100)\",\r\n            colorPickedHex: \"#F5F5F5\"\r\n        }) , 'color')}\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'muted_cell_background-color', ':hover', {\r\n            color: \"rgba(255,255,255,100)\",\r\n            colorPickedHex: \"#FFFFFF\"\r\n        }) , 'background-color')}\r\n        ${typographicControllerToStyles( getResponsiveSetting(settings, 'muted_cell_typography', ':hover') )}\r\n    }`\r\n\r\n\r\n    styles += `.fc-day-today {\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'current_cell_color', '', {\r\n            color: \"rgba(34,25,77,100)\",\r\n            colorPickedHex: \"#F5F5F5\"\r\n        }) , 'color')}\r\n        background-color: ${getResponsiveSetting(settings, 'current_cell_background-color', '', {\r\n            color: \"rgba(255,255,255,100)\",\r\n            colorPickedHex: \"#FFFFFF\"\r\n        })?.color } !important;\r\n        ${typographicControllerToStyles( getResponsiveSetting(settings, 'current_cell_typography') )}\r\n    }`\r\n    styles += `.fc-day-today:hover {\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'current_cell_color', ':hover', {\r\n            color: \"rgba(34,25,77,100)\",\r\n            colorPickedHex: \"#F5F5F5\"\r\n        }) , 'color')}\r\n        background-color: ${getResponsiveSetting(settings, 'current_cell_background-color', ':hover', {\r\n            color: \"rgba(255,255,255,100)\",\r\n            colorPickedHex: \"#FFFFFF\"\r\n        })?.color } !important;\r\n        ${typographicControllerToStyles( getResponsiveSetting(settings, 'current_cell_typography', ':hover') )}\r\n    }`\r\n\r\n    styles += `.fc-event {\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'event_color', '', {\r\n            color: \"rgba(255,255,255,100)\",\r\n            colorPickedHex: \"#000000\"\r\n        }) , 'color')}\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'event_background-color', '', {\r\n            color: \"rgba(55,136,216,100)\",\r\n            colorPickedHex: \"#3788d8\"\r\n        }) , 'background-color')}\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'event_border_color', '', {\r\n            color: \"rgba(55,136,216,100)\",\r\n            colorPickedHex: \"#3788d8\"\r\n        }) , 'border-color')}\r\n        ${typographicControllerToStyles( getResponsiveSetting(settings, 'event_typography') )}\r\n        ${simplePropertyStyled( getResponsiveSetting(settings, 'event_border_type') , 'border-style')}\r\n        ${borderWidthStyled( getResponsiveSetting(settings, 'event_border_width', '', {\r\n            top: 1,\r\n            right: 1,\r\n            bottom: 1,\r\n            left: 1,\r\n            unit: \"px\",\r\n            bind: true\r\n        }) )}\r\n        ${sizeStyled( getResponsiveSetting(settings, 'event_border_radius', '', {\r\n            size: 0,\r\n            unit: 'px',\r\n        }) , \"border-radius\")}\r\n    }`\r\n    styles += `.fc-event:hover {\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'event_color', ':hover', {\r\n            color: \"rgba(255,255,255,100)\",\r\n            colorPickedHex: \"#000000\"\r\n        }) , 'color')}\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'event_background-color', ':hover', {\r\n            color: \"rgba(55,136,216,100)\",\r\n            colorPickedHex: \"#3788d8\"\r\n        }) , 'background-color')}\r\n        ${colorPropertyStyled( getResponsiveSetting(settings, 'event_border_color', ':hover', {\r\n            color: \"rgba(55,136,216,100)\",\r\n            colorPickedHex: \"#3788d8\"\r\n        }) , 'border-color')}\r\n        ${typographicControllerToStyles( getResponsiveSetting(settings, 'event_typography', ':hover') )}\r\n        ${simplePropertyStyled( getResponsiveSetting(settings, 'event_border_type', ':hover') , 'border-style')}\r\n        ${borderWidthStyled( getResponsiveSetting(settings, 'event_border_width', ':hover', {\r\n            top: 1,\r\n            right: 1,\r\n            bottom: 1,\r\n            left: 1,\r\n            unit: \"px\",\r\n            bind: true\r\n        }) )}\r\n        ${sizeStyled( getResponsiveSetting(settings, 'event_border_radius', ':hover', {\r\n            size: 0,\r\n            unit: 'px',\r\n        }) , \"border-radius\")}\r\n    }`\r\n    \r\n    return styles;\r\n}\r\n\r\nexport default getSchedulerStyles;\r\n","import {styledString} from \"../../helpers/styles\";\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getTemplateStyles(settings, elementId) {\r\n  let styles =[\r\n    '& > .altrp-posts > .altrp-post > .sections-wrapper',\r\n    ['width', 'width'],\r\n    '}'\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n\r\n","import {getResponsiveSetting} from \"../../helpers\";\r\nimport { typographicControllerToStyles, colorPropertyStyled } from \"../../helpers/styles\";\r\n\r\nconst getBreadcrumbsStyles =(settings,id)=>{\r\n    const parentClass = `.altrp-element${id}`;\r\n\r\n  let styles = '';\r\n\r\n  styles = `${parentClass} .bp3-icon svg{\r\n    width:${getResponsiveSetting(settings, 'icon_width') || '20px'};\r\n    height:${getResponsiveSetting(settings, 'icon_height') || '20px'};`\r\n\r\n  const colorIcon = getResponsiveSetting(settings, 'icon_color');\r\n\r\n  if (colorIcon) {\r\n    styles += colorPropertyStyled(colorIcon, 'color');\r\n  }\r\n\r\n    styles += `} `;\r\n\r\n    styles += `${parentClass} .bp3-icon{`;\r\n    let icon_ml = getResponsiveSetting(settings, 'icon_ml');\r\n    if(icon_ml){\r\n      styles += `margin-left:${icon_ml};`;\r\n    }\r\n    let icon_mr = getResponsiveSetting(settings, 'icon_mr');\r\n    if(icon_mr){\r\n        styles += `margin-right:${icon_mr};`;\r\n    }\r\n    styles += `} `;\r\n\r\n    styles += `${parentClass} .altrp-menu-item__icon {display:flex;}`;\r\n    let height = getResponsiveSetting(settings, 'height');\r\n    if(height){\r\n        styles += `${parentClass} .bp3-breadcrumbs{height:${height};}`;\r\n    }\r\n    styles += `${parentClass} .bp3-breadcrumbs > li::after{`;\r\n    const delimiter = getResponsiveSetting(settings, 'delimiter');\r\n    if(delimiter && delimiter.url){\r\n        styles += `background:url(${delimiter.url}) no-repeat center;`\r\n        styles += `background-size:contain;`\r\n    }\r\n    const delimiter_width = getResponsiveSetting(settings, 'delimiter_width');\r\n    if(delimiter_width){\r\n        styles += `width:${delimiter_width};`\r\n    }\r\n    const delimiter_height = getResponsiveSetting(settings, 'delimiter_height');\r\n    if(delimiter_height){\r\n        styles += `height:${delimiter_height};`\r\n    }\r\n    const delimiter_ml = getResponsiveSetting(settings, 'delimiter_ml');\r\n    if(delimiter_ml){\r\n        styles += `margin-left:${delimiter_ml};`\r\n    }\r\n    const delimiter_mr = getResponsiveSetting(settings, 'delimiter_mr');\r\n    if(delimiter_mr){\r\n        styles += `margin-right:${delimiter_mr};`\r\n    }\r\n\r\n    styles += `} `;\r\n    styles += `${parentClass} .bp3-breadcrumb:not(.bp3-breadcrumb-current){`;\r\n\r\n    let color = getResponsiveSetting(settings, 'color');\r\n\r\n    if(color && color.color){\r\n        styles += `color:${color.color};`;\r\n        styles += `svg, path {fill: ${color.color};`;\r\n    }\r\n    let font = getResponsiveSetting(settings, 'font');\r\n    if(font){\r\n        styles += typographicControllerToStyles(font);\r\n    }\r\n    styles += `} `;\r\n\r\n    styles += `${parentClass} .bp3-breadcrumb:not(.bp3-breadcrumb-current):hover{`;\r\n\r\n    color = getResponsiveSetting(settings, 'color', ':hover');\r\n\r\n    if(color && color.color){\r\n        styles += `color:${color.color};`;\r\n        styles += `svg, path {fill: ${color.color};`;\r\n    }\r\n    font = getResponsiveSetting(settings, 'font', ':hover');\r\n\r\n    if(font){\r\n        styles += typographicControllerToStyles(font);\r\n    }\r\n    styles += `}`;\r\n\r\n  styles += `${parentClass} .bp3-breadcrumb.bp3-breadcrumb-current{`;\r\n\r\n    let current_color = getResponsiveSetting(settings, 'current_color');\r\n\r\n    if(current_color && current_color.color){\r\n        styles += `color:${current_color.color};`;\r\n        styles += `svg, path {fill: ${current_color.color};}`;\r\n    }\r\n\r\n    let current_font = getResponsiveSetting(settings, 'current_font');\r\n\r\n    if(current_font){\r\n        styles += typographicControllerToStyles(current_font);\r\n    }\r\n\r\n    styles += `} `;\r\n\r\n    return styles;\r\n}\r\n\r\nexport default getBreadcrumbsStyles;\r\n","import {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  sizeStyled,\r\n  textShadowControllerToStyles,\r\n  opacityStyled,\r\n  gradientStyled,\r\n  backgroundImageControllerToStyles,\r\n  translateStyled\r\n} from \"../../helpers/styles\";\r\nimport { getResponsiveSetting } from \"../../helpers\";\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Heading в строку css для вставки в GlobalStyles\r\n * @param {{}} settings\r\n * @param {string} id\r\n * @return {string}\r\n */\r\n\r\nexport function getHeadingTypeAnimatingStyles(settings, id) {\r\n  let styles = \"\";\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-heading-sub:hover {`;\r\n\r\n  const justifyContentHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"sub_heading_settings_alignment\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (justifyContentHeaddingSubHover) {\r\n    styles += simplePropertyStyled(\r\n      justifyContentHeaddingSubHover,\r\n      \"justify-content\"\r\n    );\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  //hover\r\n  styles += `${parentClass} .altrp-icon-header:hover {`;\r\n\r\n  const marginBottomForHorizontalHover = getResponsiveSetting(\r\n    settings,\r\n    \"horizontal_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForHorizontalHover) {\r\n    styles += sizeStyled(marginBottomForHorizontalHover, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForVerticalHover = getResponsiveSetting(\r\n    settings,\r\n    \"vertical_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForVerticalHover) {\r\n    styles += sizeStyled(marginBottomForVerticalHover, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForRotateHover = getResponsiveSetting(\r\n    settings,\r\n    \"rotate_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForRotateHover) {\r\n    styles += sizeStyled(marginBottomForRotateHover, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading {`;\r\n\r\n  //fix display with <strong> and <b> tags\r\n  styles += \"display:block;\";\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-animating-text {`;\r\n\r\n  const typographicAnimating = getResponsiveSetting(\r\n    settings,\r\n    \"animated_text_headline_animating_style\"\r\n  );\r\n\r\n  if (typographicAnimating) {\r\n    styles += typographicControllerToStyles(typographicAnimating);\r\n  }\r\n\r\n  const colorAnimating = getResponsiveSetting(\r\n    settings,\r\n    \"animated_text_color_headline_animating_style\"\r\n  );\r\n\r\n  if (colorAnimating) {\r\n    styles += colorPropertyStyled(colorAnimating, \"color\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-animating-text:hover {`;\r\n\r\n  const typographicAnimatingHover = getResponsiveSetting(\r\n    settings,\r\n    \"animated_text_headline_animating_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicAnimatingHover) {\r\n    styles += typographicControllerToStyles(typographicAnimatingHover);\r\n  }\r\n\r\n  const colorAnimatingHover = getResponsiveSetting(\r\n    settings,\r\n    \"animated_text_color_headline_animating_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorAnimatingHover) {\r\n    styles += colorPropertyStyled(colorAnimatingHover, \"color\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-no-animating-text {`;\r\n\r\n  const typographicNoAnimating = getResponsiveSetting(\r\n    settings,\r\n    \"text_headline_animating_style\"\r\n  );\r\n\r\n  if (typographicNoAnimating) {\r\n    styles += typographicControllerToStyles(typographicNoAnimating);\r\n  }\r\n\r\n  const colorNoAnimating = getResponsiveSetting(\r\n    settings,\r\n    \"text_color_headline_animating_style\"\r\n  );\r\n\r\n  if (colorNoAnimating) {\r\n    styles += colorPropertyStyled(colorNoAnimating, \"color\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-heading-no-animating-text:hover {`;\r\n\r\n  const typographicNoAnimatingHover = getResponsiveSetting(\r\n    settings,\r\n    \"text_headline_animating_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicNoAnimatingHover) {\r\n    styles += typographicControllerToStyles(typographicNoAnimatingHover);\r\n  }\r\n\r\n  const colorNoAnimatingHover = getResponsiveSetting(\r\n    settings,\r\n    \"text_color_headline_animating_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorNoAnimatingHover) {\r\n    styles += colorPropertyStyled(colorNoAnimatingHover, \"color\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-animating-highlighted-svg svg path {`;\r\n\r\n  const strokeWidthAnimatingSvg = getResponsiveSetting(\r\n    settings,\r\n    \"width_shape_animating\"\r\n  );\r\n\r\n  if (strokeWidthAnimatingSvg) {\r\n    styles += sizeStyled(strokeWidthAnimatingSvg, \"stroke-width\");\r\n  }\r\n\r\n  const colorAnimatingSvg = getResponsiveSetting(\r\n    settings,\r\n    \"color_shape_animating\"\r\n  );\r\n\r\n  if (colorAnimatingSvg) {\r\n    styles += colorPropertyStyled(colorAnimatingSvg, \"stroke\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-animating-highlighted-svg:hover svg path {`;\r\n\r\n  const strokeWidthAnimatingSvgHover = getResponsiveSetting(\r\n    settings,\r\n    \"width_shape_animating\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (strokeWidthAnimatingSvgHover) {\r\n    styles += sizeStyled(strokeWidthAnimatingSvgHover, \"stroke-width\");\r\n  }\r\n\r\n  const colorAnimatingSvgHover = getResponsiveSetting(\r\n    settings,\r\n    \"color_shape_animating\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorAnimatingSvgHover) {\r\n    styles += colorPropertyStyled(colorAnimatingSvgHover, \"stroke\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}\r\n","import {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  sizeStyled,\r\n  textShadowControllerToStyles,\r\n  opacityStyled,\r\n  gradientStyled,\r\n  backgroundImageControllerToStyles,\r\n  translateStyled\r\n} from \"../../helpers/styles\";\r\nimport { getResponsiveSetting } from \"../../helpers\";\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Heading в строку css для вставки в GlobalStyles\r\n * @param {{}} settings\r\n * @param {string} id\r\n * @return {string}\r\n */\r\n\r\nexport function getHeadingTypeHeadingStyles(settings, id) {\r\n  let styles = \"\";\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper {`;\r\n\r\n  const justifyContent = getResponsiveSetting(\r\n    settings,\r\n    \"heading_settings_alignment\"\r\n  );\r\n  if (justifyContent) {\r\n\r\n    styles += simplePropertyStyled(justifyContent, \"justify-content\");\r\n    switch (justifyContent){\r\n      case 'stretch':{\r\n        styles += `& .altrp-heading{text-align:justify}`\r\n      }break\r\n      case 'center':{\r\n        styles += `& .altrp-heading{text-align:center}`\r\n      }break\r\n      case 'flex-start':{\r\n        styles += `& .altrp-heading{text-align:left}`\r\n      }break\r\n      case 'flex-end':{\r\n        styles += `& .altrp-heading{text-align:right}`\r\n      }break\r\n    }\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-sub {`;\r\n\r\n  const justifyContentHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"sub_heading_settings_alignment\"\r\n  );\r\n\r\n  if (justifyContentHeaddingSub) {\r\n    styles += simplePropertyStyled(\r\n      justifyContentHeaddingSub,\r\n      \"justify-content\"\r\n    );\r\n  }\r\n\r\n  const textShadowHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"text_shadow_sub_heading\"\r\n  );\r\n\r\n  if (textShadowHeaddingSub) {\r\n    styles += textShadowControllerToStyles(textShadowHeaddingSub);\r\n  }\r\n\r\n  const typographicHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"typographic_sub_heading\"\r\n  );\r\n\r\n  if (typographicHeaddingSub) {\r\n    styles += typographicControllerToStyles(typographicHeaddingSub);\r\n  }\r\n\r\n  const paddingHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"padding_sub_heading\"\r\n  );\r\n\r\n  if (paddingHeaddingSub) {\r\n    styles += dimensionsControllerToStyles(paddingHeaddingSub);\r\n  }\r\n\r\n  const colorHeaddingSub = getResponsiveSetting(settings, \"color_sub_heading\");\r\n\r\n  if (colorHeaddingSub) {\r\n    styles += colorPropertyStyled(colorHeaddingSub, \"color\");\r\n  }\r\n\r\n  const backgroundColorHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"bg_sub_heading\"\r\n  );\r\n\r\n  if (backgroundColorHeaddingSub) {\r\n    styles += colorPropertyStyled(\r\n      backgroundColorHeaddingSub,\r\n      \"background-color\"\r\n    );\r\n  }\r\n\r\n  const widthHeadingSub = getResponsiveSetting(settings, \"width_sub_heading\");\r\n\r\n  if (widthHeadingSub) {\r\n    styles += sizeStyled(widthHeadingSub, \"width\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-sub:hover {`;\r\n\r\n  const justifyContentHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"sub_heading_settings_alignment\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (justifyContentHeaddingSubHover) {\r\n    styles += simplePropertyStyled(\r\n      justifyContentHeaddingSubHover,\r\n      \"justify-content\"\r\n    );\r\n  }\r\n\r\n  const textShadowHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"text_shadow_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (textShadowHeaddingSubHover) {\r\n    styles += textShadowControllerToStyles(textShadowHeaddingSubHover);\r\n  }\r\n\r\n  const typographicHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"typographic_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicHeaddingSubHover) {\r\n    styles += typographicControllerToStyles(typographicHeaddingSubHover);\r\n  }\r\n\r\n  const paddingHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"padding_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (paddingHeaddingSubHover) {\r\n    styles += dimensionsControllerToStyles(paddingHeaddingSubHover);\r\n  }\r\n\r\n  const colorHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"color_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorHeaddingSubHover) {\r\n    styles += colorPropertyStyled(colorHeaddingSubHover, \"color\");\r\n  }\r\n\r\n  const backgroundColorHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"bg_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundColorHeaddingSubHover) {\r\n    styles += colorPropertyStyled(\r\n      backgroundColorHeaddingSubHover,\r\n      \"background-color\"\r\n    );\r\n  }\r\n\r\n  const widthHeadingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"width_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (widthHeadingSubHover) {\r\n    styles += sizeStyled(widthHeadingSubHover, \"width\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-bottom .altrp-heading-sub {`;\r\n\r\n  const marginTop = getResponsiveSetting(settings, \"spacing_sub_heading\");\r\n\r\n  if (marginTop) {\r\n    styles += sizeStyled(marginTop, \"margin-top\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-bottom .altrp-heading-sub:hover {`;\r\n\r\n  const marginTopHover = getResponsiveSetting(\r\n    settings,\r\n    \"spacing_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginTopHover) {\r\n    styles += sizeStyled(marginTopHover, \"margin-top\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-top .altrp-heading-sub {`;\r\n\r\n  const marginBottom = getResponsiveSetting(settings, \"spacing_sub_heading\");\r\n\r\n  if (marginBottom) {\r\n    styles += sizeStyled(marginBottom, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-top .altrp-heading-sub:hover {`;\r\n\r\n  const marginBottomHover = getResponsiveSetting(\r\n    settings,\r\n    \"spacing_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomHover) {\r\n    styles += sizeStyled(marginBottomHover, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-left .altrp-heading-sub {`;\r\n\r\n  const marginRight = getResponsiveSetting(settings, \"spacing_sub_heading\");\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, \"margin-right\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-left .altrp-heading-sub:hover {`;\r\n\r\n  const marginRightHover = getResponsiveSetting(\r\n    settings,\r\n    \"spacing_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginRightHover) {\r\n    styles += sizeStyled(marginRightHover, \"margin-right\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-right .altrp-heading-sub {`;\r\n\r\n  const marginLeft = getResponsiveSetting(settings, \"spacing_sub_heading\");\r\n\r\n  if (marginLeft) {\r\n    styles += sizeStyled(marginLeft, \"margin-left\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-right .altrp-heading-sub:hover {`;\r\n\r\n  const marginLeftHover = getResponsiveSetting(\r\n    settings,\r\n    \"spacing_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginLeftHover) {\r\n    styles += sizeStyled(marginLeftHover, \"margin-left\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-advanced-wrapper {`;\r\n\r\n  const textAlignAdvancedWrapper = getResponsiveSetting(\r\n    settings,\r\n    \"alignment_advanced_heading_content\"\r\n  );\r\n\r\n  if (textAlignAdvancedWrapper) {\r\n    styles += simplePropertyStyled(textAlignAdvancedWrapper, \"text-align\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-advanced {`;\r\n\r\n  const backgroundColorHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"background_color_advanced_heading_style\"\r\n  );\r\n\r\n  if (backgroundColorHeadingAdvanced) {\r\n    styles += colorPropertyStyled(\r\n      backgroundColorHeadingAdvanced,\r\n      \"background-color\"\r\n    );\r\n  }\r\n\r\n  const colorHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"color_advanced_heading_style\"\r\n  );\r\n\r\n  if (colorHeadingAdvanced) {\r\n    styles += colorPropertyStyled(colorHeadingAdvanced, \"color\");\r\n  }\r\n\r\n  const paddingHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"padding_advanced_heading_style\"\r\n  );\r\n\r\n  if (paddingHeadingAdvanced) {\r\n    styles += dimensionsControllerToStyles(paddingHeadingAdvanced);\r\n  }\r\n\r\n  const typographicHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"typography_advanced_heading_style\"\r\n  );\r\n\r\n  if (typographicHeadingAdvanced) {\r\n    styles += typographicControllerToStyles(typographicHeadingAdvanced);\r\n  }\r\n\r\n  const textShadowHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"text_shadow_advanced_heading_style\"\r\n  );\r\n\r\n  if (textShadowHeadingAdvanced) {\r\n    styles += textShadowControllerToStyles(textShadowHeadingAdvanced);\r\n  }\r\n\r\n  const borderTypeHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"border_type_advanced_heading_style\"\r\n  );\r\n\r\n  if (borderTypeHeadingAdvanced) {\r\n    styles += simplePropertyStyled(borderTypeHeadingAdvanced, \"border-style\");\r\n  }\r\n\r\n  const borderWidthHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"border_width_advanced_heading_style\"\r\n  );\r\n\r\n  if (borderWidthHeadingAdvanced) {\r\n    styles += borderWidthStyled(borderWidthHeadingAdvanced);\r\n  }\r\n\r\n  const borderColorHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"border_color_advanced_heading_style\"\r\n  );\r\n\r\n  if (borderColorHeadingAdvanced) {\r\n    styles += colorPropertyStyled(borderColorHeadingAdvanced, \"border-color\");\r\n  }\r\n\r\n  const borderRadiusHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius_advanced_heading_style\"\r\n  );\r\n\r\n  if (borderRadiusHeadingAdvanced) {\r\n    styles += dimensionsControllerToStyles(\r\n      borderRadiusHeadingAdvanced,\r\n      \"border-radius\"\r\n    );\r\n  }\r\n\r\n  const opacityHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"opacity_advanced_heading_style\"\r\n  );\r\n\r\n  if (opacityHeadingAdvanced) {\r\n    styles += opacityStyled(opacityHeadingAdvanced);\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-heading-advanced:hover {`;\r\n\r\n  const backgroundColorHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_color_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundColorHeadingAdvancedHover) {\r\n    styles += colorPropertyStyled(\r\n      backgroundColorHeadingAdvancedHover,\r\n      \"background-color\"\r\n    );\r\n  }\r\n\r\n  const colorHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"color_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorHeadingAdvancedHover) {\r\n    styles += colorPropertyStyled(colorHeadingAdvancedHover, \"color\");\r\n  }\r\n\r\n  const paddingHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"padding_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (paddingHeadingAdvancedHover) {\r\n    styles += dimensionsControllerToStyles(paddingHeadingAdvancedHover);\r\n  }\r\n\r\n  const typographicHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"typography_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicHeadingAdvancedHover) {\r\n    styles += typographicControllerToStyles(typographicHeadingAdvancedHover);\r\n  }\r\n\r\n  const textShadowHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"text_shadow_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (textShadowHeadingAdvancedHover) {\r\n    styles += textShadowControllerToStyles(textShadowHeadingAdvancedHover);\r\n  }\r\n\r\n  const borderTypeHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"border_type_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderTypeHeadingAdvancedHover) {\r\n    styles += simplePropertyStyled(\r\n      borderTypeHeadingAdvancedHover,\r\n      \"border-style\"\r\n    );\r\n  }\r\n\r\n  const borderWidthHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"border_width_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderWidthHeadingAdvancedHover) {\r\n    styles += borderWidthStyled(borderWidthHeadingAdvancedHover);\r\n  }\r\n\r\n  const borderColorHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"border_color_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderColorHeadingAdvancedHover) {\r\n    styles += colorPropertyStyled(\r\n      borderColorHeadingAdvancedHover,\r\n      \"border-color\"\r\n    );\r\n  }\r\n\r\n  const borderRadiusHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderRadiusHeadingAdvancedHover) {\r\n    styles += dimensionsControllerToStyles(\r\n      borderRadiusHeadingAdvancedHover,\r\n      \"border-radius\"\r\n    );\r\n  }\r\n\r\n  const opacityHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"opacity_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (opacityHeadingAdvancedHover) {\r\n    styles += opacityStyled(opacityHeadingAdvancedHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-icon-header {`;\r\n\r\n  const marginBottomForHorizontal = getResponsiveSetting(\r\n    settings,\r\n    \"horizontal_offset_advanced_heading_content\"\r\n  );\r\n\r\n  if (marginBottomForHorizontal) {\r\n    styles += sizeStyled(marginBottomForHorizontal, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForVertical = getResponsiveSetting(\r\n    settings,\r\n    \"vertical_offset_advanced_heading_content\"\r\n  );\r\n\r\n  if (marginBottomForVertical) {\r\n    styles += sizeStyled(marginBottomForVertical, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForRotate = getResponsiveSetting(\r\n    settings,\r\n    \"rotate_offset_advanced_heading_content\"\r\n  );\r\n\r\n  if (marginBottomForRotate) {\r\n    styles += sizeStyled(marginBottomForRotate, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-icon-header:hover {`;\r\n\r\n  const marginBottomForHorizontalHover = getResponsiveSetting(\r\n    settings,\r\n    \"horizontal_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForHorizontalHover) {\r\n    styles += sizeStyled(marginBottomForHorizontalHover, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForVerticalHover = getResponsiveSetting(\r\n    settings,\r\n    \"vertical_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForVerticalHover) {\r\n    styles += sizeStyled(marginBottomForVerticalHover, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForRotateHover = getResponsiveSetting(\r\n    settings,\r\n    \"rotate_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForRotateHover) {\r\n    styles += sizeStyled(marginBottomForRotateHover, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading, ${parentClass} .altrp-heading a {`;\r\n\r\n  const color = getResponsiveSetting(settings, \"heading_style_color\");\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, \"color\");\r\n  }\r\n\r\n  const typographic = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_typographic\"\r\n  );\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  const textShadow = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_text_shadow\"\r\n  );\r\n\r\n  if (textShadow) {\r\n    styles += textShadowControllerToStyles(textShadow);\r\n  }\r\n\r\n  const margin = getResponsiveSetting(settings, \"style_position_margin\");\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, \"margin\");\r\n  }\r\n\r\n  const padding = getResponsiveSetting(settings, \"style_position_padding\");\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  const zIndex = getResponsiveSetting(settings, \"position_z_index\");\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, \"z-index\");\r\n  }\r\n\r\n  const backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"style_background_color\"\r\n  );\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, \"background-color\");\r\n  }\r\n\r\n  const opacity = getResponsiveSetting(settings, \"style_background_opacity\");\r\n\r\n  if (opacity) {\r\n    styles += opacityStyled(opacity);\r\n  }\r\n\r\n  const gradient = getResponsiveSetting(settings, \"gradient\");\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  const transform = getResponsiveSetting(settings, \"transform_style\");\r\n\r\n  if (transform) {\r\n    styles += translateStyled(transform);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading:hover, ${parentClass} .altrp-heading a:hover {`;\r\n\r\n  const colorLinkHover = getResponsiveSetting(settings, \"heading_style_color\", \":hover\");\r\n\r\n  if (colorLinkHover) {\r\n    styles += colorPropertyStyled(colorLinkHover, \"color\");\r\n    styles += \"text-decoration: none; \";\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading {`;\r\n\r\n  const borderType = getResponsiveSetting(settings, \"style_border_type\");\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, \"border-style\");\r\n  }\r\n\r\n  const borderWidth = getResponsiveSetting(settings, \"style_border_width\");\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  const borderColor = getResponsiveSetting(settings, \"style_border_color\");\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, \"border-color\");\r\n  }\r\n\r\n  const borderRadius = getResponsiveSetting(settings, \"style_border_radius\");\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, \"border-radius\");\r\n  }\r\n  //fix display with <strong> and <b> tags\r\n  styles += \"display:block;\";\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-heading:hover {`;\r\n\r\n  const colorHover = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_color\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorHover) {\r\n    styles += colorPropertyStyled(colorHover, \"color\");\r\n  }\r\n\r\n  const typographicHover = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_typographic\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicHover) {\r\n    styles += typographicControllerToStyles(typographicHover);\r\n  }\r\n\r\n  const textShadowHover = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_text_shadow\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (textShadowHover) {\r\n    styles += textShadowControllerToStyles(textShadowHover);\r\n  }\r\n\r\n  const marginHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_position_margin\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginHover) {\r\n    styles += dimensionsControllerToStyles(marginHover, \"margin\");\r\n  }\r\n\r\n  const paddingHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_position_padding\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (paddingHover) {\r\n    styles += dimensionsControllerToStyles(paddingHover);\r\n  }\r\n\r\n  const zIndexHover = getResponsiveSetting(\r\n    settings,\r\n    \"position_z_index\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (zIndexHover) {\r\n    styles += simplePropertyStyled(zIndexHover, \"z-index\");\r\n  }\r\n\r\n  const backgroundColorHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_background_color\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundColorHover) {\r\n    styles += colorPropertyStyled(backgroundColorHover, \"background-color\");\r\n  }\r\n\r\n  const opacityHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_background_opacity\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (opacityHover) {\r\n    styles += opacityStyled(opacityHover);\r\n  }\r\n\r\n  const gradientHover = getResponsiveSetting(settings, \"gradient\", \":hover\");\r\n\r\n  if (gradientHover) {\r\n    styles += gradientStyled(gradientHover);\r\n  }\r\n\r\n  const borderTypeHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_border_type\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderTypeHover) {\r\n    styles += simplePropertyStyled(borderTypeHover, \"border-style\");\r\n  }\r\n\r\n  const borderWidthHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_border_width\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderWidthHover) {\r\n    styles += borderWidthStyled(borderWidthHover);\r\n  }\r\n\r\n  const borderColorHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_border_color\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderColorHover) {\r\n    styles += colorPropertyStyled(borderColorHover, \"border-color\");\r\n  }\r\n\r\n  const borderRadiusHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_border_radius\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderRadiusHover) {\r\n    styles += sizeStyled(borderRadiusHover, \"border-radius\");\r\n  }\r\n\r\n  const transformHover = getResponsiveSetting(\r\n    settings,\r\n    \"transform_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (transformHover) {\r\n    styles += translateStyled(transformHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading.altrp-background-image {`;\r\n\r\n  const backgroundImage = getResponsiveSetting(settings, \"background_image\");\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  const backgroundPosition = getResponsiveSetting(\r\n    settings,\r\n    \"background_position\"\r\n  );\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, \"background-position\");\r\n  }\r\n\r\n  const backgroundAttachment = getResponsiveSetting(\r\n    settings,\r\n    \"background_attachment\"\r\n  );\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(\r\n      backgroundAttachment,\r\n      \"background-attachment\"\r\n    );\r\n  }\r\n\r\n  const backgroundRepeat = getResponsiveSetting(settings, \"background_repeat\");\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, \"background-repeat\");\r\n  }\r\n\r\n  const backgroundSizeInUnits = getResponsiveSetting(\r\n    settings,\r\n    \"background_image_width\"\r\n  );\r\n\r\n  if (backgroundSizeInUnits) {\r\n    styles += sizeStyled(backgroundSizeInUnits, \"background-size\");\r\n  }\r\n\r\n  const backgroundSize = getResponsiveSetting(settings, \"background_size\");\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, \"background-size\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading.altrp-background-image:hover {`;\r\n\r\n  const backgroundImageHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_image\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundImageHover) {\r\n    styles += backgroundImageControllerToStyles(backgroundImageHover);\r\n  }\r\n\r\n  const backgroundPositionHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_position\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundPositionHover) {\r\n    styles += simplePropertyStyled(\r\n      backgroundPositionHover,\r\n      \"background-position\"\r\n    );\r\n  }\r\n\r\n  const backgroundAttachmentHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_attachment\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundAttachmentHover) {\r\n    styles += simplePropertyStyled(\r\n      backgroundAttachmentHover,\r\n      \"background-attachment\"\r\n    );\r\n  }\r\n\r\n  const backgroundRepeatHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_repeat\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundRepeatHover) {\r\n    styles += simplePropertyStyled(backgroundRepeatHover, \"background-repeat\");\r\n  }\r\n\r\n  const backgroundSizeInUnitsHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_image_width\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundSizeInUnitsHover) {\r\n    styles += sizeStyled(backgroundSizeInUnitsHover, \"background-size\");\r\n  }\r\n\r\n  const backgroundSizeHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_size\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundSizeHover) {\r\n    styles += simplePropertyStyled(backgroundSizeHover, \"background-size\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}\r\n","import { getResponsiveSetting } from '../../helpers';\r\nimport {\r\n    dimensionsControllerToStyles,\r\n    gradientStyled,\r\n    filtersControllerToStyles,\r\n    simplePropertyStyled,\r\n    colorPropertyStyled,\r\n    sizeStyled,\r\n    opacityStyled,\r\n    borderWidthStyled,\r\n    backgroundImageControllerToStyles,\r\n  } from \"../../helpers/styles\";\r\n\r\n\r\nconst getImageStyles = (settings,id)=>{\r\n    let styles = '';\r\n\r\n    let objectFit, height, width, margin, padding, zIndex, opacity, borderType, filters;\r\n    let borderWidth, borderColor, borderRadius, transitionDuration, animationDuration, backgroundColor, backgroundColorHover, gradient;\r\n    let justifyContent;\r\n    let backgroundImage, backgroundPosition, backgroundAttachment, backgroundRepeat,backgroundSizeInUnit, backgroundSize;\r\n\r\n    const parentClass = `.altrp-element${id}`;\r\n\r\n    styles += `${parentClass} .altrp-image {`;\r\n\r\n     //Получаем значения object-fit из контроллера, обрабатываем и добавляем в styles\r\n\r\n     if (settings !== undefined) {\r\n        objectFit = getResponsiveSetting(settings, 'image_fit_size');\r\n      }\r\n\r\n      if (objectFit) {\r\n        styles += simplePropertyStyled(objectFit, 'object-fit');\r\n      }\r\n\r\n      //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundColor = getResponsiveSetting(settings, 'background_color');\r\n      }\r\n\r\n      if (backgroundColor) {\r\n        styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n      }\r\n\r\n      //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        gradient = getResponsiveSetting(settings, 'gradient');\r\n      }\r\n\r\n      if (gradient) {\r\n        styles += gradientStyled(gradient);\r\n      }\r\n\r\n      //Получаем значения filters из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        filters = getResponsiveSetting(settings, 'image_style_text_shadow');\r\n      }\r\n\r\n      if (filters) {\r\n        styles += filtersControllerToStyles(filters);\r\n      }\r\n\r\n      //Получаем значения height из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        height = getResponsiveSetting(settings, 'height_size');\r\n      }\r\n\r\n      if (height) {\r\n        if(height.size !== \"0\") {\r\n          styles += sizeStyled(height, 'height');\r\n        } else {\r\n\r\n        }\r\n      }\r\n\r\n      //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n      //Свойство margin было убрано из Контроллера у виджета Image. Перенес сюда на всякий случай, так как были активные rules в Image.js\r\n\r\n      if (settings !== undefined) {\r\n        margin = getResponsiveSetting(settings, 'position_margin');\r\n      }\r\n\r\n      if (margin) {\r\n        styles += dimensionsControllerToStyles(margin, 'margin');\r\n      }\r\n\r\n      //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        padding = getResponsiveSetting(settings, 'position_padding');\r\n      }\r\n\r\n      if (padding) {\r\n        styles += dimensionsControllerToStyles(padding);\r\n      }\r\n\r\n      //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        zIndex = getResponsiveSetting(settings, 'position_z_index');\r\n      }\r\n\r\n      if (zIndex) {\r\n        styles += simplePropertyStyled(zIndex, 'z-index');\r\n      }\r\n\r\n      //Получаем значения opacity из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        opacity = getResponsiveSetting(settings, 'opacity_overlay');\r\n      }\r\n\r\n      if (opacity) {\r\n        styles += opacityStyled(opacity);\r\n      }\r\n\r\n      //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderType = getResponsiveSetting(settings, 'border_type');\r\n      }\r\n\r\n      if (borderType) {\r\n        styles += simplePropertyStyled(borderType, 'border-style');\r\n      }\r\n\r\n      //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderWidth = getResponsiveSetting(settings, 'border_width');\r\n      }\r\n\r\n      if (borderWidth) {\r\n        styles += borderWidthStyled(borderWidth);\r\n      }\r\n\r\n      //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderColor = getResponsiveSetting(settings, 'border_color');\r\n      }\r\n\r\n      if (borderColor) {\r\n        styles += colorPropertyStyled(borderColor, 'border-color');\r\n      }\r\n\r\n      //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderRadius = getResponsiveSetting(settings, 'border_radius');\r\n      }\r\n\r\n      if (borderRadius) {\r\n        styles += sizeStyled(borderRadius, 'border-radius');\r\n      }\r\n\r\n      //Получаем значения transition-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        transitionDuration = getResponsiveSetting(settings, 'creative_hover_controller');\r\n      }\r\n\r\n      if (transitionDuration) {\r\n        styles += sizeStyled(transitionDuration, 'transition-duration');\r\n      }\r\n\r\n      //Получаем значения animation-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        animationDuration = getResponsiveSetting(settings, 'creative_hover_controller');\r\n      }\r\n\r\n      if (animationDuration) {\r\n        styles += sizeStyled(animationDuration, 'animation-duration');\r\n      }\r\n\r\n      styles += `} `;\r\n\r\n      styles += `${parentClass} .altrp-image:hover {`;\r\n\r\n      //Получаем значения object-fit из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        objectFit = getResponsiveSetting(settings, 'image_fit_size', ':hover');\r\n      }\r\n\r\n      if (objectFit) {\r\n        styles += simplePropertyStyled(objectFit, 'object-fit');\r\n      }\r\n\r\n      //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundColor = getResponsiveSetting(settings, 'background_color', ':hover');\r\n      }\r\n\r\n      if (backgroundColor) {\r\n        styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n      }\r\n\r\n      //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        gradient = getResponsiveSetting(settings, 'gradient', ':hover');\r\n      }\r\n\r\n      if (gradient) {\r\n        styles += gradientStyled(gradient);\r\n      }\r\n\r\n      //Получаем значения filters из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        filters = getResponsiveSetting(settings, 'image_style_text_shadow', ':hover');\r\n      }\r\n\r\n      if (filters) {\r\n        styles += filtersControllerToStyles(filters);\r\n      }\r\n\r\n      //Получаем значения height из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        height = getResponsiveSetting(settings, 'height_size', ':hover');\r\n      }\r\n\r\n      if (height) {\r\n        if(height.size !== \"0\") {\r\n          styles += sizeStyled(height, 'height');\r\n        }\r\n      }\r\n\r\n      //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n      //Свойство margin было убрано из Контроллера у виджета Image. Перенес сюда на всякий случай, так как были активные rules в Image.js\r\n\r\n      if (settings !== undefined) {\r\n        margin = getResponsiveSetting(settings, 'position_margin', ':hover');\r\n      }\r\n\r\n      if (margin) {\r\n        styles += dimensionsControllerToStyles(margin, 'margin');\r\n      }\r\n\r\n      //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        padding = getResponsiveSetting(settings, 'position_padding', ':hover');\r\n      }\r\n\r\n      if (padding) {\r\n        styles += dimensionsControllerToStyles(padding);\r\n      }\r\n\r\n      //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        zIndex = getResponsiveSetting(settings, 'position_z_index', ':hover');\r\n      }\r\n\r\n      if (zIndex) {\r\n        styles += simplePropertyStyled(zIndex, 'z-index');\r\n      }\r\n\r\n      //Получаем значения opacity из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        opacity = getResponsiveSetting(settings, 'opacity_overlay', ':hover');\r\n      }\r\n\r\n      if (opacity) {\r\n        styles += opacityStyled(opacity);\r\n      }\r\n\r\n      //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderType = getResponsiveSetting(settings, 'border_type', ':hover');\r\n      }\r\n\r\n      if (borderType) {\r\n        styles += simplePropertyStyled(borderType, 'border-style');\r\n      }\r\n\r\n      //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderWidth = getResponsiveSetting(settings, 'border_width', ':hover');\r\n      }\r\n\r\n      if (borderWidth) {\r\n        styles += borderWidthStyled(borderWidth);\r\n      }\r\n\r\n      //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderColor = getResponsiveSetting(settings, 'border_color', ':hover');\r\n      }\r\n\r\n      if (borderColor) {\r\n        styles += colorPropertyStyled(borderColor, 'border-color');\r\n      }\r\n\r\n      //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderRadius = getResponsiveSetting(settings, 'border_radius', ':hover');\r\n      }\r\n\r\n      if (borderRadius) {\r\n        styles += sizeStyled(borderRadius, 'border-radius');\r\n      }\r\n\r\n      //Получаем значения transition-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        transitionDuration = getResponsiveSetting(settings, 'creative_hover_controller', ':hover');\r\n      }\r\n\r\n      if (transitionDuration) {\r\n        styles += sizeStyled(transitionDuration, 'transition-duration');\r\n      }\r\n\r\n      //Получаем значения animation-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        animationDuration = getResponsiveSetting(settings, 'creative_hover_controller', ':hover');\r\n      }\r\n\r\n      if (animationDuration) {\r\n        styles += sizeStyled(animationDuration, 'animation-duration');\r\n      }\r\n\r\n      styles+=\"} \";\r\n\r\n      styles+=`${parentClass} .altrp-image-container,${parentClass} .altrp-image-container a {`;\r\n\r\n      //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        justifyContent = getResponsiveSetting(settings, 'image_style_alignment');\r\n      }\r\n\r\n      if (justifyContent) {\r\n        styles += 'display:flex;'\r\n        styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n      }\r\n\r\n      styles+=\"} \";\r\n\r\n\r\n      styles+=`${parentClass} .altrp-background-image {`;\r\n\r\n      //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundImage = getResponsiveSetting(settings, 'background_image');\r\n      }\r\n\r\n      if (backgroundImage) {\r\n        styles += backgroundImageControllerToStyles(backgroundImage);\r\n      }\r\n\r\n      //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundPosition = getResponsiveSetting(settings, 'background_position');\r\n      }\r\n\r\n      if (backgroundPosition) {\r\n        styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n      }\r\n\r\n      //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundAttachment = getResponsiveSetting(settings, 'background_attachment');\r\n      }\r\n\r\n      if (backgroundAttachment) {\r\n        styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n      }\r\n\r\n      //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundRepeat = getResponsiveSetting(settings, 'background_repeat');\r\n      }\r\n\r\n      if (backgroundRepeat) {\r\n        styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n      }\r\n\r\n      //Получаем значения background-size в конкретных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width');\r\n      }\r\n\r\n      if (backgroundSizeInUnit) {\r\n        styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n      }\r\n\r\n      //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundSize = getResponsiveSetting(settings, 'background_size');\r\n      }\r\n\r\n      if (backgroundSize) {\r\n        styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n      }\r\n\r\n      styles+=\"} \";\r\n\r\n      styles+=`${parentClass} .altrp-background-image:hover {`;\r\n\r\n      //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundImage = getResponsiveSetting(settings, 'background_image', ':hover');\r\n      }\r\n\r\n      if (backgroundImage) {\r\n        styles += backgroundImageControllerToStyles(backgroundImage);\r\n      }\r\n\r\n      //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundPosition = getResponsiveSetting(settings, 'background_position', ':hover');\r\n      }\r\n\r\n      if (backgroundPosition) {\r\n        styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n      }\r\n\r\n      //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundAttachment = getResponsiveSetting(settings, 'background_attachment', ':hover');\r\n      }\r\n\r\n      if (backgroundAttachment) {\r\n        styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n      }\r\n\r\n      //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundRepeat = getResponsiveSetting(settings, 'background_repeat', ':hover');\r\n      }\r\n\r\n      if (backgroundRepeat) {\r\n        styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n      }\r\n\r\n      //Получаем значения background-size в конкретных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width', ':hover');\r\n      }\r\n\r\n      if (backgroundSizeInUnit) {\r\n        styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n      }\r\n\r\n      //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundSize = getResponsiveSetting(settings, 'background_size', ':hover');\r\n      }\r\n\r\n      if (backgroundSize) {\r\n        styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n      }\r\n\r\n      styles+=\"} \";\r\n\r\n      let aspect_ratio_size;\r\n\r\n      if (settings !== undefined) {\r\n        aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n        if(Number(aspect_ratio_size) !== 0) {\r\n            styles+= 'padding:0;';\r\n        }\r\n        else{\r\n            padding = getResponsiveSetting(settings, 'position_padding');\r\n            styles +=dimensionsControllerToStyles(padding);\r\n        }\r\n      }\r\n\r\n      return styles;\r\n}\r\n\r\nexport default getImageStyles;\r\n","import {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  sizeStyled,\r\n  heightCalcStyled,\r\n  transformRotateStyled,\r\n  iconSizeStyled,\r\n  shadowControllerToStyles,\r\n} from '../../helpers/styles';\r\nimport { getResponsiveSetting } from '../../helpers';\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Cards в строку css для вставки в GlobalStyles\r\n * @param {{}} settings \r\n * @param {string} id \r\n * @return {string}\r\n */\r\n\r\nexport function getPostsStyles(settings, id) {\r\n  let styles = '';\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous {`;\r\n\r\n  const flexDirectionPaginPrev = getResponsiveSetting(settings, 'prev_icon_position');\r\n\r\n  if (flexDirectionPaginPrev && flexDirectionPaginPrev !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginPrev, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginPrev = getResponsiveSetting(settings, 'posts_prev_margin');\r\n\r\n  if (marginPaginPrev) {\r\n    styles += dimensionsControllerToStyles(marginPaginPrev, 'margin');\r\n  }\r\n\r\n  const paddingPaginPrev = getResponsiveSetting(settings, 'posts_prev_padding');\r\n\r\n  if (paddingPaginPrev) {\r\n    styles += dimensionsControllerToStyles(paddingPaginPrev);\r\n  }\r\n\r\n  const colorPaginPrev = getResponsiveSetting(settings, 'posts_prev_color');\r\n\r\n  if (colorPaginPrev) {\r\n    styles += colorPropertyStyled(colorPaginPrev, 'color');\r\n  }\r\n\r\n  const typographicPaginPrev = getResponsiveSetting(settings, 'posts_prev_typographic');\r\n\r\n  if (typographicPaginPrev) {\r\n    styles += typographicControllerToStyles(typographicPaginPrev);\r\n  }\r\n\r\n  const borderTypePaginPrev = getResponsiveSetting(settings, 'posts_prev_border_type');\r\n\r\n  if (borderTypePaginPrev) {\r\n    styles += simplePropertyStyled(borderTypePaginPrev, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPrev = getResponsiveSetting(settings, 'posts_prev_border_width');\r\n\r\n  if (borderWidthPaginPrev) {\r\n    styles += borderWidthStyled(borderWidthPaginPrev);\r\n  }\r\n\r\n  const borderColorPaginPrev = getResponsiveSetting(settings, 'posts_prev_border_color');\r\n\r\n  if (borderColorPaginPrev) {\r\n    styles += colorPropertyStyled(borderColorPaginPrev, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginPrev = getResponsiveSetting(settings, 'border_prev_radius');\r\n\r\n  if (borderRadiusPaginPrev) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPrev, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginPrev = getResponsiveSetting(settings, 'style_prev_background_shadow');\r\n\r\n  if (boxShadowPaginPrev) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPrev);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover {`;\r\n\r\n  const flexDirectionPaginPrevHover = getResponsiveSetting(settings, 'prev_icon_position', ':hover');\r\n\r\n  if (flexDirectionPaginPrevHover && flexDirectionPaginPrevHover !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginPrevHover, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_margin', ':hover');\r\n\r\n  if (marginPaginPrevHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginPrevHover, 'margin');\r\n  }\r\n\r\n  const paddingPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_padding', ':hover');\r\n\r\n  if (paddingPaginPrevHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginPrevHover);\r\n  }\r\n\r\n  const colorPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_color', ':hover');\r\n\r\n  if (colorPaginPrevHover) {\r\n    styles += colorPropertyStyled(colorPaginPrevHover, 'color');\r\n  }\r\n\r\n  const typographicPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_typographic', ':hover');\r\n\r\n  if (typographicPaginPrevHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPrevHover);\r\n  }\r\n\r\n  const borderTypePaginPrevHover = getResponsiveSetting(settings, 'posts_prev_border_type', ':hover');\r\n\r\n  if (borderTypePaginPrevHover) {\r\n    styles += simplePropertyStyled(borderTypePaginPrevHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_border_width', ':hover');\r\n\r\n  if (borderWidthPaginPrevHover) {\r\n    styles += borderWidthStyled(borderWidthPaginPrevHover);\r\n  }\r\n\r\n  const borderColorPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_border_color', ':hover');\r\n\r\n  if (borderColorPaginPrevHover) {\r\n    styles += colorPropertyStyled(borderColorPaginPrevHover, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginPrevHover = getResponsiveSetting(settings, 'border_prev_radius', ':hover');\r\n\r\n  if (borderRadiusPaginPrevHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPrevHover, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginPrevHover = getResponsiveSetting(settings, 'style_prev_background_shadow', ':hover');\r\n\r\n  if (boxShadowPaginPrevHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPrevHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous svg, ${parentClass} .altrp-pagination__previous img {`;\r\n\r\n  const marginPaginPrevSvgImg = getResponsiveSetting(settings, 'prev_icon_padding');\r\n\r\n  if (marginPaginPrevSvgImg) {\r\n    styles += dimensionsControllerToStyles(marginPaginPrevSvgImg, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover svg, ${parentClass} .altrp-pagination__previous:hover img {`;\r\n\r\n  const marginPaginPrevSvgImgHover = getResponsiveSetting(settings, 'prev_icon_padding', ':hover');\r\n\r\n  if (marginPaginPrevSvgImgHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginPrevSvgImgHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous svg {`;\r\n\r\n  const sizePaginPrevSvg = getResponsiveSetting(settings, 'prev_icon_size');\r\n\r\n  if (sizePaginPrevSvg) {\r\n    styles += iconSizeStyled(sizePaginPrevSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover svg {`;\r\n\r\n  const sizePaginPrevSvgHover = getResponsiveSetting(settings, 'prev_icon_size', ':hover');\r\n\r\n  if (sizePaginPrevSvgHover) {\r\n    styles += iconSizeStyled(sizePaginPrevSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous img {`;\r\n\r\n  const heightPaginPrevImg = getResponsiveSetting(settings, 'prev_icon_size');\r\n\r\n  if (heightPaginPrevImg) {\r\n    styles += sizeStyled(heightPaginPrevImg, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover img {`;\r\n\r\n  const heightPaginPrevImgHover = getResponsiveSetting(settings, 'prev_icon_size', ':hover');\r\n\r\n  if (heightPaginPrevImgHover) {\r\n    styles += sizeStyled(heightPaginPrevImgHover, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous path {`;\r\n\r\n  const fillPaginPrevPath = getResponsiveSetting(settings, 'prev_icon_color');\r\n\r\n  if (fillPaginPrevPath) {\r\n    styles += colorPropertyStyled(fillPaginPrevPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover path {`;\r\n\r\n  const fillPaginPrevPathHover = getResponsiveSetting(settings, 'prev_icon_color', ':hover');\r\n\r\n  if (fillPaginPrevPathHover) {\r\n    styles += colorPropertyStyled(fillPaginPrevPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next {`;\r\n\r\n  const flexDirectionPaginNext = getResponsiveSetting(settings, 'next_icon_position');\r\n\r\n  if (flexDirectionPaginNext && flexDirectionPaginNext !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginNext, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginNext = getResponsiveSetting(settings, 'posts_next_margin');\r\n\r\n  if (marginPaginNext) {\r\n    styles += dimensionsControllerToStyles(marginPaginNext, 'margin');\r\n  }\r\n\r\n  const paddingPaginNext = getResponsiveSetting(settings, 'posts_next_padding');\r\n\r\n  if (paddingPaginNext) {\r\n    styles += dimensionsControllerToStyles(paddingPaginNext);\r\n  }\r\n\r\n  const colorPaginNext = getResponsiveSetting(settings, 'posts_next_color');\r\n\r\n  if (colorPaginNext) {\r\n    styles += colorPropertyStyled(colorPaginNext, 'color');\r\n  }\r\n\r\n  const typographicPaginNext = getResponsiveSetting(settings, 'posts_next_typographic');\r\n\r\n  if (typographicPaginNext) {\r\n    styles += typographicControllerToStyles(typographicPaginNext);\r\n  }\r\n\r\n  const borderTypePaginNext = getResponsiveSetting(settings, 'posts_next_border_type');\r\n\r\n  if (borderTypePaginNext) {\r\n    styles += simplePropertyStyled(borderTypePaginNext, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginNext = getResponsiveSetting(settings, 'posts_next_border_width');\r\n\r\n  if (borderWidthPaginNext) {\r\n    styles += borderWidthStyled(borderWidthPaginNext);\r\n  }\r\n\r\n  const borderColorPaginNext = getResponsiveSetting(settings, 'posts_next_border_color');\r\n\r\n  if (borderColorPaginNext) {\r\n    styles += colorPropertyStyled(borderColorPaginNext, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginNext = getResponsiveSetting(settings, 'border_next_radius');\r\n\r\n  if (borderRadiusPaginNext) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginNext, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginNext = getResponsiveSetting(settings, 'style_next_background_shadow');\r\n\r\n  if (boxShadowPaginNext) {\r\n    styles += shadowControllerToStyles(boxShadowPaginNext);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover {`;\r\n\r\n  const flexDirectionPaginNextHover = getResponsiveSetting(settings, 'next_icon_position', ':hover');\r\n\r\n  if (flexDirectionPaginNextHover && flexDirectionPaginNextHover !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginNextHover, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginNextHover = getResponsiveSetting(settings, 'posts_next_margin', ':hover');\r\n\r\n  if (marginPaginNextHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginNextHover, 'margin');\r\n  }\r\n\r\n  const paddingPaginNextHover = getResponsiveSetting(settings, 'posts_next_padding', ':hover');\r\n\r\n  if (paddingPaginNextHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginNextHover);\r\n  }\r\n\r\n  const colorPaginNextHover = getResponsiveSetting(settings, 'posts_next_color', ':hover');\r\n\r\n  if (colorPaginNextHover) {\r\n    styles += colorPropertyStyled(colorPaginNextHover, 'color');\r\n  }\r\n\r\n  const typographicPaginNextHover = getResponsiveSetting(settings, 'posts_next_typographic', ':hover');\r\n\r\n  if (typographicPaginNextHover) {\r\n    styles += typographicControllerToStyles(typographicPaginNextHover);\r\n  }\r\n\r\n  const borderTypePaginNextHover = getResponsiveSetting(settings, 'posts_next_border_type', ':hover');\r\n\r\n  if (borderTypePaginNextHover) {\r\n    styles += simplePropertyStyled(borderTypePaginNextHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginNextHover = getResponsiveSetting(settings, 'posts_next_border_width', ':hover');\r\n\r\n  if (borderWidthPaginNextHover) {\r\n    styles += borderWidthStyled(borderWidthPaginNextHover);\r\n  }\r\n\r\n  const borderColorPaginNextHover = getResponsiveSetting(settings, 'posts_next_border_color', ':hover');\r\n\r\n  if (borderColorPaginNextHover) {\r\n    styles += colorPropertyStyled(borderColorPaginNextHover, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginNextHover = getResponsiveSetting(settings, 'border_next_radius', ':hover');\r\n\r\n  if (borderRadiusPaginNextHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginNextHover, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginNextHover = getResponsiveSetting(settings, 'style_next_background_shadow', ':hover');\r\n\r\n  if (boxShadowPaginNextHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginNextHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next svg, ${parentClass} .altrp-pagination__next img {`;\r\n\r\n  const marginPaginNextSvgImg = getResponsiveSetting(settings, 'next_icon_margin');\r\n\r\n  if (marginPaginNextSvgImg) {\r\n    styles += dimensionsControllerToStyles(marginPaginNextSvgImg, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover svg, ${parentClass} .altrp-pagination__next:hover img {`;\r\n\r\n  const marginPaginNextSvgImgHover = getResponsiveSetting(settings, 'next_icon_margin', ':hover');\r\n\r\n  if (marginPaginNextSvgImgHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginNextSvgImgHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next svg {`;\r\n\r\n  const sizePaginNextSvg = getResponsiveSetting(settings, 'next_icon_size');\r\n\r\n  if (sizePaginNextSvg) {\r\n    styles += iconSizeStyled(sizePaginNextSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover svg {`;\r\n\r\n  const sizePaginNextSvgHover = getResponsiveSetting(settings, 'next_icon_size', ':hover');\r\n\r\n  if (sizePaginNextSvgHover) {\r\n    styles += iconSizeStyled(sizePaginNextSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next img {`;\r\n\r\n  const heightPaginNextImg = getResponsiveSetting(settings, 'next_icon_size');\r\n\r\n  if (heightPaginNextImg) {\r\n    styles += sizeStyled(heightPaginNextImg, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover img {`;\r\n\r\n  const heightPaginNextImgHover = getResponsiveSetting(settings, 'next_icon_size', ':hover');\r\n\r\n  if (heightPaginNextImgHover) {\r\n    styles += sizeStyled(heightPaginNextImgHover, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next path {`;\r\n\r\n  const fillPaginNextPath = getResponsiveSetting(settings, 'next_icon_color');\r\n\r\n  if (fillPaginNextPath) {\r\n    styles += colorPropertyStyled(fillPaginNextPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover path {`;\r\n\r\n  const fillPaginNextPathHover = getResponsiveSetting(settings, 'next_icon_color', ':hover');\r\n\r\n  if (fillPaginNextPathHover) {\r\n    styles += colorPropertyStyled(fillPaginNextPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count {`;\r\n\r\n  const marginPaginCount = getResponsiveSetting(settings, 'count_buttons_margin');\r\n\r\n  if (marginPaginCount) {\r\n    styles += dimensionsControllerToStyles(marginPaginCount, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginCount = getResponsiveSetting(settings, 'table_style_pagination_count_background_color');\r\n\r\n  if (backgroundColorPaginCount) {\r\n    styles += colorPropertyStyled(backgroundColorPaginCount, 'background-color');\r\n  }\r\n\r\n  const paddingPaginCount = getResponsiveSetting(settings, 'table_style_pagination_padding_count');\r\n\r\n  if (paddingPaginCount) {\r\n    styles += dimensionsControllerToStyles(paddingPaginCount);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count:hover {`;\r\n\r\n  const marginPaginCountHover = getResponsiveSetting(settings, 'count_buttons_margin', ':hover');\r\n\r\n  if (marginPaginCountHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginCountHover, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginCountHover = getResponsiveSetting(settings, 'table_style_pagination_count_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginCountHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginCountHover, 'background-color');\r\n  }\r\n\r\n  const paddingPaginCountHover = getResponsiveSetting(settings, 'table_style_pagination_padding_count', ':hover');\r\n\r\n  if (paddingPaginCountHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginCountHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count, ${parentClass} .altrp-pagination-pages__item {`;\r\n\r\n  const colorPaginCountPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_text_color');\r\n\r\n  if (colorPaginCountPagesItem) {\r\n    styles += colorPropertyStyled(colorPaginCountPagesItem, 'color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count:hover, ${parentClass} .altrp-pagination-pages__item:hover {`;\r\n\r\n  const colorPaginCountPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_text_color', ':hover');\r\n\r\n  if (colorPaginCountPagesItemHover) {\r\n    styles += colorPropertyStyled(colorPaginCountPagesItemHover, 'color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination-pages__item {`;\r\n\r\n  const marginPaginPagesItem = getResponsiveSetting(settings, 'count_button_item_margin');\r\n\r\n  if (marginPaginPagesItem) {\r\n    styles += dimensionsControllerToStyles(marginPaginPagesItem, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_background_color');\r\n\r\n  if (backgroundColorPaginPagesItem) {\r\n    styles += colorPropertyStyled(backgroundColorPaginPagesItem, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_type');\r\n\r\n  if (borderTypePaginPagesItem) {\r\n    styles += simplePropertyStyled(borderTypePaginPagesItem, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_width');\r\n\r\n  if (borderWidthPaginPagesItem) {\r\n    styles += borderWidthStyled(borderWidthPaginPagesItem);\r\n  }\r\n\r\n  const borderRadiusPaginPagesItem = getResponsiveSetting(settings, 'table_style_count_item_border_radius');\r\n\r\n  if (borderRadiusPaginPagesItem) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPagesItem, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_color');\r\n\r\n  if (borderColorPaginPagesItem) {\r\n    styles += colorPropertyStyled(borderColorPaginPagesItem, 'border-color', '!important');\r\n  }\r\n\r\n  const boxShadowPaginPagesItem = getResponsiveSetting(settings, 'pagination_count_item_shadow');\r\n\r\n  if (boxShadowPaginPagesItem) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPagesItem);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination-pages__item:hover {`;\r\n\r\n  const marginPaginPagesItemHover = getResponsiveSetting(settings, 'count_button_item_margin', ':hover');\r\n\r\n  if (marginPaginPagesItemHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginPagesItemHover, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginPagesItemHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginPagesItemHover, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_type', ':hover');\r\n\r\n  if (borderTypePaginPagesItemHover) {\r\n    styles += simplePropertyStyled(borderTypePaginPagesItemHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_width', ':hover');\r\n\r\n  if (borderWidthPaginPagesItemHover) {\r\n    styles += borderWidthStyled(borderWidthPaginPagesItemHover);\r\n  }\r\n\r\n  const borderRadiusPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_count_item_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginPagesItemHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPagesItemHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_color', ':hover');\r\n\r\n  if (borderColorPaginPagesItemHover) {\r\n    styles += colorPropertyStyled(borderColorPaginPagesItemHover, 'border-color', '!important');\r\n  }\r\n\r\n  const boxShadowPaginPagesItemHover = getResponsiveSetting(settings, 'pagination_count_item_shadow', ':hover');\r\n\r\n  if (boxShadowPaginPagesItemHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPagesItemHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .active.altrp-pagination-pages__item {`;\r\n\r\n  const colorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_text_color');\r\n\r\n  if (colorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(colorActivePaginPagesItem, 'color');\r\n  }\r\n\r\n  const backgroundColorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_background_color');\r\n\r\n  if (backgroundColorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(backgroundColorActivePaginPagesItem, 'background');\r\n  }\r\n\r\n  const borderColorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_border_color');\r\n\r\n  if (borderColorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(borderColorActivePaginPagesItem, 'border-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .active.altrp-pagination-pages__item:hover {`;\r\n\r\n  const colorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_text_color', ':hover');\r\n\r\n  if (colorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(colorActivePaginPagesItemHover, 'color');\r\n  }\r\n\r\n  const backgroundColorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_background_color', ':hover');\r\n\r\n  if (backgroundColorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(backgroundColorActivePaginPagesItemHover, 'background');\r\n  }\r\n\r\n  const borderColorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_border_color', ':hover');\r\n\r\n  if (borderColorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(borderColorActivePaginPagesItemHover, 'border-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination-pages__item {`;\r\n\r\n  const typographicPaginPaginPagesItem = getResponsiveSetting(settings, 'table_style_item_count_pagination_typographic');\r\n\r\n  if (typographicPaginPaginPagesItem) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginPagesItem);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination-pages__item:hover {`;\r\n\r\n  const typographicPaginPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_item_count_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginPagesItemHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginPagesItemHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__ellipsis {`;\r\n\r\n  const marginPaginEllipsis = getResponsiveSetting(settings, 'ellipsis_margin');\r\n\r\n  if (marginPaginEllipsis) {\r\n    styles += dimensionsControllerToStyles(marginPaginEllipsis, 'margin');\r\n  }\r\n\r\n  const colorPaginEllipsis = getResponsiveSetting(settings, 'ellipsis_color');\r\n\r\n  if (colorPaginEllipsis) {\r\n    styles += colorPropertyStyled(colorPaginEllipsis, 'color');\r\n  }\r\n\r\n  const typographicPaginEllipsis = getResponsiveSetting(settings, 'ellipsis_typographic');\r\n\r\n  if (typographicPaginEllipsis) {\r\n    styles += typographicControllerToStyles(typographicPaginEllipsis);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__ellipsis:hover {`;\r\n\r\n  const marginPaginEllipsisHover = getResponsiveSetting(settings, 'ellipsis_margin', ':hover');\r\n\r\n  if (marginPaginEllipsisHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginEllipsisHover, 'margin');\r\n  }\r\n\r\n  const colorPaginEllipsisHover = getResponsiveSetting(settings, 'ellipsis_color', ':hover');\r\n\r\n  if (colorPaginEllipsisHover) {\r\n    styles += colorPropertyStyled(colorPaginEllipsisHover, 'color');\r\n  }\r\n\r\n  const typographicPaginEllipsisHover = getResponsiveSetting(settings, 'ellipsis_typographic', ':hover');\r\n\r\n  if (typographicPaginEllipsisHover) {\r\n    styles += typographicControllerToStyles(typographicPaginEllipsisHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__goto-page {`;\r\n\r\n  const marginPaginGotoPage = getResponsiveSetting(settings, 'goto-page_margin');\r\n\r\n  if (marginPaginGotoPage) {\r\n    styles += dimensionsControllerToStyles(marginPaginGotoPage, 'margin');\r\n  }\r\n\r\n  const paddingPaginGotoPage = getResponsiveSetting(settings, 'page_input_padding');\r\n\r\n  if (paddingPaginGotoPage) {\r\n    styles += dimensionsControllerToStyles(paddingPaginGotoPage);\r\n  }\r\n\r\n  const colorPaginGotoPage = getResponsiveSetting(settings, 'page_input_text_color');\r\n\r\n  if (colorPaginGotoPage) {\r\n    styles += colorPropertyStyled(colorPaginGotoPage, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginGotoPage = getResponsiveSetting(settings, 'page_input_background_color');\r\n\r\n  if (backgroundColorPaginGotoPage) {\r\n    styles += colorPropertyStyled(backgroundColorPaginGotoPage, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginGotoPage = getResponsiveSetting(settings, 'page_input_border_type');\r\n\r\n  if (borderTypePaginGotoPage) {\r\n    styles += simplePropertyStyled(borderTypePaginGotoPage, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginGotoPage = getResponsiveSetting(settings, 'page_input_border_width');\r\n\r\n  if (borderWidthPaginGotoPage) {\r\n    styles += borderWidthStyled(borderWidthPaginGotoPage);\r\n  }\r\n\r\n  const borderColorPaginGotoPage = getResponsiveSetting(settings, 'page_input_border_color');\r\n\r\n  if (borderColorPaginGotoPage) {\r\n    styles += colorPropertyStyled(borderColorPaginGotoPage, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginGotoPage = getResponsiveSetting(settings, 'page_input_border_radius');\r\n\r\n  if (borderRadiusPaginGotoPage) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginGotoPage, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginGotoPage = getResponsiveSetting(settings, 'page_input_shadow');\r\n\r\n  if (boxShadowPaginGotoPage) {\r\n    styles += shadowControllerToStyles(boxShadowPaginGotoPage);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__goto-page:hover {`;\r\n\r\n  const marginPaginGotoPageHover = getResponsiveSetting(settings, 'goto-page_margin', ':hover');\r\n\r\n  if (marginPaginGotoPageHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginGotoPageHover, 'margin');\r\n  }\r\n\r\n  const paddingPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_padding', ':hover');\r\n\r\n  if (paddingPaginGotoPageHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginGotoPageHover);\r\n  }\r\n\r\n  const colorPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_text_color', ':hover');\r\n\r\n  if (colorPaginGotoPageHover) {\r\n    styles += colorPropertyStyled(colorPaginGotoPageHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginGotoPageHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginGotoPageHover, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginGotoPageHover = getResponsiveSetting(settings, 'page_input_border_type', ':hover');\r\n\r\n  if (borderTypePaginGotoPageHover) {\r\n    styles += simplePropertyStyled(borderTypePaginGotoPageHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_border_width', ':hover');\r\n\r\n  if (borderWidthPaginGotoPageHover) {\r\n    styles += borderWidthStyled(borderWidthPaginGotoPageHover);\r\n  }\r\n\r\n  const borderColorPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_border_color', ':hover');\r\n\r\n  if (borderColorPaginGotoPageHover) {\r\n    styles += colorPropertyStyled(borderColorPaginGotoPageHover, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginGotoPageHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginGotoPageHover, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_shadow', ':hover');\r\n\r\n  if (boxShadowPaginGotoPageHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginGotoPageHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-posts {`;\r\n\r\n  const paddingPosts = getResponsiveSetting(settings, 'position_padding');\r\n\r\n  if (paddingPosts) {\r\n    styles += dimensionsControllerToStyles(paddingPosts);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-posts:hover {`;\r\n\r\n  const paddingPostsHover = getResponsiveSetting(settings, 'position_padding', ':hover');\r\n\r\n  if (paddingPostsHover) {\r\n    styles += dimensionsControllerToStyles(paddingPostsHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} > .altrp-pagination-pages {`;\r\n\r\n  const paddingPaginPages = getResponsiveSetting(settings, 'posts_pagination_padding');\r\n\r\n  if (paddingPaginPages) {\r\n    styles += dimensionsControllerToStyles(paddingPaginPages);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} > .altrp-pagination-pages:hover {`;\r\n\r\n  const paddingPaginPagesHover = getResponsiveSetting(settings, 'posts_pagination_padding', ':hover');\r\n\r\n  if (paddingPaginPagesHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginPagesHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__goto-page {`;\r\n\r\n  const typographicPaginPaginGotoPages = getResponsiveSetting(settings, '.altrp-pagination .altrp-pagination__goto-page');\r\n\r\n  if (typographicPaginPaginGotoPages) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginGotoPages);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__goto-page:hover {`;\r\n\r\n  const typographicPaginPaginGotoPagesHover = getResponsiveSetting(settings, '.altrp-pagination .altrp-pagination__goto-page', ':hover');\r\n\r\n  if (typographicPaginPaginGotoPagesHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginGotoPagesHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next, ${parentClass} .altrp-pagination-pages__item, ${parentClass} .altrp-pagination__count, ${parentClass} .altrp-pagination__previous {`;\r\n\r\n  const typographicPaginPaginPagesItemCountPrev = getResponsiveSetting(settings, 'table_style_pagination_typographic');\r\n\r\n  if (typographicPaginPaginPagesItemCountPrev) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginPagesItemCountPrev);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover, ${parentClass} .altrp-pagination-pages__item:hover, ${parentClass} .altrp-pagination__count:hover, ${parentClass} .altrp-pagination__previous:hover {`;\r\n\r\n  const typographicPaginPaginPagesItemCountPrevHover = getResponsiveSetting(settings, 'table_style_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginPagesItemCountPrevHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginPagesItemCountPrevHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size {`;\r\n\r\n  const marginPaginSelectSize = getResponsiveSetting(settings, 'pagination_select_margin');\r\n\r\n  if (marginPaginSelectSize) {\r\n    styles += dimensionsControllerToStyles(marginPaginSelectSize, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size:hover {`;\r\n\r\n  const marginPaginSelectSizeHover = getResponsiveSetting(settings, 'pagination_select_margin', ':hover');\r\n\r\n  if (marginPaginSelectSizeHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginSelectSizeHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control {`;\r\n\r\n  const paddingPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_padding');\r\n\r\n  if (paddingPaginSelectSizeControl) {\r\n    styles += dimensionsControllerToStyles(paddingPaginSelectSizeControl);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control:hover {`;\r\n\r\n  const paddingPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_padding', ':hover');\r\n\r\n  if (paddingPaginSelectSizeControlHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginSelectSizeControlHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__select-size {`;\r\n\r\n  const typographicPaginPaginSelectSize = getResponsiveSetting(settings, 'table_style_pagination_select__pagination_typographic');\r\n\r\n  if (typographicPaginPaginSelectSize) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginSelectSize);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__select-size:hover {`;\r\n\r\n  const typographicPaginPaginSelectSizeHover = getResponsiveSetting(settings, 'table_style_pagination_select__pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginSelectSizeHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginSelectSizeHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control {`;\r\n\r\n  const borderTypePaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_border_type');\r\n\r\n  if (borderTypePaginSelect2Control) {\r\n    styles += simplePropertyStyled(borderTypePaginSelect2Control, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_border_width');\r\n\r\n  if (borderWidthPaginSelect2Control) {\r\n    styles += borderWidthStyled(borderWidthPaginSelect2Control);\r\n  }\r\n\r\n  const borderRadiusPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_border_radius');\r\n\r\n  if (borderRadiusPaginSelect2Control) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginSelect2Control, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_border_color');\r\n\r\n  if (borderColorPaginSelect2Control) {\r\n    styles += colorPropertyStyled(borderColorPaginSelect2Control, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_shadow');\r\n\r\n  if (boxShadowPaginSelect2Control) {\r\n    styles += shadowControllerToStyles(boxShadowPaginSelect2Control);\r\n  }\r\n\r\n  const colorPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_text_color');\r\n\r\n  if (colorPaginSelect2Control) {\r\n    styles += colorPropertyStyled(colorPaginSelect2Control, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_background_color');\r\n\r\n  if (backgroundColorPaginSelect2Control) {\r\n    styles += colorPropertyStyled(backgroundColorPaginSelect2Control, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control:hover {`;\r\n\r\n  const borderTypePaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_border_type', ':hover');\r\n\r\n  if (borderTypePaginSelect2ControlHover) {\r\n    styles += simplePropertyStyled(borderTypePaginSelect2ControlHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_border_width', ':hover');\r\n\r\n  if (borderWidthPaginSelect2ControlHover) {\r\n    styles += borderWidthStyled(borderWidthPaginSelect2ControlHover);\r\n  }\r\n\r\n  const borderRadiusPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginSelect2ControlHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginSelect2ControlHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_border_color', ':hover');\r\n\r\n  if (borderColorPaginSelect2ControlHover) {\r\n    styles += colorPropertyStyled(borderColorPaginSelect2ControlHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_shadow', ':hover');\r\n\r\n  if (boxShadowPaginSelect2ControlHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginSelect2ControlHover);\r\n  }\r\n\r\n  const colorPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_text_color', ':hover');\r\n\r\n  if (colorPaginSelect2ControlHover) {\r\n    styles += colorPropertyStyled(colorPaginSelect2ControlHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginSelect2ControlHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginSelect2ControlHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}","import {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  filtersControllerToStyles,\r\n  marginTopLeftStyled,\r\n  iconSizeStyled,\r\n  sizeStyled,\r\n  shadowControllerToStyles,\r\n} from '../../helpers/styles';\r\nimport { getResponsiveSetting } from '../../helpers';\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Table в строку css для вставки в GlobalStyles\r\n * @param {{}} settings\r\n * @param {string} id\r\n * @return {string}\r\n */\r\n\r\nexport function getTableStyles(settings, id) {\r\n  let styles = '';\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-table {`;\r\n\r\n  const borderType = getResponsiveSetting(settings, 'table_style_table_border_type');\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style', '!important');\r\n  }\r\n\r\n  const borderWidth = getResponsiveSetting(settings, 'table_style_table_border_width');\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth, '!important');\r\n  }\r\n\r\n  const borderColor = getResponsiveSetting(settings, 'table_style_table_border_color');\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color', '!important');\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-table:hover {`;\r\n\r\n  const borderTypeHover = getResponsiveSetting(settings, 'table_style_table_border_type', ':hover');\r\n\r\n  if (borderTypeHover) {\r\n    styles += simplePropertyStyled(borderTypeHover, 'border-style', '!important');\r\n  }\r\n\r\n  const borderWidthHover = getResponsiveSetting(settings, 'table_style_table_border_width', ':hover');\r\n\r\n  if (borderWidthHover) {\r\n    styles += borderWidthStyled(borderWidthHover, '!important');\r\n  }\r\n\r\n  const borderColorHover = getResponsiveSetting(settings, 'table_style_table_border_color', ':hover');\r\n\r\n  if (borderColorHover) {\r\n    styles += colorPropertyStyled(borderColorHover, 'border-color', '!important');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next {`;\r\n\r\n  const flexDirection = getResponsiveSetting(settings, 'next_icon_position');\r\n\r\n  if (flexDirection && flexDirection !== 'default') {\r\n    styles += simplePropertyStyled(flexDirection, 'flex-direction');\r\n  }\r\n\r\n  const margin = getResponsiveSetting(settings, 'next_page_button_margin');\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover {`;\r\n\r\n  const flexDirectionHover = getResponsiveSetting(settings, 'next_icon_position', ':hover');\r\n\r\n  if (flexDirectionHover && flexDirectionHover !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionHover, 'flex-direction');\r\n  }\r\n\r\n  const marginHover = getResponsiveSetting(settings, 'next_page_button_margin', ':hover');\r\n\r\n  if (marginHover) {\r\n    styles += dimensionsControllerToStyles(marginHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next svg {`;\r\n\r\n  const marginPaginationSvg = getResponsiveSetting(settings, 'next_icon_margin');\r\n\r\n  if (marginPaginationSvg) {\r\n    styles += dimensionsControllerToStyles(marginPaginationSvg, 'margin');\r\n  }\r\n\r\n  const iconSize = getResponsiveSetting(settings, 'next_icon_size');\r\n\r\n  if (iconSize) {\r\n    styles += iconSizeStyled(iconSize);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover svg {`;\r\n\r\n  const marginPaginationSvgHover = getResponsiveSetting(settings, 'next_icon_margin', ':hover');\r\n\r\n  if (marginPaginationSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationSvgHover, 'margin');\r\n  }\r\n\r\n  const iconSizeHover = getResponsiveSetting(settings, 'next_icon_size', ':hover');\r\n\r\n  if (iconSizeHover) {\r\n    styles += iconSizeStyled(iconSizeHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next img {`;\r\n\r\n  const iconSizeNextImg = getResponsiveSetting(settings, 'next_icon_size');\r\n\r\n  if (iconSizeNextImg) {\r\n    styles += sizeStyled(iconSizeNextImg, 'width');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover img {`;\r\n\r\n  const iconSizeNextImgHover = getResponsiveSetting(settings, 'next_icon_size', ':hover');\r\n\r\n  if (iconSizeNextImgHover) {\r\n    styles += sizeStyled(iconSizeNextImgHover, 'width');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next path {`;\r\n\r\n  const iconFillNextPath = getResponsiveSetting(settings, 'next_icon_color');\r\n\r\n  if (iconFillNextPath) {\r\n    styles += colorPropertyStyled(iconFillNextPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover path {`;\r\n\r\n  const iconFillNextPathHover = getResponsiveSetting(settings, 'next_icon_color', ':hover');\r\n\r\n  if (iconFillNextPathHover) {\r\n    styles += colorPropertyStyled(iconFillNextPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous {`;\r\n\r\n  const flexDirectionPaginationPrev = getResponsiveSetting(settings, 'prev_icon_position');\r\n\r\n  if (flexDirectionPaginationPrev && flexDirectionPaginationPrev !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginationPrev, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginationPrev = getResponsiveSetting(settings, 'prev_page_button_margin');\r\n\r\n  if (marginPaginationPrev) {\r\n    styles += dimensionsControllerToStyles(marginPaginationPrev, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover {`;\r\n\r\n  const flexDirectionPaginationPrevHover = getResponsiveSetting(settings, 'prev_icon_position', ':hover');\r\n\r\n  if (flexDirectionPaginationPrevHover && flexDirectionPaginationPrevHover !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginationPrevHover, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginationPrevHover = getResponsiveSetting(settings, 'prev_page_button_margin', ':hover');\r\n\r\n  if (marginPaginationPrevHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationPrevHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous svg {`;\r\n\r\n  const marginPrevSvg = getResponsiveSetting(settings, 'prev_icon_padding');\r\n\r\n  if (marginPrevSvg) {\r\n    styles += dimensionsControllerToStyles(marginPrevSvg, 'margin');\r\n  }\r\n\r\n  const iconSizePrevSvg = getResponsiveSetting(settings, 'prev_icon_size');\r\n\r\n  if (iconSizePrevSvg) {\r\n    styles += iconSizeStyled(iconSizePrevSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover svg {`;\r\n\r\n  const marginPrevSvgHover = getResponsiveSetting(settings, 'prev_icon_padding', ':hover');\r\n\r\n  if (marginPrevSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginPrevSvgHover, 'margin');\r\n  }\r\n\r\n  const iconSizePrevSvgHover = getResponsiveSetting(settings, 'prev_icon_size', ':hover');\r\n\r\n  if (iconSizePrevSvgHover) {\r\n    styles += iconSizeStyled(iconSizePrevSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous img {`;\r\n\r\n  const iconSizePrevImg = getResponsiveSetting(settings, 'prev_icon_size');\r\n\r\n  if (iconSizePrevImg) {\r\n    styles += sizeStyled(iconSizePrevImg, 'width');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover img {`;\r\n\r\n  const iconSizePrevImgHover = getResponsiveSetting(settings, 'prev_icon_size', ':hover');\r\n\r\n  if (iconSizePrevImgHover) {\r\n    styles += sizeStyled(iconSizePrevImgHover, 'width');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous path {`;\r\n\r\n  const iconFillPrevPath = getResponsiveSetting(settings, 'prev_icon_color');\r\n\r\n  if (iconFillPrevPath) {\r\n    styles += colorPropertyStyled(iconFillPrevPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover path {`;\r\n\r\n  const iconFillPrevPathHover = getResponsiveSetting(settings, 'prev_icon_color', ':hover');\r\n\r\n  if (iconFillPrevPathHover) {\r\n    styles += colorPropertyStyled(iconFillPrevPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .replace-text {`;\r\n\r\n  const colorReplaceText = getResponsiveSetting(settings, 'replace_text_color');\r\n\r\n  if (colorReplaceText) {\r\n    styles += colorPropertyStyled(colorReplaceText, 'color');\r\n  }\r\n\r\n  const typographicReplaceText = getResponsiveSetting(settings, 'replace_text_typographic');\r\n\r\n  if (typographicReplaceText) {\r\n    styles += typographicControllerToStyles(typographicReplaceText);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .replace-text:hover {`;\r\n\r\n  const colorReplaceTextHover = getResponsiveSetting(settings, 'replace_text_color', ':hover');\r\n\r\n  if (colorReplaceTextHover) {\r\n    styles += colorPropertyStyled(colorReplaceTextHover, 'color');\r\n  }\r\n\r\n  const typographicReplaceTextHover = getResponsiveSetting(settings, 'replace_text_typographic', ':hover');\r\n\r\n  if (typographicReplaceTextHover) {\r\n    styles += typographicControllerToStyles(typographicReplaceTextHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .replace-picture {`;\r\n\r\n  const widthPictureReplacePicture = getResponsiveSetting(settings, 'replace_image_width');\r\n\r\n  if (widthPictureReplacePicture) {\r\n    styles += sizeStyled(widthPictureReplacePicture, 'width');\r\n  }\r\n\r\n  const heightReplacePicture = getResponsiveSetting(settings, 'replace_image_height');\r\n\r\n  if (heightReplacePicture) {\r\n    styles += sizeStyled(heightReplacePicture, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .grouped-column {`;\r\n\r\n  const paddingGroupedColumn = getResponsiveSetting(settings, 'grouped_column_icon_padding');\r\n\r\n  if (paddingGroupedColumn) {\r\n    styles += dimensionsControllerToStyles(paddingGroupedColumn);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .grouped-column {`;\r\n\r\n  const paddingGroupedColumnHover = getResponsiveSetting(settings, 'grouped_column_icon_padding', ':hover');\r\n\r\n  if (paddingGroupedColumnHover) {\r\n    styles += dimensionsControllerToStyles(paddingGroupedColumnHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th path {`;\r\n\r\n  const iconFillTableThPath = getResponsiveSetting(settings, 'grouped_column_icon_color');\r\n\r\n  if (iconFillTableThPath) {\r\n    styles += colorPropertyStyled(iconFillTableThPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover path {`;\r\n\r\n  const iconFillTableThPathHover = getResponsiveSetting(settings, 'grouped_column_icon_color', ':hover');\r\n\r\n  if (iconFillTableThPathHover) {\r\n    styles += colorPropertyStyled(iconFillTableThPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .grouped-column, ${parentClass} .altrp-table-th svg, ${parentClass} .altrp-table-th img {`;\r\n\r\n  const iconSizeGroupedColumnSvgImg = getResponsiveSetting(settings, 'grouped_column_icon_size');\r\n\r\n  if (iconSizeGroupedColumnSvgImg) {\r\n    styles += iconSizeStyled(iconSizeGroupedColumnSvgImg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .grouped-column, ${parentClass} .altrp-table-th:hover svg, ${parentClass} .altrp-table-th:hover img {`;\r\n\r\n  const iconSizeGroupedColumnSvgImgHover = getResponsiveSetting(settings, 'grouped_column_icon_size', ':hover');\r\n\r\n  if (iconSizeGroupedColumnSvgImgHover) {\r\n    styles += iconSizeStyled(iconSizeGroupedColumnSvgImgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .not-grouped-column {`;\r\n\r\n  const paddingNotGroupedColumn = getResponsiveSetting(settings, 'not_grouped_column_icon_padding');\r\n\r\n  if (paddingNotGroupedColumn) {\r\n    styles += dimensionsControllerToStyles(paddingNotGroupedColumn);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .not-grouped-column {`;\r\n\r\n  const paddingNotGroupedColumnHover = getResponsiveSetting(settings, 'not_grouped_column_icon_padding', ':hover');\r\n\r\n  if (paddingNotGroupedColumnHover) {\r\n    styles += dimensionsControllerToStyles(paddingNotGroupedColumnHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .not-grouped-column path {`;\r\n\r\n  const iconFillNotGroupedColumnPath = getResponsiveSetting(settings, 'not_grouped_column_icon_color');\r\n\r\n  if (iconFillNotGroupedColumnPath) {\r\n    styles += colorPropertyStyled(iconFillNotGroupedColumnPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .not-grouped-column path {`;\r\n\r\n  const iconFillNotGroupedColumnPathHover = getResponsiveSetting(settings, 'not_grouped_column_icon_color', ':hover');\r\n\r\n  if (iconFillNotGroupedColumnPathHover) {\r\n    styles += colorPropertyStyled(iconFillNotGroupedColumnPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .not-grouped-column, ${parentClass} .altrp-table-th .not-grouped-column svg, ${parentClass} .altrp-table-th .not-grouped-column img {`;\r\n\r\n  const iconSizeNotGroupedColumnSvgImg = getResponsiveSetting(settings, 'not_grouped_column_icon_size');\r\n\r\n  if (iconSizeNotGroupedColumnSvgImg) {\r\n    styles += iconSizeStyled(iconSizeNotGroupedColumnSvgImg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .not-grouped-column, ${parentClass} .altrp-table-th:hover .not-grouped-column svg, ${parentClass} .altrp-table-th:hover .not-grouped-column img {`;\r\n\r\n  const iconSizeNotGroupedColumnSvgImgHover = getResponsiveSetting(settings, 'not_grouped_column_icon_size', ':hover');\r\n\r\n  if (iconSizeNotGroupedColumnSvgImgHover) {\r\n    styles += iconSizeStyled(iconSizeNotGroupedColumnSvgImgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row {`;\r\n\r\n  const paddingExpandedRow = getResponsiveSetting(settings, 'expanded_row_icon_padding');\r\n\r\n  if (paddingExpandedRow) {\r\n    styles += dimensionsControllerToStyles(paddingExpandedRow);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row:hover {`;\r\n\r\n  const paddingExpandedRowHover = getResponsiveSetting(settings, 'expanded_row_icon_padding', ':hover');\r\n\r\n  if (paddingExpandedRowHover) {\r\n    styles += dimensionsControllerToStyles(paddingExpandedRowHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row path {`;\r\n\r\n  const iconFillExpandedRowPath = getResponsiveSetting(settings, 'expanded_row_icon_color');\r\n\r\n  if (iconFillExpandedRowPath) {\r\n    styles += colorPropertyStyled(iconFillExpandedRowPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row:hover path {`;\r\n\r\n  const iconFillExpandedRowPathHover = getResponsiveSetting(settings, 'expanded_row_icon_color', ':hover');\r\n\r\n  if (iconFillExpandedRowPathHover) {\r\n    styles += colorPropertyStyled(iconFillExpandedRowPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row, ${parentClass} .expanded-row svg, ${parentClass}  .expanded-row img {`;\r\n\r\n  const iconSizeExpandedRowSvgImg = getResponsiveSetting(settings, 'expanded_row_icon_size');\r\n\r\n  if (iconSizeExpandedRowSvgImg) {\r\n    styles += iconSizeStyled(iconSizeExpandedRowSvgImg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row:hover, ${parentClass} .expanded-row svg:hover, ${parentClass}  .expanded-row img:hover {`;\r\n\r\n  const iconSizeExpandedRowSvgImgHover = getResponsiveSetting(settings, 'expanded_row_icon_size', ':hover');\r\n\r\n  if (iconSizeExpandedRowSvgImgHover) {\r\n    styles += iconSizeStyled(iconSizeExpandedRowSvgImgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row {`;\r\n\r\n  const paddingNotExpandedRow = getResponsiveSetting(settings, 'not_expanded_row_icon_padding');\r\n\r\n  if (paddingNotExpandedRow) {\r\n    styles += dimensionsControllerToStyles(paddingNotExpandedRow);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row:hover {`;\r\n\r\n  const paddingNotExpandedRowHover = getResponsiveSetting(settings, 'not_expanded_row_icon_padding', ':hover');\r\n\r\n  if (paddingNotExpandedRowHover) {\r\n    styles += dimensionsControllerToStyles(paddingNotExpandedRowHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row path {`;\r\n\r\n  const iconFillNotExpandedRowPath = getResponsiveSetting(settings, 'not_expanded_row_icon_color');\r\n\r\n  if (iconFillNotExpandedRowPath) {\r\n    styles += colorPropertyStyled(iconFillNotExpandedRowPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row:hover path {`;\r\n\r\n  const iconFillNotExpandedRowPathHover = getResponsiveSetting(settings, 'not_expanded_row_icon_color', ':hover');\r\n\r\n  if (iconFillNotExpandedRowPathHover) {\r\n    styles += colorPropertyStyled(iconFillNotExpandedRowPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row, ${parentClass} .not-expanded-row svg, ${parentClass} .not-expanded-row img {`;\r\n\r\n  const iconSizeNotExpandedRowSvgImg = getResponsiveSetting(settings, 'not_expanded_row_icon_size');\r\n\r\n  if (iconSizeNotExpandedRowSvgImg) {\r\n    styles += iconSizeStyled(iconSizeNotExpandedRowSvgImg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row:hover, ${parentClass} .not-expanded-row svg:hover, ${parentClass} .not-expanded-row img:hover {`;\r\n\r\n  const iconSizeNotExpandedRowSvgImgHover = getResponsiveSetting(settings, 'not_expanded_row_icon_size', ':hover');\r\n\r\n  if (iconSizeNotExpandedRowSvgImgHover) {\r\n    styles += iconSizeStyled(iconSizeNotExpandedRowSvgImgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody--striped tr:nth-child(2n), ${parentClass} .altrp-table-tbody--striped .altrp-table-tr:nth-child(2n) {`;\r\n\r\n  const colorThNthChild = getResponsiveSetting(settings, 'table_style_table_stripe_color');\r\n\r\n  if (colorThNthChild) {\r\n    styles += colorPropertyStyled(colorThNthChild, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody--striped tr:nth-child(2n):hover, ${parentClass} .altrp-table-tbody--striped .altrp-table-tr:nth-child(2n):hover {`;\r\n\r\n  const colorThNthChildHover = getResponsiveSetting(settings, 'table_style_table_stripe_color');\r\n\r\n  if (colorThNthChildHover) {\r\n    styles += colorPropertyStyled(colorThNthChildHover, 'background-color', ':hover');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-field, ${parentClass} .altrp-table__filter-select>.altrp-field-select2__control, ${parentClass} .altrp-label_slider>.altrp-btn {`;\r\n\r\n  const colorFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_text_color');\r\n\r\n  if (colorFieldSelect2ControlBtn) {\r\n    styles += colorPropertyStyled(colorFieldSelect2ControlBtn, 'color', '!important');\r\n  }\r\n\r\n  const backgroundColorFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_background_color');\r\n\r\n  if (backgroundColorFieldSelect2ControlBtn) {\r\n    styles += colorPropertyStyled(backgroundColorFieldSelect2ControlBtn, 'background-color', '!important');\r\n  }\r\n\r\n  const inputPaddingFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_padding');\r\n\r\n  if (inputPaddingFieldSelect2ControlBtn) {\r\n    styles += dimensionsControllerToStyles(inputPaddingFieldSelect2ControlBtn);\r\n  }\r\n\r\n  const typographicFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_typographic');\r\n\r\n  if (typographicFieldSelect2ControlBtn) {\r\n    styles += typographicControllerToStyles(typographicFieldSelect2ControlBtn);\r\n  }\r\n\r\n  const borderTypeFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_border_type');\r\n\r\n  if (borderTypeFieldSelect2ControlBtn) {\r\n    styles += simplePropertyStyled(borderTypeFieldSelect2ControlBtn, 'border-style', '!important');\r\n  }\r\n\r\n  const borderWidthFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_border_width');\r\n\r\n  if (borderWidthFieldSelect2ControlBtn) {\r\n    styles += borderWidthStyled(borderWidthFieldSelect2ControlBtn, '!important');\r\n  }\r\n\r\n  const borderColorFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_border_color');\r\n\r\n  if (borderColorFieldSelect2ControlBtn) {\r\n    styles += colorPropertyStyled(borderColorFieldSelect2ControlBtn, 'border-color', '!important');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-field:hover, ${parentClass} .altrp-table__filter-select:hover>.altrp-field-select2__control, ${parentClass} .altrp-label_slider>.altrp-btn {`;\r\n\r\n  const colorFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_text_color', ':hover');\r\n\r\n  if (colorFieldSelect2ControlBtnHover) {\r\n    styles += colorPropertyStyled(colorFieldSelect2ControlBtnHover, 'color', '!important');\r\n  }\r\n\r\n  const backgroundColorFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_background_color', ':hover');\r\n\r\n  if (backgroundColorFieldSelect2ControlBtnHover) {\r\n    styles += colorPropertyStyled(backgroundColorFieldSelect2ControlBtnHover, 'background-color', '!important');\r\n  }\r\n\r\n  const inputPaddingFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_padding', ':hover');\r\n\r\n  if (inputPaddingFieldSelect2ControlBtnHover) {\r\n    styles += dimensionsControllerToStyles(inputPaddingFieldSelect2ControlBtnHover);\r\n  }\r\n\r\n  const typographicFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_typographic', ':hover');\r\n\r\n  if (typographicFieldSelect2ControlBtnHover) {\r\n    styles += typographicControllerToStyles(typographicFieldSelect2ControlBtnHover);\r\n  }\r\n\r\n  const borderTypeFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_border_type', ':hover');\r\n\r\n  if (borderTypeFieldSelect2ControlBtnHover) {\r\n    styles += simplePropertyStyled(borderTypeFieldSelect2ControlBtnHover, 'border-style', '!important');\r\n  }\r\n\r\n  const borderWidthFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_border_width', ':hover');\r\n\r\n  if (borderWidthFieldSelect2ControlBtnHover) {\r\n    styles += borderWidthStyled(borderWidthFieldSelect2ControlBtnHover, '!important');\r\n  }\r\n\r\n  const borderColorFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_border_color', ':hover');\r\n\r\n  if (borderColorFieldSelect2ControlBtnHover) {\r\n    styles += colorPropertyStyled(borderColorFieldSelect2ControlBtnHover, 'border-color', '!important');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-label {`;\r\n\r\n  const labelPaddingLabel = getResponsiveSetting(settings, 'label_padding');\r\n\r\n  if (labelPaddingLabel) {\r\n    styles += dimensionsControllerToStyles(labelPaddingLabel);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-label:hover {`;\r\n\r\n  const labelPaddingLabelHover = getResponsiveSetting(settings, 'label_padding', ':hover');\r\n\r\n  if (labelPaddingLabelHover) {\r\n    styles += dimensionsControllerToStyles(labelPaddingLabelHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th {`;\r\n\r\n  const textAlignTableTh = getResponsiveSetting(settings, 'table_table_header_alignment');\r\n\r\n  if (textAlignTableTh) {\r\n    styles += simplePropertyStyled(textAlignTableTh, 'text-align');\r\n  }\r\n\r\n  const typographicTableTh = getResponsiveSetting(settings, 'table_style_header_font');\r\n\r\n  if (typographicTableTh) {\r\n    styles += typographicControllerToStyles(typographicTableTh);\r\n  }\r\n\r\n  const colorTableTh = getResponsiveSetting(settings, 'table_style_header_text_color');\r\n\r\n  if (colorTableTh) {\r\n    styles += colorPropertyStyled(colorTableTh, 'color');\r\n  }\r\n\r\n  const paddingTableTh = getResponsiveSetting(settings, 'table_style_header_padding');\r\n\r\n  if (paddingTableTh) {\r\n    styles += dimensionsControllerToStyles(paddingTableTh);\r\n  }\r\n\r\n  const borderTypeTableTh = getResponsiveSetting(settings, 'table_style_header_border_type');\r\n\r\n  if (borderTypeTableTh) {\r\n    styles += simplePropertyStyled(borderTypeTableTh, 'border-style');\r\n  }\r\n\r\n  const borderColorTableTh = getResponsiveSetting(settings, 'table_style_header_border_color');\r\n\r\n  if (borderColorTableTh) {\r\n    styles += colorPropertyStyled(borderColorTableTh, 'border-color');\r\n  }\r\n\r\n  const borderWidthTableTh = getResponsiveSetting(settings, 'table_style_header_border_width');\r\n\r\n  if (borderWidthTableTh) {\r\n    styles += borderWidthStyled(borderWidthTableTh);\r\n  }\r\n\r\n  const backgroundColorTableTh = getResponsiveSetting(settings, 'table_style_header_background');\r\n\r\n  if (backgroundColorTableTh) {\r\n    styles += `background-color: ${backgroundColorTableTh.color}: `;\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover {`;\r\n\r\n  const textAlignTableThHover = getResponsiveSetting(settings, 'table_table_header_alignment', ':hover');\r\n\r\n  if (textAlignTableThHover) {\r\n    styles += simplePropertyStyled(textAlignTableThHover, 'text-align');\r\n  }\r\n\r\n  const typographicTableThHover = getResponsiveSetting(settings, 'table_style_header_font', ':hover');\r\n\r\n  if (typographicTableThHover) {\r\n    styles += typographicControllerToStyles(typographicTableThHover);\r\n  }\r\n\r\n  const colorTableThHover = getResponsiveSetting(settings, 'table_style_header_text_color', ':hover');\r\n\r\n  if (colorTableThHover) {\r\n    styles += colorPropertyStyled(colorTableThHover, 'color');\r\n  }\r\n\r\n  const paddingTableThHover = getResponsiveSetting(settings, 'table_style_header_padding', ':hover');\r\n\r\n  if (paddingTableThHover) {\r\n    styles += dimensionsControllerToStyles(paddingTableThHover);\r\n  }\r\n\r\n  const borderTypeTableThHover = getResponsiveSetting(settings, 'table_style_header_border_type', ':hover');\r\n\r\n  if (borderTypeTableThHover) {\r\n    styles += simplePropertyStyled(borderTypeTableThHover, 'border-style');\r\n  }\r\n\r\n  const borderColorTableThHover = getResponsiveSetting(settings, 'table_style_header_border_color', ':hover');\r\n\r\n  if (borderColorTableThHover) {\r\n    styles += colorPropertyStyled(borderColorTableThHover, 'border-color');\r\n  }\r\n\r\n  const borderWidthTableThHover = getResponsiveSetting(settings, 'table_style_header_border_width', ':hover');\r\n\r\n  if (borderWidthTableThHover) {\r\n    styles += borderWidthStyled(borderWidthTableThHover);\r\n  }\r\n\r\n  const backgroundColorTableThHover = getResponsiveSetting(settings, 'table_style_header_background', ':hover');\r\n\r\n  if (backgroundColorTableThHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableThHover, 'background');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-head {`;\r\n\r\n  const backgroundColorTableHead = getResponsiveSetting(settings, 'table_style_header_background');\r\n\r\n  if (backgroundColorTableHead) {\r\n    styles += `background-color: ${backgroundColorTableHead.color}; `;\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-head:hover {`;\r\n\r\n  const backgroundColorTableHeadHover = getResponsiveSetting(settings, 'table_style_header_background', ':hover');\r\n\r\n  if (backgroundColorTableHeadHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableHeadHover, 'background');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-th:not(:first-child) {`;\r\n\r\n  const borderWidthTableThNotFirstChild = getResponsiveSetting(settings, 'table_style_header_border_width');\r\n\r\n  if (borderWidthTableThNotFirstChild) {\r\n    styles += marginTopLeftStyled(borderWidthTableThNotFirstChild, 'top'); //здесь вернется строка вида: \"margin-top: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-th:not(:first-child):hover {`;\r\n\r\n  const borderWidthTableThNotFirstChildHover = getResponsiveSetting(settings, 'table_style_header_border_width', ':hover');\r\n\r\n  if (borderWidthTableThNotFirstChildHover) {\r\n    styles += marginTopLeftStyled(borderWidthTableThNotFirstChildHover, 'top'); //здесь вернется строка вида: \"margin-top: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-tr:not(:first-child) .altrp-table-th {`;\r\n\r\n  const borderWidthTableTrNotFirstChild = getResponsiveSetting(settings, 'table_style_header_border_width');\r\n\r\n  if (borderWidthTableTrNotFirstChild) {\r\n    styles += marginTopLeftStyled(borderWidthTableTrNotFirstChild, 'left'); //здесь вернется строка вида: \"margin-left: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-tr:not(:first-child) .altrp-table-th:hover {`;\r\n\r\n  const borderWidthTableTrNotFirstChildHover = getResponsiveSetting(settings, 'table_style_header_border_width', ':hover');\r\n\r\n  if (borderWidthTableTrNotFirstChildHover) {\r\n    styles += marginTopLeftStyled(borderWidthTableTrNotFirstChildHover, 'left'); //здесь вернется строка вида: \"margin-left: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} div:not(.altrp-element) .altrp-table-th {`;\r\n\r\n  const verticalAlignDivNotAltrpElement = getResponsiveSetting(settings, 'header_cell_vertical_alignment');\r\n\r\n  if (verticalAlignDivNotAltrpElement) {\r\n    styles += simplePropertyStyled(verticalAlignDivNotAltrpElement, 'vertical-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} div:not(.altrp-element) .altrp-table-th:hover {`;\r\n\r\n  const verticalAlignDivNotAltrpElementHover = getResponsiveSetting(settings, 'header_cell_vertical_alignment', ':hover');\r\n\r\n  if (verticalAlignDivNotAltrpElementHover) {\r\n    styles += simplePropertyStyled(verticalAlignDivNotAltrpElementHover, 'vertical-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td {`;\r\n\r\n  const textAlignTableTd = getResponsiveSetting(settings, 'table_table_body_alignment');\r\n\r\n  if (textAlignTableTd) {\r\n    styles += simplePropertyStyled(textAlignTableTd, 'text-align');\r\n  }\r\n\r\n  const paddingTableTd = getResponsiveSetting(settings, 'table_style_body_cell_padding');\r\n\r\n  if (paddingTableTd) {\r\n    styles += dimensionsControllerToStyles(paddingTableTd);\r\n  }\r\n\r\n  const borderTypeTableTd = getResponsiveSetting(settings, 'table_style_body_border_type');\r\n\r\n  if (borderTypeTableTd) {\r\n    styles += simplePropertyStyled(borderTypeTableTd, 'border-style');\r\n  }\r\n\r\n  const borderColorTableTd = getResponsiveSetting(settings, 'table_style_body_border_color_');\r\n\r\n  if (borderColorTableTd) {\r\n    styles += colorPropertyStyled(borderColorTableTd, 'border-color');\r\n  }\r\n\r\n  const colorTableTd = getResponsiveSetting(settings, 'table_style_body_border_text_color');\r\n\r\n  if (colorTableTd) {\r\n    styles += colorPropertyStyled(colorTableTd, 'color');\r\n  }\r\n\r\n  const typographicTableTd = getResponsiveSetting(settings, 'table_style_body_font');\r\n\r\n  if (typographicTableTd) {\r\n    styles += typographicControllerToStyles(typographicTableTd);\r\n  }\r\n\r\n  const borderWidthTableTd = getResponsiveSetting(settings, 'table_style_body_border_width');\r\n\r\n  if (borderWidthTableTd) {\r\n    styles += borderWidthStyled(borderWidthTableTd);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td:hover {`;\r\n\r\n  const textAlignTableTdHover = getResponsiveSetting(settings, 'table_table_body_alignment', ':hover');\r\n\r\n  if (textAlignTableTdHover) {\r\n    styles += simplePropertyStyled(textAlignTableTdHover, 'text-align');\r\n  }\r\n\r\n  const paddingTableTdHover = getResponsiveSetting(settings, 'table_style_body_cell_padding', ':hover');\r\n\r\n  if (paddingTableTdHover) {\r\n    styles += dimensionsControllerToStyles(paddingTableTdHover);\r\n  }\r\n\r\n  const borderTypeTableTdHover = getResponsiveSetting(settings, 'table_style_body_border_type', ':hover');\r\n\r\n  if (borderTypeTableTdHover) {\r\n    styles += simplePropertyStyled(borderTypeTableTdHover, 'border-style');\r\n  }\r\n\r\n  const borderColorTableTdHover = getResponsiveSetting(settings, 'table_style_body_border_color_', ':hover');\r\n\r\n  if (borderColorTableTdHover) {\r\n    styles += colorPropertyStyled(borderColorTableTdHover, 'border-color');\r\n  }\r\n\r\n  const colorTableTdHover = getResponsiveSetting(settings, 'table_style_body_border_text_color', ':hover');\r\n\r\n  if (colorTableTdHover) {\r\n    styles += colorPropertyStyled(colorTableTdHover, 'color');\r\n  }\r\n\r\n  const typographicTableTdHover = getResponsiveSetting(settings, 'table_style_body_font', ':hover');\r\n\r\n  if (typographicTableTdHover) {\r\n    styles += typographicControllerToStyles(typographicTableTdHover);\r\n  }\r\n\r\n  const borderWidthTableTdHover = getResponsiveSetting(settings, 'table_style_body_border_width', ':hover');\r\n\r\n  if (borderWidthTableTdHover) {\r\n    styles += borderWidthStyled(borderWidthTableTdHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td a {`;\r\n\r\n  const colorTableTdA = getResponsiveSetting(settings, 'table_link_color');\r\n\r\n  if (colorTableTdA) {\r\n    styles += colorPropertyStyled(colorTableTdA, 'color');\r\n  }\r\n\r\n  const typographicTableTdA = getResponsiveSetting(settings, 'table_link_font');\r\n\r\n  if (typographicTableTdA) {\r\n    styles += typographicControllerToStyles(typographicTableTdA);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td a:hover {`;\r\n\r\n  const colorTableTdAHover = getResponsiveSetting(settings, 'table_link_color', ':hover');\r\n\r\n  if (colorTableTdAHover) {\r\n    styles += colorPropertyStyled(colorTableTdAHover, 'color');\r\n  }\r\n\r\n  const typographicTableTdAHover = getResponsiveSetting(settings, 'table_link_font', ':hover');\r\n\r\n  if (typographicTableTdAHover) {\r\n    styles += typographicControllerToStyles(typographicTableTdAHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody {`;\r\n\r\n  const backgroundColorTbodyBackground = getResponsiveSetting(settings, 'table_style_body_border_background');\r\n\r\n  if (backgroundColorTbodyBackground) {\r\n    styles += colorPropertyStyled(backgroundColorTbodyBackground, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody:hover {`;\r\n\r\n  const backgroundColorTbodyBackgroundHover = getResponsiveSetting(settings, 'table_style_body_border_background', ':hover');\r\n\r\n  if (backgroundColorTbodyBackgroundHover) {\r\n    styles += colorPropertyStyled(backgroundColorTbodyBackgroundHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-td:not(:first-child) {`;\r\n\r\n  const borderWidthTransposeTableTdNot = getResponsiveSetting(settings, 'table_style_body_border_width');\r\n\r\n  if (borderWidthTransposeTableTdNot) {\r\n    styles += marginTopLeftStyled(borderWidthTransposeTableTdNot, 'top'); //здесь вернется строка вида: \"margin-top: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-td:not(:first-child):hover {`;\r\n\r\n  const borderWidthTransposeTableTdNotHover = getResponsiveSetting(settings, 'table_style_body_border_width', ':hover');\r\n\r\n  if (borderWidthTransposeTableTdNotHover) {\r\n    styles += marginTopLeftStyled(borderWidthTransposeTableTdNotHover, 'top'); //здесь вернется строка вида: \"margin-top: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-tr:not(:first-child) .altrp-table-td {`;\r\n\r\n  const borderWidthTransposeTableTdNotTd = getResponsiveSetting(settings, 'table_style_body_border_width');\r\n\r\n  if (borderWidthTransposeTableTdNotTd) {\r\n    styles += marginTopLeftStyled(borderWidthTransposeTableTdNotTd, 'left'); //здесь вернется строка вида: \"margin-left: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-tr:not(:first-child) .altrp-table-td:hover {`;\r\n\r\n  const borderWidthTransposeTableTdNotTdHover = getResponsiveSetting(settings, 'table_style_body_border_width', ':hover');\r\n\r\n  if (borderWidthTransposeTableTdNotTdHover) {\r\n    styles += marginTopLeftStyled(borderWidthTransposeTableTdNotTdHover, 'left'); //здесь вернется строка вида: \"margin-left: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping {`;\r\n\r\n  const colorTdGrouping = getResponsiveSetting(settings, 'table_style_group_border_text_color');\r\n\r\n  if (colorTdGrouping) {\r\n    styles += colorPropertyStyled(colorTdGrouping, 'color');\r\n  }\r\n\r\n  const typographicTdGrouping = getResponsiveSetting(settings, 'table_style_group_font');\r\n\r\n  if (typographicTdGrouping) {\r\n    styles += typographicControllerToStyles(typographicTdGrouping);\r\n  }\r\n\r\n  const paddingTdGrouping = getResponsiveSetting(settings, 'table_style_group_cell_padding');\r\n\r\n  if (paddingTdGrouping) {\r\n    styles += dimensionsControllerToStyles(paddingTdGrouping);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping:hover {`;\r\n\r\n  const colorTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_border_text_color', ':hover');\r\n\r\n  if (colorTdGroupingHover) {\r\n    styles += colorPropertyStyled(colorTdGroupingHover, 'color');\r\n  }\r\n\r\n  const typographicTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_font', ':hover');\r\n\r\n  if (typographicTdGroupingHover) {\r\n    styles += typographicControllerToStyles(typographicTdGroupingHover);\r\n  }\r\n\r\n  const paddingTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_cell_padding', ':hover');\r\n\r\n  if (paddingTdGroupingHover) {\r\n    styles += dimensionsControllerToStyles(paddingTdGroupingHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody .altrp-table-td__grouping {`;\r\n\r\n  const backgroundColorTbodyTdGrouping = getResponsiveSetting(settings, 'table_style_group_border_background');\r\n\r\n  if (backgroundColorTbodyTdGrouping) {\r\n    styles += colorPropertyStyled(backgroundColorTbodyTdGrouping, 'background-color');\r\n  }\r\n\r\n  const textAlignTbodyTdGrouping = getResponsiveSetting(settings, 'table_style_group_cell_alignment');\r\n\r\n  if (textAlignTbodyTdGrouping) {\r\n    styles += simplePropertyStyled(textAlignTbodyTdGrouping, 'text-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody .altrp-table-td__grouping:hover {`;\r\n\r\n  const backgroundColorTbodyTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_border_background', ':hover');\r\n\r\n  if (backgroundColorTbodyTdGroupingHover) {\r\n    styles += colorPropertyStyled(backgroundColorTbodyTdGroupingHover, 'background-color');\r\n  }\r\n\r\n  const textAlignTbodyTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_cell_alignment', ':hover');\r\n\r\n  if (textAlignTbodyTdGroupingHover) {\r\n    styles += simplePropertyStyled(textAlignTbodyTdGroupingHover, 'text-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} div:not(.altrp-element) .altrp-table-td {`;\r\n\r\n  const verticalAlignDivNotAltrpElTd = getResponsiveSetting(settings, 'cell_vertical_alignment');\r\n\r\n  if (verticalAlignDivNotAltrpElTd) {\r\n    styles += simplePropertyStyled(verticalAlignDivNotAltrpElTd, 'vertical-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} div:not(.altrp-element) .altrp-table-td:hover {`;\r\n\r\n  const verticalAlignDivNotAltrpElTdHover = getResponsiveSetting(settings, 'cell_vertical_alignment', ':hover');\r\n\r\n  if (verticalAlignDivNotAltrpElTdHover) {\r\n    styles += simplePropertyStyled(verticalAlignDivNotAltrpElTdHover, 'vertical-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping .altrp-table__collapse-icon svg {`;\r\n\r\n  const iconSizeTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_size');\r\n\r\n  if (iconSizeTdGroupingIconSvg) {\r\n    styles += iconSizeStyled(iconSizeTdGroupingIconSvg);\r\n  }\r\n\r\n  const iconLeftSpaceTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_left_space');\r\n\r\n  if (iconLeftSpaceTdGroupingIconSvg) {\r\n    styles += sizeStyled(iconLeftSpaceTdGroupingIconSvg, 'margin-left');\r\n  }\r\n\r\n  const iconRightSpaceTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_right_space');\r\n\r\n  if (iconRightSpaceTdGroupingIconSvg) {\r\n    styles += sizeStyled(iconRightSpaceTdGroupingIconSvg, 'margin-right');\r\n  }\r\n\r\n  const iconTopTranslateTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_top');\r\n\r\n  if (iconTopTranslateTdGroupingIconSvg) {\r\n    styles += sizeStyled(iconTopTranslateTdGroupingIconSvg, 'top');\r\n  }\r\n\r\n  const iconLeftTranslateTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_left');\r\n\r\n  if (iconLeftTranslateTdGroupingIconSvg) {\r\n    styles += sizeStyled(iconLeftTranslateTdGroupingIconSvg, 'left');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping:hover .altrp-table__collapse-icon svg {`;\r\n\r\n  const iconSizeTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_size', ':hover');\r\n\r\n  if (iconSizeTdGroupingIconSvgHover) {\r\n    styles += iconSizeStyled(iconSizeTdGroupingIconSvgHover);\r\n  }\r\n\r\n  const iconLeftSpaceTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_left_space', ':hover');\r\n\r\n  if (iconLeftSpaceTdGroupingIconSvgHover) {\r\n    styles += sizeStyled(iconLeftSpaceTdGroupingIconSvgHover, 'margin-left');\r\n  }\r\n\r\n  const iconRightSpaceTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_right_space', ':hover');\r\n\r\n  if (iconRightSpaceTdGroupingIconSvgHover) {\r\n    styles += sizeStyled(iconRightSpaceTdGroupingIconSvgHover, 'margin-right');\r\n  }\r\n\r\n  const iconTopTranslateTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_top', ':hover');\r\n\r\n  if (iconTopTranslateTdGroupingIconSvgHover) {\r\n    styles += sizeStyled(iconTopTranslateTdGroupingIconSvgHover, 'top');\r\n  }\r\n\r\n  const iconLeftTranslateTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_left', ':hover');\r\n\r\n  if (iconLeftTranslateTdGroupingIconSvgHover) {\r\n    styles += sizeStyled(iconLeftTranslateTdGroupingIconSvgHover, 'left');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping .altrp-table__collapse-icon svg, ${parentClass} .altrp-table-td__grouping .altrp-table__collapse-icon path {`;\r\n\r\n  const iconFillTdGroupingIconSvgPath = getResponsiveSetting(settings, 'table_style_group_icon_color');\r\n\r\n  if (iconFillTdGroupingIconSvgPath) {\r\n    styles += colorPropertyStyled(iconFillTdGroupingIconSvgPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping:hover .altrp-table__collapse-icon svg, ${parentClass} .altrp-table-td__grouping:hover .altrp-table__collapse-icon path {`;\r\n\r\n  const iconFillTdGroupingIconSvgPathHover = getResponsiveSetting(settings, 'table_style_group_icon_color', ':hover');\r\n\r\n  if (iconFillTdGroupingIconSvgPathHover) {\r\n    styles += colorPropertyStyled(iconFillTdGroupingIconSvgPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-foot .altrp-table-td {`;\r\n\r\n  const paddingTableFootTd = getResponsiveSetting(settings, 'table_style_footer_cell_padding');\r\n\r\n  if (paddingTableFootTd) {\r\n    styles += dimensionsControllerToStyles(paddingTableFootTd);\r\n  }\r\n\r\n  const textAlignTableFootTd = getResponsiveSetting(settings, 'table_style_footer_cell_alignment');\r\n\r\n  if (textAlignTableFootTd) {\r\n    styles += simplePropertyStyled(textAlignTableFootTd, 'text-align');\r\n  }\r\n\r\n  const backgroundColorTableFootTd = getResponsiveSetting(settings, 'table_style_footer_border_background');\r\n\r\n  if (backgroundColorTableFootTd) {\r\n    styles += colorPropertyStyled(backgroundColorTableFootTd, 'background-color');\r\n  }\r\n\r\n  const colorTableFootTd = getResponsiveSetting(settings, 'table_style_footer_border_text_color');\r\n\r\n  if (colorTableFootTd) {\r\n    styles += colorPropertyStyled(colorTableFootTd, 'color');\r\n  }\r\n\r\n  const typographicTableFootTd = getResponsiveSetting(settings, 'table_style_footer_font');\r\n\r\n  if (typographicTableFootTd) {\r\n    styles += typographicControllerToStyles(typographicTableFootTd);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-foot .altrp-table-td:hover {`;\r\n\r\n  const paddingTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_cell_padding', ':hover');\r\n\r\n  if (paddingTableFootTdHover) {\r\n    styles += dimensionsControllerToStyles(paddingTableFootTdHover);\r\n  }\r\n\r\n  const textAlignTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_cell_alignment', ':hover');\r\n\r\n  if (textAlignTableFootTdHover) {\r\n    styles += simplePropertyStyled(textAlignTableFootTdHover, 'text-align');\r\n  }\r\n\r\n  const backgroundColorTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_border_background', ':hover');\r\n\r\n  if (backgroundColorTableFootTdHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableFootTdHover, 'background-color');\r\n  }\r\n\r\n  const colorTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_border_text_color', ':hover');\r\n\r\n  if (colorTableFootTdHover) {\r\n    styles += colorPropertyStyled(colorTableFootTdHover, 'color');\r\n  }\r\n\r\n  const typographicTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_font', ':hover');\r\n\r\n  if (typographicTableFootTdHover) {\r\n    styles += typographicControllerToStyles(typographicTableFootTdHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-global-filter label {`;\r\n\r\n  const paddingGlobalFilterLabel = getResponsiveSetting(settings, 'global_filter_label_padding');\r\n\r\n  if (paddingGlobalFilterLabel) {\r\n    styles += dimensionsControllerToStyles(paddingGlobalFilterLabel);\r\n  }\r\n\r\n  const colorGlobalFilterLabel = getResponsiveSetting(settings, 'global_filter_label_color');\r\n\r\n  if (colorGlobalFilterLabel) {\r\n    styles += colorPropertyStyled(colorGlobalFilterLabel, 'color');\r\n  }\r\n\r\n  const typographicGlobalFilterLabel = getResponsiveSetting(settings, 'global_filter_label_typographic');\r\n\r\n  if (typographicGlobalFilterLabel) {\r\n    styles += typographicControllerToStyles(typographicGlobalFilterLabel);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-global-filter label:hover {`;\r\n\r\n  const paddingGlobalFilterLabelHover = getResponsiveSetting(settings, 'global_filter_label_padding', ':hover');\r\n\r\n  if (paddingGlobalFilterLabelHover) {\r\n    styles += dimensionsControllerToStyles(paddingGlobalFilterLabelHover);\r\n  }\r\n\r\n  const colorGlobalFilterLabelHover = getResponsiveSetting(settings, 'global_filter_label_color', ':hover');\r\n\r\n  if (colorGlobalFilterLabelHover) {\r\n    styles += colorPropertyStyled(colorGlobalFilterLabelHover, 'color');\r\n  }\r\n\r\n  const typographicGlobalFilterLabelHover = getResponsiveSetting(settings, 'global_filter_label_typographic', ':hover');\r\n\r\n  if (typographicGlobalFilterLabelHover) {\r\n    styles += typographicControllerToStyles(typographicGlobalFilterLabelHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-global-filter input {`;\r\n\r\n  const paddingGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_padding');\r\n\r\n  if (paddingGlobalFilterInput) {\r\n    styles += dimensionsControllerToStyles(paddingGlobalFilterInput);\r\n  }\r\n\r\n  const widthGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_width');\r\n\r\n  if (widthGlobalFilterInput) {\r\n    styles += sizeStyled(widthGlobalFilterInput, 'width');\r\n  }\r\n\r\n  const marginLeftGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_margin_left');\r\n\r\n  if (marginLeftGlobalFilterInput) {\r\n    styles += sizeStyled(marginLeftGlobalFilterInput, 'margin-left');\r\n  }\r\n\r\n  const colorGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_color');\r\n\r\n  if (colorGlobalFilterInput) {\r\n    styles += colorPropertyStyled(colorGlobalFilterInput, 'color');\r\n  }\r\n\r\n  const backgroundColorGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_background_color');\r\n\r\n  if (backgroundColorGlobalFilterInput) {\r\n    styles += colorPropertyStyled(backgroundColorGlobalFilterInput, 'background');\r\n  }\r\n\r\n  const typographicGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_typographic');\r\n\r\n  if (typographicGlobalFilterInput) {\r\n    styles += typographicControllerToStyles(typographicGlobalFilterInput);\r\n  }\r\n\r\n  const borderTypeGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_border_type');\r\n\r\n  if (borderTypeGlobalFilterInput) {\r\n    styles += simplePropertyStyled(borderTypeGlobalFilterInput, 'border-style');\r\n  }\r\n\r\n  const borderWidthGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_border_width');\r\n\r\n  if (borderWidthGlobalFilterInput) {\r\n    styles += borderWidthStyled(borderWidthGlobalFilterInput);\r\n  }\r\n\r\n  const borderRadiusGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_border_radius');\r\n\r\n  if (borderRadiusGlobalFilterInput) {\r\n    styles += dimensionsControllerToStyles(borderRadiusGlobalFilterInput, 'border-radius');\r\n  }\r\n\r\n  const borderColorGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_border_color');\r\n\r\n  if (borderColorGlobalFilterInput) {\r\n    styles += colorPropertyStyled(borderColorGlobalFilterInput, 'border-color');\r\n  }\r\n\r\n  const boxShadowGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_shadow');\r\n\r\n  if (boxShadowGlobalFilterInput) {\r\n    styles += shadowControllerToStyles(boxShadowGlobalFilterInput);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-global-filter input:hover {`;\r\n\r\n  const paddingGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_padding', ':hover');\r\n\r\n  if (paddingGlobalFilterInputHover) {\r\n    styles += dimensionsControllerToStyles(paddingGlobalFilterInputHover);\r\n  }\r\n\r\n  const widthGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_width', ':hover');\r\n\r\n  if (widthGlobalFilterInputHover) {\r\n    styles += sizeStyled(widthGlobalFilterInputHover, 'width');\r\n  }\r\n\r\n  const marginLeftGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_margin_left', ':hover');\r\n\r\n  if (marginLeftGlobalFilterInputHover) {\r\n    styles += sizeStyled(marginLeftGlobalFilterInputHover, 'margin-left');\r\n  }\r\n\r\n  const colorGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_color', ':hover');\r\n\r\n  if (colorGlobalFilterInputHover) {\r\n    styles += colorPropertyStyled(colorGlobalFilterInputHover, 'color');\r\n  }\r\n\r\n  const backgroundColorGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_background_color', ':hover');\r\n\r\n  if (backgroundColorGlobalFilterInputHover) {\r\n    styles += colorPropertyStyled(backgroundColorGlobalFilterInputHover, 'background');\r\n  }\r\n\r\n  const typographicGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_typographic', ':hover');\r\n\r\n  if (typographicGlobalFilterInputHover) {\r\n    styles += typographicControllerToStyles(typographicGlobalFilterInputHover);\r\n  }\r\n\r\n  const borderTypeGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_border_type', ':hover');\r\n\r\n  if (borderTypeGlobalFilterInputHover) {\r\n    styles += simplePropertyStyled(borderTypeGlobalFilterInputHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_border_width', ':hover');\r\n\r\n  if (borderWidthGlobalFilterInputHover) {\r\n    styles += borderWidthStyled(borderWidthGlobalFilterInputHover);\r\n  }\r\n\r\n  const borderRadiusGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_border_radius', ':hover');\r\n\r\n  if (borderRadiusGlobalFilterInputHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusGlobalFilterInputHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_border_color', ':hover');\r\n\r\n  if (borderColorGlobalFilterInputHover) {\r\n    styles += colorPropertyStyled(borderColorGlobalFilterInputHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_shadow', ':hover');\r\n\r\n  if (boxShadowGlobalFilterInputHover) {\r\n    styles += shadowControllerToStyles(boxShadowGlobalFilterInputHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination {`;\r\n\r\n  const paddingPagination = getResponsiveSetting(settings, 'table_style_pagination_padding');\r\n\r\n  if (paddingPagination) {\r\n    styles += dimensionsControllerToStyles(paddingPagination);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination:hover {`;\r\n\r\n  const paddingPaginationHover = getResponsiveSetting(settings, 'table_style_pagination_padding', ':hover');\r\n\r\n  if (paddingPaginationHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__previous {`;\r\n\r\n  const typographicPaginationPrev = getResponsiveSetting(settings, 'table_style_prev_btn_pagination_typographic');\r\n\r\n  if (typographicPaginationPrev) {\r\n    styles += typographicControllerToStyles(typographicPaginationPrev);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__previous:hover {`;\r\n\r\n  const typographicPaginationPrevHover = getResponsiveSetting(settings, 'table_style_prev_btn_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginationPrevHover) {\r\n    styles += typographicControllerToStyles(typographicPaginationPrevHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} altrp-pagination .altrp-pagination__next {`;\r\n\r\n  const typographicPaginationNext = getResponsiveSetting(settings, 'table_style_next_btn_pagination_typographic');\r\n\r\n  if (typographicPaginationNext) {\r\n    styles += typographicControllerToStyles(typographicPaginationNext);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} altrp-pagination .altrp-pagination__next:hover {`;\r\n\r\n  const typographicPaginationNextHover = getResponsiveSetting(settings, 'table_style_next_btn_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginationNextHover) {\r\n    styles += typographicControllerToStyles(typographicPaginationNextHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination-pages__item {`;\r\n\r\n  const typographicPaginationPagesItem = getResponsiveSetting(settings, 'table_style_item_count_pagination_typographic');\r\n\r\n  if (typographicPaginationPagesItem) {\r\n    styles += typographicControllerToStyles(typographicPaginationPagesItem);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination-pages__item:hover {`;\r\n\r\n  const typographicPaginationPagesItemHover = getResponsiveSetting(settings, 'table_style_item_count_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginationPagesItemHover) {\r\n    styles += typographicControllerToStyles(typographicPaginationPagesItemHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous, ${parentClass} .altrp-pagination__next {`;\r\n\r\n  const colorPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_buttons_text_color');\r\n\r\n  if (colorPaginationPrevNext) {\r\n    styles += colorPropertyStyled(colorPaginationPrevNext, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_buttons_background_color');\r\n\r\n  if (backgroundColorPaginationPrevNext) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationPrevNext, 'background-color');\r\n  }\r\n\r\n  const paddingPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_padding_buttons');\r\n\r\n  if (paddingPaginationPrevNext) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationPrevNext);\r\n  }\r\n\r\n  const borderTypePaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_border_type');\r\n\r\n  if (borderTypePaginationPrevNext) {\r\n    styles += simplePropertyStyled(borderTypePaginationPrevNext, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_border_width');\r\n\r\n  if (borderWidthPaginationPrevNext) {\r\n    styles += borderWidthStyled(borderWidthPaginationPrevNext);\r\n  }\r\n\r\n  const borderRadiusPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_border_radius');\r\n\r\n  if (borderRadiusPaginationPrevNext) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginationPrevNext, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_border_color');\r\n\r\n  if (borderColorPaginationPrevNext) {\r\n    styles += colorPropertyStyled(borderColorPaginationPrevNext, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginationPrevNext = getResponsiveSetting(settings, 'pagination_buttons_shadow');\r\n\r\n  if (boxShadowPaginationPrevNext) {\r\n    styles += shadowControllerToStyles(boxShadowPaginationPrevNext);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover, ${parentClass} .altrp-pagination__next:hover {`;\r\n\r\n  const colorPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_buttons_text_color', ':hover');\r\n\r\n  if (colorPaginationPrevNextHover) {\r\n    styles += colorPropertyStyled(colorPaginationPrevNextHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_buttons_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginationPrevNextHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationPrevNextHover, 'background-color');\r\n  }\r\n\r\n  const paddingPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_padding_buttons', ':hover');\r\n\r\n  if (paddingPaginationPrevNextHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationPrevNextHover);\r\n  }\r\n\r\n  const borderTypePaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_border_type', ':hover');\r\n\r\n  if (borderTypePaginationPrevNextHover) {\r\n    styles += simplePropertyStyled(borderTypePaginationPrevNextHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_border_width', ':hover');\r\n\r\n  if (borderWidthPaginationPrevNextHover) {\r\n    styles += borderWidthStyled(borderWidthPaginationPrevNextHover);\r\n  }\r\n\r\n  const borderRadiusPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginationPrevNextHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginationPrevNextHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_border_color', ':hover');\r\n\r\n  if (borderColorPaginationPrevNextHover) {\r\n    styles += colorPropertyStyled(borderColorPaginationPrevNextHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginationPrevNextHover = getResponsiveSetting(settings, 'pagination_buttons_shadow', ':hover');\r\n\r\n  if (boxShadowPaginationPrevNextHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginationPrevNextHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next, ${parentClass} .altrp-pagination-pages__item, ${parentClass} .altrp-pagination__count, ${parentClass} .altrp-pagination__previous, ${parentClass} .altrp-pagination__goto-page, ${parentClass} .altrp-pagination__select-size  {`;\r\n\r\n  const typographicNextItemCountPrevGotoSelect = getResponsiveSetting(settings, 'table_style_pagination_typographic');\r\n\r\n  if (typographicNextItemCountPrevGotoSelect) {\r\n    styles += typographicControllerToStyles(typographicNextItemCountPrevGotoSelect);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover, ${parentClass} .altrp-pagination-pages__item:hover, ${parentClass} .altrp-pagination__count:hover, ${parentClass} .altrp-pagination__previous:hover, ${parentClass} .altrp-pagination__goto-page:hover, ${parentClass} .altrp-pagination__select-size:hover  {`;\r\n\r\n  const typographicNextItemCountPrevGotoSelectHover = getResponsiveSetting(settings, 'table_style_pagination_typographic', ':hover');\r\n\r\n  if (typographicNextItemCountPrevGotoSelectHover) {\r\n    styles += typographicControllerToStyles(typographicNextItemCountPrevGotoSelectHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count {`;\r\n\r\n  const marginPaginationCount = getResponsiveSetting(settings, 'count_buttons_margin');\r\n\r\n  if (marginPaginationCount) {\r\n    styles += dimensionsControllerToStyles(marginPaginationCount, 'margin');\r\n  }\r\n\r\n  const colorPaginationCount = getResponsiveSetting(settings, 'table_style_pagination_count_text_color');\r\n\r\n  if (colorPaginationCount) {\r\n    styles += colorPropertyStyled(colorPaginationCount, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationCount = getResponsiveSetting(settings, 'table_style_pagination_count_background_color');\r\n\r\n  if (backgroundColorPaginationCount) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationCount, 'background-color');\r\n  }\r\n\r\n  const paddingPaginationCount = getResponsiveSetting(settings, 'table_style_pagination_padding_count');\r\n\r\n  if (paddingPaginationCount) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationCount);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count:hover {`;\r\n\r\n  const marginPaginationCountHover = getResponsiveSetting(settings, 'count_buttons_margin', ':hover');\r\n\r\n  if (marginPaginationCountHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationCountHover, 'margin');\r\n  }\r\n\r\n  const colorPaginationCountHover = getResponsiveSetting(settings, 'table_style_pagination_count_text_color', ':hover');\r\n\r\n  if (colorPaginationCountHover) {\r\n    styles += colorPropertyStyled(colorPaginationCountHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationCountHover = getResponsiveSetting(settings, 'table_style_pagination_count_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginationCountHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationCountHover, 'background-color');\r\n  }\r\n\r\n  const paddingPaginationCountHover = getResponsiveSetting(settings, 'table_style_pagination_padding_count', ':hover');\r\n\r\n  if (paddingPaginationCountHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationCountHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination-pages__item {`;\r\n\r\n  const marginPaginPagesItem = getResponsiveSetting(settings, 'count_button_item_margin');\r\n\r\n  if (marginPaginPagesItem) {\r\n    styles += dimensionsControllerToStyles(marginPaginPagesItem, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_background_color');\r\n\r\n  if (backgroundColorPaginPagesItem) {\r\n    styles += colorPropertyStyled(backgroundColorPaginPagesItem, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_type');\r\n\r\n  if (borderTypePaginPagesItem) {\r\n    styles += simplePropertyStyled(borderTypePaginPagesItem, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_width');\r\n\r\n  if (borderWidthPaginPagesItem) {\r\n    styles += borderWidthStyled(borderWidthPaginPagesItem);\r\n  }\r\n\r\n  const borderRadiusPaginPagesItem = getResponsiveSetting(settings, 'table_style_count_item_border_radius');\r\n\r\n  if (borderRadiusPaginPagesItem) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPagesItem, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_color');\r\n\r\n  if (borderColorPaginPagesItem) {\r\n    styles += colorPropertyStyled(borderColorPaginPagesItem, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginPagesItem = getResponsiveSetting(settings, 'pagination_count_item_shadow');\r\n\r\n  if (boxShadowPaginPagesItem) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPagesItem);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination-pages__item:hover {`;\r\n\r\n  const marginPaginPagesItemHover = getResponsiveSetting(settings, 'count_button_item_margin', ':hover');\r\n\r\n  if (marginPaginPagesItemHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginPagesItemHover, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginPagesItemHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginPagesItemHover, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_type', ':hover');\r\n\r\n  if (borderTypePaginPagesItemHover) {\r\n    styles += simplePropertyStyled(borderTypePaginPagesItemHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_width', ':hover');\r\n\r\n  if (borderWidthPaginPagesItemHover) {\r\n    styles += borderWidthStyled(borderWidthPaginPagesItemHover);\r\n  }\r\n\r\n  const borderRadiusPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_count_item_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginPagesItemHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPagesItemHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_color', ':hover');\r\n\r\n  if (borderColorPaginPagesItemHover) {\r\n    styles += colorPropertyStyled(borderColorPaginPagesItemHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginPagesItemHover = getResponsiveSetting(settings, 'pagination_count_item_shadow', ':hover');\r\n\r\n  if (boxShadowPaginPagesItemHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPagesItemHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .active.altrp-pagination-pages__item {`;\r\n\r\n  const colorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_text_color');\r\n\r\n  if (colorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(colorActivePaginPagesItem, 'color');\r\n  }\r\n\r\n  const backgroundColorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_background_color');\r\n\r\n  if (backgroundColorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(backgroundColorActivePaginPagesItem, 'background-color');\r\n  }\r\n\r\n  const borderColorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_border_color');\r\n\r\n  if (borderColorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(borderColorActivePaginPagesItem, 'border-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .active.altrp-pagination-pages__item:hover {`;\r\n\r\n  const colorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_text_color', ':hover');\r\n\r\n  if (colorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(colorActivePaginPagesItemHover, 'color');\r\n  }\r\n\r\n  const backgroundColorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_background_color', ':hover');\r\n\r\n  if (backgroundColorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(backgroundColorActivePaginPagesItemHover, 'background-color');\r\n  }\r\n\r\n  const borderColorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_border_color', ':hover');\r\n\r\n  if (borderColorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(borderColorActivePaginPagesItemHover, 'border-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__ellipsis {`;\r\n\r\n  const marginPaginationEllipsis = getResponsiveSetting(settings, 'ellipsis_margin');\r\n\r\n  if (marginPaginationEllipsis) {\r\n    styles += dimensionsControllerToStyles(marginPaginationEllipsis, 'margin');\r\n  }\r\n\r\n  const colorPaginationEllipsis = getResponsiveSetting(settings, 'ellipsis_color');\r\n\r\n  if (colorPaginationEllipsis) {\r\n    styles += colorPropertyStyled(colorPaginationEllipsis, 'color');\r\n  }\r\n\r\n  const typographicPaginationEllipsis = getResponsiveSetting(settings, 'ellipsis_typographic');\r\n\r\n  if (typographicPaginationEllipsis) {\r\n    styles += typographicControllerToStyles(typographicPaginationEllipsis);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__ellipsis:hover {`;\r\n\r\n  const marginPaginationEllipsisHover = getResponsiveSetting(settings, 'ellipsis_margin', ':hover');\r\n\r\n  if (marginPaginationEllipsisHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationEllipsisHover, 'margin');\r\n  }\r\n\r\n  const colorPaginationEllipsisHover = getResponsiveSetting(settings, 'ellipsis_color', ':hover');\r\n\r\n  if (colorPaginationEllipsisHover) {\r\n    styles += colorPropertyStyled(colorPaginationEllipsisHover, 'color');\r\n  }\r\n\r\n  const typographicPaginationEllipsisHover = getResponsiveSetting(settings, 'ellipsis_typographic', ':hover');\r\n\r\n  if (typographicPaginationEllipsisHover) {\r\n    styles += typographicControllerToStyles(typographicPaginationEllipsisHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__goto-page {`;\r\n\r\n  const marginPaginationGotoPages = getResponsiveSetting(settings, 'goto-page_margin');\r\n\r\n  if (marginPaginationGotoPages) {\r\n    styles += dimensionsControllerToStyles(marginPaginationGotoPages, 'margin');\r\n  }\r\n\r\n  const paddingPaginationGotoPages = getResponsiveSetting(settings, 'page_input_padding');\r\n\r\n  if (paddingPaginationGotoPages) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationGotoPages);\r\n  }\r\n\r\n  const colorPaginationGotoPages = getResponsiveSetting(settings, 'page_input_text_color');\r\n\r\n  if (colorPaginationGotoPages) {\r\n    styles += colorPropertyStyled(colorPaginationGotoPages, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationGotoPages = getResponsiveSetting(settings, 'page_input_background_color');\r\n\r\n  if (backgroundColorPaginationGotoPages) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationGotoPages, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginationGotoPages = getResponsiveSetting(settings, 'page_input_border_type');\r\n\r\n  if (borderTypePaginationGotoPages) {\r\n    styles += simplePropertyStyled(borderTypePaginationGotoPages, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginationGotoPages = getResponsiveSetting(settings, 'page_input_border_width');\r\n\r\n  if (borderWidthPaginationGotoPages) {\r\n    styles += borderWidthStyled(borderWidthPaginationGotoPages);\r\n  }\r\n\r\n  const borderRadiusPaginationGotoPages = getResponsiveSetting(settings, 'page_input_border_radius');\r\n\r\n  if (borderRadiusPaginationGotoPages) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginationGotoPages, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginationGotoPages = getResponsiveSetting(settings, 'page_input_border_color');\r\n\r\n  if (borderColorPaginationGotoPages) {\r\n    styles += colorPropertyStyled(borderColorPaginationGotoPages, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginationGotoPages = getResponsiveSetting(settings, 'page_input_shadow');\r\n\r\n  if (boxShadowPaginationGotoPages) {\r\n    styles += shadowControllerToStyles(boxShadowPaginationGotoPages);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__goto-page:hover {`;\r\n\r\n  const marginPaginationGotoPagesHover = getResponsiveSetting(settings, 'goto-page_margin', ':hover');\r\n\r\n  if (marginPaginationGotoPagesHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationGotoPagesHover, 'margin');\r\n  }\r\n\r\n  const paddingPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_padding', ':hover');\r\n\r\n  if (paddingPaginationGotoPagesHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationGotoPagesHover);\r\n  }\r\n\r\n  const colorPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_text_color', ':hover');\r\n\r\n  if (colorPaginationGotoPagesHover) {\r\n    styles += colorPropertyStyled(colorPaginationGotoPagesHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginationGotoPagesHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationGotoPagesHover, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_border_type', ':hover');\r\n\r\n  if (borderTypePaginationGotoPagesHover) {\r\n    styles += simplePropertyStyled(borderTypePaginationGotoPagesHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_border_width', ':hover');\r\n\r\n  if (borderWidthPaginationGotoPagesHover) {\r\n    styles += borderWidthStyled(borderWidthPaginationGotoPagesHover);\r\n  }\r\n\r\n  const borderRadiusPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginationGotoPagesHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginationGotoPagesHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_border_color', ':hover');\r\n\r\n  if (borderColorPaginationGotoPagesHover) {\r\n    styles += colorPropertyStyled(borderColorPaginationGotoPagesHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_shadow', ':hover');\r\n\r\n  if (boxShadowPaginationGotoPagesHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginationGotoPagesHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__goto-page {`;\r\n\r\n  const typographicPaginPaginGotoPages = getResponsiveSetting(settings, 'table_style_page_input_pagination_typographic');\r\n\r\n  if (typographicPaginPaginGotoPages) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginGotoPages);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__goto-page:hover {`;\r\n\r\n  const typographicPaginPaginGotoPagesHover = getResponsiveSetting(settings, 'table_style_page_input_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginGotoPagesHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginGotoPagesHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control {`;\r\n\r\n  const widthPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_width');\r\n\r\n  if (widthPaginSelectSizeControl) {\r\n    styles += sizeStyled(widthPaginSelectSizeControl, 'width');\r\n  }\r\n\r\n  const paddingPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_padding');\r\n\r\n  if (paddingPaginSelectSizeControl) {\r\n    styles += dimensionsControllerToStyles(paddingPaginSelectSizeControl);\r\n  }\r\n\r\n  const borderTypePaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_border_type');\r\n\r\n  if (borderTypePaginSelectSizeControl) {\r\n    styles += simplePropertyStyled(borderTypePaginSelectSizeControl, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_border_width');\r\n\r\n  if (borderWidthPaginSelectSizeControl) {\r\n    styles += borderWidthStyled(borderWidthPaginSelectSizeControl);\r\n  }\r\n\r\n  const borderRadiusPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_border_radius');\r\n\r\n  if (borderRadiusPaginSelectSizeControl) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginSelectSizeControl, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_border_color');\r\n\r\n  if (borderColorPaginSelectSizeControl) {\r\n    styles += colorPropertyStyled(borderColorPaginSelectSizeControl, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_shadow');\r\n\r\n  if (boxShadowPaginSelectSizeControl) {\r\n    styles += shadowControllerToStyles(boxShadowPaginSelectSizeControl);\r\n  }\r\n\r\n  const colorPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_text_color');\r\n\r\n  if (colorPaginSelectSizeControl) {\r\n    styles += colorPropertyStyled(colorPaginSelectSizeControl, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_background_color');\r\n\r\n  if (backgroundColorPaginSelectSizeControl) {\r\n    styles += colorPropertyStyled(backgroundColorPaginSelectSizeControl, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control:hover {`;\r\n\r\n  const widthPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_width', ':hover');\r\n\r\n  if (widthPaginSelectSizeControlHover) {\r\n    styles += sizeStyled(widthPaginSelectSizeControlHover, 'width');\r\n  }\r\n\r\n  const paddingPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_padding', ':hover');\r\n\r\n  if (paddingPaginSelectSizeControlHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginSelectSizeControlHover);\r\n  }\r\n\r\n  const borderTypePaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_border_type', ':hover');\r\n\r\n  if (borderTypePaginSelectSizeControlHover) {\r\n    styles += simplePropertyStyled(borderTypePaginSelectSizeControlHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_border_width', ':hover');\r\n\r\n  if (borderWidthPaginSelectSizeControlHover) {\r\n    styles += borderWidthStyled(borderWidthPaginSelectSizeControlHover);\r\n  }\r\n\r\n  const borderRadiusPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginSelectSizeControlHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginSelectSizeControlHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_border_color', ':hover');\r\n\r\n  if (borderColorPaginSelectSizeControlHover) {\r\n    styles += colorPropertyStyled(borderColorPaginSelectSizeControlHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_shadow', ':hover');\r\n\r\n  if (boxShadowPaginSelectSizeControlHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginSelectSizeControlHover);\r\n  }\r\n\r\n  const colorPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_text_color', ':hover');\r\n\r\n  if (colorPaginSelectSizeControlHover) {\r\n    styles += colorPropertyStyled(colorPaginSelectSizeControlHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginSelectSizeControlHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginSelectSizeControlHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__select-size {`;\r\n\r\n  const typographicPaginSelectSize = getResponsiveSetting(settings, 'table_style_pagination_select__pagination_typographic');\r\n\r\n  if (typographicPaginSelectSize) {\r\n    styles += typographicControllerToStyles(typographicPaginSelectSize);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__select-size:hover {`;\r\n\r\n  const typographicPaginPaginSelectSizeHover = getResponsiveSetting(settings, 'table_style_pagination_select__pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginSelectSizeHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginSelectSizeHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size {`;\r\n\r\n  const marginPaginSelectSize = getResponsiveSetting(settings, 'pagination_select_margin');\r\n\r\n  if (marginPaginSelectSize) {\r\n    styles += dimensionsControllerToStyles(marginPaginSelectSize, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size:hover {`;\r\n\r\n  const marginPaginSelectSizeHover = getResponsiveSetting(settings, 'pagination_select_margin', ':hover');\r\n\r\n  if (marginPaginSelectSizeHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginSelectSizeHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--checked svg {`;\r\n\r\n  const marginCheckIconSvg = getResponsiveSetting(settings, 'checked_icon_margin');\r\n\r\n  if (marginCheckIconSvg) {\r\n    styles += dimensionsControllerToStyles(marginCheckIconSvg, 'margin');\r\n  }\r\n\r\n  const sizeCheckIconSvg = getResponsiveSetting(settings, 'checked_size');\r\n\r\n  if (sizeCheckIconSvg) {\r\n    styles += iconSizeStyled(sizeCheckIconSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--checked svg:hover {`;\r\n\r\n  const marginCheckIconSvgHover = getResponsiveSetting(settings, 'checked_icon_margin', ':hover');\r\n\r\n  if (marginCheckIconSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginCheckIconSvgHover, 'margin');\r\n  }\r\n\r\n  const sizeCheckIconSvgHover = getResponsiveSetting(settings, 'checked_size', ':hover');\r\n\r\n  if (sizeCheckIconSvgHover) {\r\n    styles += iconSizeStyled(sizeCheckIconSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--unchecked svg {`;\r\n\r\n  const marginUncheckIconSvg = getResponsiveSetting(settings, 'unchecked_icon_margin');\r\n\r\n  if (marginUncheckIconSvg) {\r\n    styles += dimensionsControllerToStyles(marginUncheckIconSvg, 'margin');\r\n  }\r\n\r\n  const sizeUncheckIconSvg = getResponsiveSetting(settings, 'unchecked_size');\r\n\r\n  if (sizeUncheckIconSvg) {\r\n    styles += iconSizeStyled(sizeUncheckIconSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--unchecked svg:hover {`;\r\n\r\n  const marginUncheckIconSvgHover = getResponsiveSetting(settings, 'unchecked_icon_margin', ':hover');\r\n\r\n  if (marginUncheckIconSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginUncheckIconSvgHover, 'margin');\r\n  }\r\n\r\n  const sizeUncheckIconSvgHover = getResponsiveSetting(settings, 'unchecked_size', ':hover');\r\n\r\n  if (sizeUncheckIconSvgHover) {\r\n    styles += iconSizeStyled(sizeUncheckIconSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--indeterminate svg {`;\r\n\r\n  const marginCheckIconIndeterminateSvg = getResponsiveSetting(settings, 'indeterminate_icon_margin');\r\n\r\n  if (marginCheckIconIndeterminateSvg) {\r\n    styles += dimensionsControllerToStyles(marginCheckIconIndeterminateSvg, 'margin');\r\n  }\r\n\r\n  const sizeCheckIconIndeterminateSvg = getResponsiveSetting(settings, 'indeterminate_size');\r\n\r\n  if (sizeCheckIconIndeterminateSvg) {\r\n    styles += iconSizeStyled(sizeCheckIconIndeterminateSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--indeterminate svg:hover {`;\r\n\r\n  const marginCheckIconIndeterminateSvgHover = getResponsiveSetting(settings, 'indeterminate_icon_margin', ':hover');\r\n\r\n  if (marginCheckIconIndeterminateSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginCheckIconIndeterminateSvgHover, 'margin');\r\n  }\r\n\r\n  const sizeCheckIconIndeterminateSvgHover = getResponsiveSetting(settings, 'indeterminate_size', ':hover');\r\n\r\n  if (sizeCheckIconIndeterminateSvgHover) {\r\n    styles += iconSizeStyled(sizeCheckIconIndeterminateSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--checked path {`;\r\n\r\n  const iconFillCheckIconCheckedPath = getResponsiveSetting(settings, 'checked_icon_color');\r\n\r\n  if (iconFillCheckIconCheckedPath) {\r\n    styles += colorPropertyStyled(iconFillCheckIconCheckedPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--checked:hover path {`;\r\n\r\n  const iconFillCheckIconCheckedPathHover = getResponsiveSetting(settings, 'checked_icon_color', ':hover');\r\n\r\n  if (iconFillCheckIconCheckedPathHover) {\r\n    styles += colorPropertyStyled(iconFillCheckIconCheckedPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--unchecked path {`;\r\n\r\n  const iconFillCheckIconUncheckedPath = getResponsiveSetting(settings, 'unchecked_icon_color');\r\n\r\n  if (iconFillCheckIconUncheckedPath) {\r\n    styles += colorPropertyStyled(iconFillCheckIconUncheckedPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--unchecked:hover path {`;\r\n\r\n  const iconFillCheckIconUncheckedPathHover = getResponsiveSetting(settings, 'unchecked_icon_color', ':hover');\r\n\r\n  if (iconFillCheckIconUncheckedPathHover) {\r\n    styles += colorPropertyStyled(iconFillCheckIconUncheckedPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--indeterminate path {`;\r\n\r\n  const iconFillCheckIconIndeterminatePath = getResponsiveSetting(settings, 'indeterminate_icon_color');\r\n\r\n  if (iconFillCheckIconIndeterminatePath) {\r\n    styles += colorPropertyStyled(iconFillCheckIconIndeterminatePath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--indeterminate:hover path {`;\r\n\r\n  const iconFillCheckIconIndeterminatePathHover = getResponsiveSetting(settings, 'indeterminate_icon_color', ':hover');\r\n\r\n  if (iconFillCheckIconIndeterminatePathHover) {\r\n    styles += colorPropertyStyled(iconFillCheckIconIndeterminatePathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table__resizer {`;\r\n\r\n  const sliderSizeTableResizer = getResponsiveSetting(settings, 'resize_slider_size');\r\n\r\n  if (sliderSizeTableResizer) {\r\n    styles += sizeStyled(sliderSizeTableResizer, 'width');\r\n  }\r\n\r\n  const backgroundColorTableResizer = getResponsiveSetting(settings, 'resize_slider_color');\r\n\r\n  if (backgroundColorTableResizer) {\r\n    styles += colorPropertyStyled(backgroundColorTableResizer, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table__resizer:hover {`;\r\n\r\n  const sliderSizeTableResizerHover = getResponsiveSetting(settings, 'resize_slider_size', ':hover');\r\n\r\n  if (sliderSizeTableResizerHover) {\r\n    styles += sizeStyled(sliderSizeTableResizerHover, 'width');\r\n  }\r\n\r\n  const backgroundColorTableResizerHover = getResponsiveSetting(settings, 'resize_slider_color', ':hover');\r\n\r\n  if (backgroundColorTableResizerHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableResizerHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table__resizer.altrp-table__resizer_resizing {`;\r\n\r\n  const backgroundColorTableResizerResizing = getResponsiveSetting(settings, 'active_resize_slider_color');\r\n\r\n  if (backgroundColorTableResizerResizing) {\r\n    styles += colorPropertyStyled(backgroundColorTableResizerResizing, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table__resizer.altrp-table__resizer_resizing:hover {`;\r\n\r\n  const backgroundColorTableResizerResizingHover = getResponsiveSetting(settings, 'active_resize_slider_color', ':hover');\r\n\r\n  if (backgroundColorTableResizerResizingHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableResizerResizingHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-image {`;\r\n\r\n  const filtersImage = getResponsiveSetting(settings, 'filter_style_border_shadow');\r\n\r\n  if (filtersImage) {\r\n    styles += filtersControllerToStyles(filtersImage);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-image:hover {`;\r\n\r\n  const filtersImageHover = getResponsiveSetting(settings, 'filter_style_border_shadow', ':hover');\r\n\r\n  if (filtersImageHover) {\r\n    styles += filtersControllerToStyles(filtersImageHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}\r\n","import {getResponsiveSetting} from '../../helpers';\r\nimport {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  sizeStyled,\r\n  shadowControllerToStyles, sliderStyled, colorStyled,\r\n} from \"../../helpers/styles\";\r\n\r\nconst getTabsStyles = (settings, id) => {\r\n  let styles = \"\";\r\n\r\n  let justifyContent, backgroundColor;\r\n  let color, boxShadow, padding, borderType, borderWidth, borderColor, borderRadius, typographic;\r\n  let fill, background, fontSize, marginBottom, marginRight, marginLeft, marginTop;\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-tabs .bp3-tab-list  {`;\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'alignment_tabs');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_tab_style');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tabs .bp3-tab-list:hover {`;\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'alignment_tabs', ':hover');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_tab_style', ':hover');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs .bp3-tab p {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'background_text_color_tab_style');\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs-without-animation.altrp-tabs-horizontal .bp3-tab[aria-selected=\"true\"] {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'indicator_color');\r\n  }\r\n\r\n  if (color) {\r\n    if (color) {\r\n      if (color.color) {\r\n        styles += `box-shadow: inset 0 -3px 0 ${color.color};`;\r\n      }\r\n    }\r\n  }\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs-without-animation.altrp-tabs-vertical .bp3-tab[aria-selected=\"true\"] {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'indicator_color');\r\n  }\r\n\r\n  if (color) {\r\n    if (color) {\r\n      if (color.color) {\r\n        styles += colorStyled(color, \"background-color\");\r\n      }\r\n    }\r\n  }\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs .bp3-tab.active p {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'background_text_color_tab_style', \".active\");\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs  .bp3-tab.bp3-tab.bp3-tab {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_type_tab_style');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'box_shadow_tab_style');\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_tab_style');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_tab_style');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_tab_style');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_tab_style');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_tab_style');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_tab_style');\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tabs  .bp3-tab.bp3-tab.bp3-tab.active {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_type_tab_style', \".active\");\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'box_shadow_tab_style', \".active\");\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_tab_style', \".active\");\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_tab_style', \".active\");\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_tab_style', \".active\");\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_tab_style', \".active\");\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_tab_style', \".active\");\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_tab_style', \".active\");\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs  .bp3-tab:hover p {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'background_text_color_tab_style', \":hover\");\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs .bp3-tab.bp3-tab.bp3-tab:hover {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_type_tab_style', ':hover');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'box_shadow_tab_style', ':hover');\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_tab_style', ':hover');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_tab_style', ':hover');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_tab_style', ':hover');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_tab_style', ':hover');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_tab_style', ':hover');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_tab_style', ':hover');\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-content {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_content_style');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_content_style');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_content_style');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_content_style');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_content_style');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_content_style');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += simplePropertyStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-content:hover {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_content_style', ':hover');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_content_style', ':hover');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_content_style', ':hover');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_content_style', ':hover');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_content_style', ':hover');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_content_style', ':hover');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += simplePropertyStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-content div {`;\r\n\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'text_color_content_style');\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_content_style');\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-content div:hover {`;\r\n\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'text_color_content_style', ':hover');\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_content_style', ':hover');\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  const i_size = getResponsiveSetting(settings, 'i_size')\r\n  if(i_size){\r\n    styles += `${parentClass} .altrp-tab-btn-icon img, ${parentClass} .altrp-tab-btn-icon svg{`;\r\n\r\n    styles += `width:${sliderStyled(i_size)};height:${sliderStyled(i_size)};`\r\n\r\n    styles += \"} \";\r\n\r\n  }\r\n  styles += `${parentClass} .altrp-tab-btn-icon svg path {`;\r\n\r\n  //Получаем значения fill из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    fill = getResponsiveSetting(settings, 'color_icon_style');\r\n  }\r\n\r\n  if (fill) {\r\n    styles += colorPropertyStyled(fill, 'fill');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-icon:hover svg path {`;\r\n\r\n  //Получаем значения fill из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    fill = getResponsiveSetting(settings, 'color_icon_style', ':hover');\r\n  }\r\n\r\n  if (fill) {\r\n    styles += colorPropertyStyled(fill, 'fill');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-column {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_column_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-right');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-column:hover {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_column_tabs', ':hover');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-right');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-row {`;\r\n\r\n  //Получаем значения margin-bottom в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginBottom = getResponsiveSetting(settings, 'spacing_column_tabs');\r\n  }\r\n\r\n  if (marginBottom) {\r\n    styles += sizeStyled(marginBottom, 'margin-bottom');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-row:hover {`;\r\n\r\n  //Получаем значения margin-bottom в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginBottom = getResponsiveSetting(settings, 'spacing_column_tabs', ':hover');\r\n  }\r\n\r\n  if (marginBottom) {\r\n    styles += sizeStyled(marginBottom, 'margin-bottom');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-vertical.bp3-tab-panel {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_content_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-left');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-tab-vertical.bp3-tab {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_column_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-bottom');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-tab-horizontal.bp3-tab-panel {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_content_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-top');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-tab-horizontal.bp3-tab {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_column_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-right');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .bp3-tab-indicator-wrapper {`;\r\n\r\n  styles += `} `;\r\n\r\n\r\n  styles += `${parentClass} .bp3-tab-indicator.bp3-tab-indicator.bp3-tab-indicator.bp3-tab-indicator {`;\r\n\r\n  let indicatorColor = getResponsiveSetting(settings, 'indicator_color')\r\n\r\n  if (indicatorColor && indicatorColor.color) {\r\n    styles += colorPropertyStyled(indicatorColor, \"background-color\",);\r\n  }\r\n  styles += `} `;\r\n\r\n  if (indicatorColor && indicatorColor.color) {\r\n    styles += `${parentClass} .altrp-tabs-horizontal .bp3-tab-indicator-wrapper ~ .altrp-tab-btn.active {`;\r\n    styles += `box-shadow: inset 0 -3px ${indicatorColor.color};`\r\n    styles += `} `;\r\n  }\r\n  styles += `${parentClass} .altrp-tab {`;\r\n\r\n  let contentBackgroundColor,\r\n    contentPadding,\r\n    contentBorderType,\r\n    contentBorderWidth,\r\n    contentBorderColor,\r\n    contentBorderRadius;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBackgroundColor = getResponsiveSetting(settings, 'background_content_style');\r\n  }\r\n\r\n  if (contentBackgroundColor) {\r\n    styles += colorPropertyStyled(contentBackgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentPadding = getResponsiveSetting(settings, 'padding_content_style');\r\n  }\r\n\r\n  if (contentPadding) {\r\n    styles += dimensionsControllerToStyles(contentPadding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBorderType = getResponsiveSetting(settings, 'border_type_content_style');\r\n  }\r\n\r\n  if (contentBorderType) {\r\n    styles += simplePropertyStyled(contentBorderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBorderWidth = getResponsiveSetting(settings, 'border_width_content_style');\r\n  }\r\n\r\n  if (contentBorderWidth) {\r\n    styles += borderWidthStyled(contentBorderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBorderColor = getResponsiveSetting(settings, 'border_color_content_style');\r\n  }\r\n\r\n  if (contentBorderColor) {\r\n    styles += colorPropertyStyled(contentBorderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBorderRadius = getResponsiveSetting(settings, 'border_radius_content_style');\r\n  }\r\n\r\n  if (contentBorderRadius) {\r\n    styles += `border-radius:${sliderStyled(contentBorderRadius)}`;\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}\r\n\r\nexport default getTabsStyles;\r\n","import {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  borderRadiusStyled,\r\n  columnGapStyled,\r\n  opacityStyled,\r\n  sliderStyled,\r\n  shadowControllerToStyles,\r\n  textShadowControllerToStyles,\r\n  dimensionsStyled,\r\n} from '../../helpers/styles';\r\nimport { getResponsiveSetting } from '../../helpers';\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Text в строку css для вставки в GlobalStyles\r\n * @param {{}} settings\r\n * @param {string} id\r\n * @return {string}\r\n */\r\n\r\nexport function getTextStyles(settings, id) {\r\n  let styles = '';\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-text {`;\r\n\r\n  const columnCount = getResponsiveSetting(settings, 'text_style_column-count');\r\n\r\n  if (columnCount) {\r\n    styles += simplePropertyStyled(columnCount, 'column-count');\r\n  }\r\n\r\n  const columnGap = getResponsiveSetting(settings, 'text_style_column-gap');\r\n\r\n  if (columnGap) {\r\n    styles += columnGapStyled(columnGap);\r\n  }\r\n\r\n  const padding = getResponsiveSetting(settings, 'text_style_position_padding');\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  const margin = getResponsiveSetting(settings, 'text_style_position_margin');\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  const zIndex = getResponsiveSetting(settings, 'text_position_z_index');\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  const backgroundColor = getResponsiveSetting(settings, 'text_style_background_color');\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  const opacity = getResponsiveSetting(settings, 'text_style_background_opacity');\r\n\r\n  if (opacity) {\r\n    styles += opacityStyled(opacity, 'opacity');\r\n  }\r\n\r\n  const typographic = getResponsiveSetting(settings, 'text_style_font_typographic');\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  const color = getResponsiveSetting(settings, 'text_style_font_color');\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  const borderStyle = getResponsiveSetting(settings, 'text_style_border_type');\r\n\r\n  if (borderStyle) {\r\n    styles += simplePropertyStyled(borderStyle, 'border-style');\r\n  }\r\n\r\n  const borderWidth = getResponsiveSetting(settings, 'text_style_border_width');\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  const borderColor = getResponsiveSetting(settings, 'text_style_border_color');\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  const borderRadius = getResponsiveSetting(settings, 'text_style_border_radius');\r\n\r\n  if (borderRadius) {\r\n    styles += borderRadiusStyled(borderRadius);\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n\r\n  styles+=`${parentClass} .altrp-text p {`\r\n\r\n  const paragraphMargin = getResponsiveSetting(settings, 'text_paragraph_margin');\r\n\r\n  if (paragraphMargin) {\r\n    styles += dimensionsControllerToStyles(paragraphMargin, 'margin');\r\n  }\r\n\r\n  const textIndent = getResponsiveSetting(settings,\"text_paragraph_indent\");\r\n\r\n  if (textIndent){\r\n    styles+=`text-indent:${sliderStyled(textIndent)};`;\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles+=`${parentClass} .altrp-text blockquote {`\r\n\r\n  const blockquoteMargin = getResponsiveSetting(settings, 'text_blockquote_margin');\r\n\r\n  if (blockquoteMargin) {\r\n    styles += dimensionsControllerToStyles(blockquoteMargin, 'margin');\r\n  }\r\n\r\n  const blockquotePadding = getResponsiveSetting(settings, 'text_blockquote_padding');\r\n\r\n  if (blockquotePadding) {\r\n    styles += dimensionsControllerToStyles(blockquotePadding, 'padding');\r\n  }\r\n\r\n  const blockquoteBackgroundColor = getResponsiveSetting(settings, 'text_blockquote_background_color');\r\n\r\n  if (blockquoteBackgroundColor) {\r\n    styles += colorPropertyStyled(blockquoteBackgroundColor, 'background-color');\r\n  }\r\n\r\n  const blockquoteBorderStyle = getResponsiveSetting(settings, 'text_blockquote_border_type');\r\n\r\n  if (blockquoteBorderStyle) {\r\n    styles += simplePropertyStyled(blockquoteBorderStyle, 'border-style');\r\n  }\r\n\r\n  const blockquoteBorderWidth = getResponsiveSetting(settings, 'text_blockquote_border_width');\r\n\r\n  if (blockquoteBorderWidth) {\r\n    styles += borderWidthStyled(blockquoteBorderWidth);\r\n  }\r\n\r\n  const blockquoteBorderColor = getResponsiveSetting(settings, 'text_blockquote_border_color');\r\n\r\n  if (blockquoteBorderColor) {\r\n    styles += colorPropertyStyled(blockquoteBorderColor, 'border-color');\r\n  }\r\n\r\n  const blockquoteBorderRadius = getResponsiveSetting(settings, 'text_blockquote_border_radius');\r\n\r\n  if (blockquoteBorderRadius) {\r\n    styles += borderRadiusStyled(blockquoteBorderRadius);\r\n  }\r\n\r\n  const blockquoteBoxShadow = getResponsiveSetting(\r\n    settings,\r\n    \"text_blockquote_box_shadow\"\r\n  );\r\n\r\n  if (blockquoteBoxShadow) {\r\n    styles += shadowControllerToStyles(blockquoteBoxShadow);\r\n  }\r\n\r\n  const blockquoteTypographic = getResponsiveSetting(settings, 'text_blockquote_font_typographic');\r\n\r\n  if (blockquoteTypographic) {\r\n    styles += typographicControllerToStyles(blockquoteTypographic);\r\n  }\r\n\r\n\r\n  const blockquoteTextShadow = getResponsiveSetting(\r\n    settings,\r\n    \"text_blockquote_text_shadow\"\r\n  );\r\n\r\n  if (blockquoteTextShadow) {\r\n    styles += textShadowControllerToStyles(blockquoteTextShadow);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-text table {`\r\n\r\n  const tableMargin = getResponsiveSetting(settings, 'text_table_margin');\r\n\r\n  if (tableMargin) {\r\n    styles += dimensionsControllerToStyles(tableMargin, 'margin');\r\n  }\r\n\r\n  const tableBackgroundColor = getResponsiveSetting(settings, 'text_table_background_color');\r\n\r\n  if (tableBackgroundColor) {\r\n    styles += colorPropertyStyled(tableBackgroundColor, 'background-color');\r\n  }\r\n\r\n  const tableBorderStyle = getResponsiveSetting(settings, 'text_table_border_type');\r\n\r\n  if (tableBorderStyle) {\r\n    styles += simplePropertyStyled(tableBorderStyle, 'border-style',\"!important\");\r\n  }\r\n\r\n  const tableBorderWidth = getResponsiveSetting(settings, 'text_table_border_width');\r\n\r\n  if (tableBorderWidth) {\r\n    styles += borderWidthStyled(tableBorderWidth,\"!important\");\r\n  }\r\n\r\n  const tableBorderColor = getResponsiveSetting(settings, 'text_table_border_color');\r\n\r\n  if (tableBorderColor) {\r\n    styles += colorPropertyStyled(tableBorderColor, 'border-color',\"!important\");\r\n  }\r\n\r\n  // const tableBorderRadius = getResponsiveSetting(settings, 'text_table_border_radius');\r\n\r\n  // if (tableBorderRadius) {\r\n  //   styles += borderRadiusStyled(tableBorderRadius);\r\n  // }\r\n\r\n  const tableOddRowsColor = getResponsiveSetting(settings,\"text_table_odd_rows_color\");\r\n\r\n  if(tableOddRowsColor){\r\n    styles+=`tr:nth-child(odd) {${colorPropertyStyled(tableOddRowsColor,\"background\")}}`\r\n  }\r\n\r\n  styles+= \"th,td {\";\r\n\r\n  const tableCellsPadding = getResponsiveSetting(settings, 'text_table_padding');\r\n\r\n  if (tableCellsPadding) {\r\n    styles += dimensionsStyled(tableCellsPadding, 'padding',\"!important\");\r\n  }\r\n\r\n  const tableCellsBorderStyle = getResponsiveSetting(settings, 'text_table_cells_border_type');\r\n\r\n  if (tableCellsBorderStyle) {\r\n    styles += simplePropertyStyled(tableCellsBorderStyle, 'border-style',\"!important\");\r\n  }\r\n\r\n  const tableCellsBorderWidth = getResponsiveSetting(settings, 'text_table_cells_border_width');\r\n\r\n  if (tableCellsBorderWidth) {\r\n    styles += borderWidthStyled(tableCellsBorderWidth,\"!important\");\r\n  }\r\n\r\n  const tableCellsBorderColor = getResponsiveSetting(settings, 'text_table_cells_border_color');\r\n\r\n  if (tableCellsBorderColor) {\r\n    styles += colorPropertyStyled(tableCellsBorderColor, 'border-color',\"!important\");\r\n  }\r\n\r\n  // const tableCellsBorderRadius = getResponsiveSetting(settings, 'text_table_cells_border_radius');\r\n\r\n  // if (tableCellsBorderRadius) {\r\n  //   styles += borderRadiusStyled(tableCellsBorderRadius);\r\n  // }\r\n\r\n  const tableCellsTypographic = getResponsiveSetting(settings, 'text_table_cells_font_typographic');\r\n\r\n  if (tableCellsTypographic) {\r\n    styles += typographicControllerToStyles(tableCellsTypographic);\r\n  }\r\n\r\n\r\n  const tableCellsTextShadow = getResponsiveSetting(\r\n    settings,\r\n    \"text_table_cells_text_shadow\"\r\n  );\r\n\r\n  if (tableCellsTextShadow) {\r\n    styles += textShadowControllerToStyles(tableCellsTextShadow);\r\n  }\r\n\r\n  styles+=\"}\"\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-text a {`;\r\n\r\n  const linkTypographic = getResponsiveSetting(settings, 'text_link_font_typographic');\r\n\r\n  if (linkTypographic) {\r\n    styles += typographicControllerToStyles(linkTypographic);\r\n  }\r\n\r\n  const linkTextShadow = getResponsiveSetting(\r\n    settings,\r\n    \"text_link_text_shadow\"\r\n  );\r\n\r\n  if (linkTextShadow) {\r\n    styles += textShadowControllerToStyles(linkTextShadow);\r\n  }\r\n  //\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-text ol {`;\r\n\r\n  const numberedListMargin = getResponsiveSetting(settings, 'text_numbered_list_margin');\r\n\r\n  if (numberedListMargin) {\r\n    styles += dimensionsControllerToStyles(numberedListMargin, 'margin');\r\n  }\r\n\r\n  const numberedListItemMargin = getResponsiveSetting(settings, 'text_numbered_list_item_margin');\r\n\r\n  if (numberedListItemMargin) {\r\n    styles += `li{ ${dimensionsControllerToStyles(numberedListItemMargin, 'margin')}}`;\r\n  }\r\n\r\n  const numberedListStyle = getResponsiveSetting(settings, 'text_numbered_list_style_type');\r\n\r\n  if (numberedListStyle) {\r\n    styles += simplePropertyStyled(numberedListStyle, 'list-style-type');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-text ul {`;\r\n\r\n  const unorderedListMargin = getResponsiveSetting(settings, 'text_unordered_list_margin');\r\n\r\n  if (unorderedListMargin) {\r\n    styles += dimensionsControllerToStyles(unorderedListMargin, 'margin');\r\n  }\r\n\r\n  const unorderedListItemMargin = getResponsiveSetting(settings, 'text_unordered_list_item_margin');\r\n\r\n  if (unorderedListItemMargin) {\r\n    styles += `li{ ${dimensionsControllerToStyles(unorderedListItemMargin, 'margin')}}`;\r\n  }\r\n\r\n  const unorderedListStyle = getResponsiveSetting(settings, 'text_unordered_list_style_type');\r\n\r\n  if (unorderedListStyle) {\r\n    styles += simplePropertyStyled(unorderedListStyle, 'list-style-type');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-text img {`;\r\n\r\n  styles += `max-width: 100%; `\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .ck.ck-editor__editable_inline {`;\r\n\r\n  styles += `padding: 0; `\r\n\r\n  styles += `} `;\r\n\r\n\r\n  return styles;\r\n}\r\n","const FRONT_DEFAULT_AREAS = [\r\n  'content', 'footer', 'header', 'popups',\r\n];\r\nexport default  function getRouteStyles(areas){\r\n  if(! areas || !_.isArray(areas)){\r\n    return '';\r\n  }\r\n  let styles = `\r\n.route-content {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n}`\r\n\r\n  areas = areas.filter(area=>FRONT_DEFAULT_AREAS.indexOf(area.id) === -1)\r\n  if(! areas.length){\r\n    return styles;\r\n  }\r\n  styles += `.route-content.route-content{`;\r\n\r\n  styles += 'display:grid;grid-template-rows:auto 1fr auto;'\r\n  let columnsGrid = '';\r\n  let rightSidebar = areas.find(area=>area.settings.area_type === 'sidebar'\r\n    && area.settings.sidebar_location === 'right');\r\n  let leftSidebar = areas.find(area=>area.settings.area_type === 'sidebar'\r\n    && area.settings.sidebar_location === 'left');\r\n  columnsGrid += leftSidebar ? `${leftSidebar.settings.sidebar_width}` : '0px';\r\n  columnsGrid += ` calc(100% - ${leftSidebar ? `${leftSidebar.settings.sidebar_width}` : '0px'} - ${rightSidebar ? `${rightSidebar.settings.sidebar_width}` : '0px'}) `;\r\n  columnsGrid += rightSidebar ? `${rightSidebar.settings.sidebar_width}` : '0px';\r\n\r\n  let contentRow = '';\r\n  contentRow = leftSidebar ? `left-sidebar content` : `content content`;\r\n  contentRow += rightSidebar ? ` right-sidebar` : ` content`;\r\n\r\n  styles += `grid-template-columns:${columnsGrid};grid-template-areas:\r\n    '${_.get(leftSidebar, 'settings.sidebar_type') === 'app_sidebar' ? 'left-sidebar' : 'header'} header ${_.get(rightSidebar, 'settings.sidebar_type') === 'app_sidebar' ? 'right-sidebar' : 'header'}'\r\n    '${contentRow}'\r\n    '${_.get(leftSidebar, 'settings.sidebar_type') === 'app_sidebar' ? 'left-sidebar' : 'footer'} footer ${_.get(rightSidebar, 'settings.sidebar_type') === 'app_sidebar' ? 'right-sidebar' :'footer'}';\r\n    `\r\n\r\n  styles += '}'\r\n  styles += '& .app-area_sidebar-location-left{grid-area:left-sidebar;overflow:hidden;}'\r\n  styles += '& .app-area_sidebar-location-right{grid-area:right-sidebar;overflow:hidden;}'\r\n  styles += '& .app-area_header{grid-area:header;}'\r\n  styles += '& .app-area_footer{grid-area:footer;}'\r\n  styles += '& .app-area_content{grid-area:content;}'\r\n  styles += '& .altrp-section.altrp-section--full-width,& .altrp-section.altrp-section--boxed{max-width:100%;} & .sections-wrapper{max-width: 100%;width: 100%;}'\r\n  if(rightSidebar){\r\n    styles += rightSidebar.getCustomCSS();\r\n    if(rightSidebar.getSetting('sidebar_fixed')){\r\n      styles += `& .app-area_sidebar-location-right .sections-wrapper.sections-wrapper.sections-wrapper{overflow:hidden;position:fixed;top:0;right:0;width:${rightSidebar.getSetting('sidebar_width', '0px')};}`\r\n    }\r\n  }\r\n  if(leftSidebar){\r\n    styles += leftSidebar.getCustomCSS();\r\n    if(leftSidebar.getSetting('sidebar_fixed')){\r\n      styles += `& .app-area_sidebar-location-left .sections-wrapper.sections-wrapper.sections-wrapper{overflow:hidden;position:fixed;top:0;left:0;width:${leftSidebar.getSetting('sidebar_width', '0px')};}`\r\n    }\r\n  }\r\n  styles += `.app-area > .sections-wrapper.sections-wrapper{width:100%;}`\r\n  return  styles;\r\n}\r\n"],"sourceRoot":""}