{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./resources/modules/editor/src/js/components/widgets/InputRangeSliderWidget.js","webpack:///./resources/modules/editor/src/js/helpers/number-with-spaces.js","webpack:///./resources/modules/front-app/src/js/store/forms-data-storage/actions.js"],"names":["_assertThisInitialized","self","ReferenceError","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","_possibleConstructorReturn","call","_setPrototypeOf","p","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","_typeof","Symbol","iterator","isEditor","window","altrpHelpers","Slider","altrpLibs","Blueprint","RangeSlider","globalDefaults","push","SliderWrapper","styled","div","props","styles","handleSize","size","max","toFixed","InputRangeSliderWidget","dispatchFieldValueToStore","index","userInput","formId","element","getFormId","fieldName","getFieldId","indexOf","replaceContentWithData","_","isObject","appStore","dispatch","changeFormFieldValue","change_actions","getSettings","actionsManager","default","callAllWidgetActions","getIdForAction","getValue","valueStart","valueEnd","formIdStart","fieldNameStart","formIdEnd","fieldNameEnd","state","get","getState","formsStore","getResponsiveSetting","map","Number","step","min","settings","component","elementDecorator","baseRender","render","onChange","bind","label","prevProps","prevState","prevStep","this","setState","s","values","decimalPlace","Math","abs","forEach","idx","isInteger","custom","thousandsSeparator","thousandsSeparatorValue","decimalSeparator","toString","replace","numberWithSpaces","labelStepSize","vertical","isNaN","className","stepSize","labelPrecision","labelRenderer","Component","x","parts","split","join","CHANGE_FORM_FIELD_VALUE","CLEAR_FORM_FIELD_VALUE","type","changedField"],"mappings":"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","file":"InputRangeSliderWidget.56d5aa1b2ec09a26d769.bundle.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import {changeFormFieldValue} from \"../../../../../front-app/src/js/store/forms-data-storage/actions\";\r\nimport numberWithSpaces from \"../../helpers/number-with-spaces\";\r\nconst {isEditor} = window.altrpHelpers;\r\n\r\nconst Slider = window.altrpLibs.Blueprint.RangeSlider;\r\n\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n.bp3-slider-label{\r\n    white-space: nowrap;\r\n}\r\n.bp3-slider-handle{\r\n    z-index: 2;\r\n}\r\n.bp3-slider-label{\r\n    z-index: 1;\r\n}\r\n`);\r\n\r\nconst SliderWrapper = styled.div`\r\n  .altrp-field-slider .bp3-slider-handle {\r\n    background-image: none;\r\n  }\r\n\r\n  ${(props) => {\r\n    let styles = \"\";\r\n\r\n    if(props.handleSize) {\r\n      if(props.handleSize.size) {\r\n        styles += `\r\n        &.altrp-field-slider-horizontal .bp3-slider-handle.bp3-start {\r\n          left: calc(${(props.value[0]/props.max*100).toFixed(2)}% - 8px) !important;\r\n        }\r\n\r\n        &.altrp-field-slider-horizontal .bp3-slider-handle.bp3-end {\r\n          left: calc(${(props.value[1]/props.max*100).toFixed(2)}% - 8px) !important;\r\n        }\r\n\r\n        &.altrp-field-slider-vertical .bp3-slider-handle.bp3-start {\r\n          bottom: calc(${(props.value[0]/props.max*100).toFixed(2)}% - ${props.handleSize.size - 4}px) !important;\r\n        }\r\n\r\n        &.altrp-field-slider-vertical .bp3-slider-handle.bp3-end {\r\n          bottom: calc(${(props.value[1 ]/props.max*100).toFixed(2)}% - ${props.handleSize.size - 4}px) !important;\r\n        }\r\n        `\r\n      }\r\n    }\r\n\r\n    return styles\r\n  }}\r\n`;\r\n\r\nclass InputRangeSliderWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let step = props.element.getResponsiveSetting(\"step\", \"\", null);\r\n    const min = props.element.getResponsiveSetting(\"min\", \"\", 0);\r\n    const max = props.element.getResponsiveSetting(\"max\", \"\", 100);\r\n\r\n    if(step) {\r\n      step = (max - min) / step;\r\n    }\r\n\r\n    this.state = {\r\n      settings: props.element.getSettings(),\r\n      value: [\r\n        min,\r\n        max\r\n      ],\r\n      step: step || 1,\r\n    };\r\n\r\n    props.element.component = this;\r\n\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    if(props.baseRender){\r\n      this.render = props.baseRender(this);\r\n    }\r\n    this.onChange = this.onChange.bind(this);\r\n    this.label = this.label.bind(this);\r\n  }\r\n\r\n  _componentDidUpdate(prevProps, prevState) {\r\n    const prevStep = prevState.step\r\n    let step = this.props.element.getResponsiveSetting(\"step\", \"\", null);\r\n    const min = this.props.element.getResponsiveSetting(\"min\", \"\", 0);\r\n    const max = this.props.element.getResponsiveSetting(\"max\", \"\", 100);\r\n\r\n    if(step && step < max) {\r\n      step = (max - min) / step;\r\n    }\r\n\r\n    if(step !== prevStep) {\r\n      this.setState((s) => ({...s,\r\n        step,\r\n        value: [\r\n          this.props.element.getResponsiveSetting(\"initial\", \"\", 0),\r\n          this.props.element.getResponsiveSetting(\"initial_second\", \"\", 0)\r\n        ]\r\n      }))\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Передадим значение в хранилище формы\r\n   * @param {*} value\r\n   * @param index\r\n   * @param {boolean} userInput true - имзенилось пользователем\r\n   */\r\n  dispatchFieldValueToStore = async (value, index, userInput = false) => {\r\n\r\n    let formId;\r\n    let fieldName;\r\n\r\n    if(index === 0) {\r\n      formId = this.props.element.getFormId(\"form_id_start\");\r\n      fieldName = this.props.element.getFieldId(\"field_id_start\");\r\n    } else if(index === 1) {\r\n      formId = this.props.element.getFormId(\"form_id_end\");\r\n      fieldName = this.props.element.getFieldId(\"field_id_end\");\r\n    }\r\n    if (fieldName.indexOf(\"{{\") !== -1) {\r\n      fieldName = replaceContentWithData(fieldName);\r\n    }\r\n    if (_.isObject(this.props.appStore) && fieldName && formId) {\r\n      this.props.appStore.dispatch(\r\n        changeFormFieldValue(fieldName, value, formId, userInput)\r\n      );\r\n      if (userInput) {\r\n        const change_actions = this.props.element.getSettings(\"change_actions\");\r\n\r\n        if (change_actions && !isEditor()) {\r\n          const actionsManager = (\r\n            await import(\r\n              /* webpackChunkName: 'ActionsManager' */\r\n              \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n              )\r\n          ).default;\r\n          await actionsManager.callAllWidgetActions(\r\n            this.props.element.getIdForAction(),\r\n            \"change\",\r\n            change_actions,\r\n            this.props.element\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getValue = () => {\r\n    let value;\r\n    let formIdStart = this.props.element.getFormId(\"form_id_start\");\r\n    let fieldNameStart = this.props.element.getFieldId(\"field_id_start\");\r\n    let formIdEnd = this.props.element.getFormId(\"form_id_end\");\r\n    let fieldNameEnd = this.props.element.getFieldId(\"field_id_end\");\r\n\r\n    if (isEditor()) {\r\n      value = this.state.value;\r\n    } else {\r\n      let valueStart\r\n\r\n      valueStart = _.get(appStore.getState().formsStore, `${formIdStart}`, '')\r\n      valueStart = _.get(valueStart, fieldNameStart, '')\r\n      let valueEnd\r\n\r\n      valueEnd = _.get(appStore.getState().formsStore, `${formIdEnd}`, '')\r\n      valueEnd = _.get(valueEnd, fieldNameEnd, '')\r\n\r\n      value = [\r\n        valueStart,\r\n        valueEnd\r\n      ];\r\n    }\r\n\r\n    if(!value[0] && !value[1]) {\r\n      return [\r\n        this.props.element.getResponsiveSetting('min', \"\", 0),\r\n        this.props.element.getResponsiveSetting('max', \"\", 100),\r\n      ]\r\n    }\r\n\r\n    if(!value[0]) {\r\n      value[0] = this.props.element.getResponsiveSetting('min', \"\", 0);\r\n    }\r\n\r\n    if(!value[1]) {\r\n      value[1] = this.props.element.getResponsiveSetting('max', \"\", 100);\r\n    }\r\n    value = value.map((value)=>(Number(value) || 0))\r\n    return value\r\n  }\r\n\r\n  onChange(values) {\r\n    let decimalPlace = this.props.element.getResponsiveSetting(\"decimal_place\", \"\", null);\r\n    decimalPlace = Math.abs(decimalPlace);\r\n\r\n    values.forEach((value, idx) => {\r\n      if(!Number.isInteger(value)) {\r\n        values[idx] = value\r\n          .toFixed(decimalPlace)\r\n      }\r\n    });\r\n\r\n    if(isEditor()){\r\n      this.setState((s) => ({...s, value: values}))\r\n    } else {\r\n      this.dispatchFieldValueToStore(values[0], 0, true)\r\n      this.dispatchFieldValueToStore(values[1], 1, true)\r\n    }\r\n  }\r\n\r\n  label(value) {\r\n    let decimalPlace = this.props.element.getResponsiveSetting(\"decimal_place\", \"\", null);\r\n    const custom = this.props.element.getResponsiveSetting(\"custom_label\", \"\", \"{n}\");\r\n    const thousandsSeparator = this.props.element.getResponsiveSetting(\"thousands_separator\", \"\", false);\r\n    let thousandsSeparatorValue = this.props.element.getResponsiveSetting(\"thousands_separator_value\", \"\", \" \");\r\n    const decimalSeparator = this.props.element.getResponsiveSetting(\"decimal_separator\");\r\n    value = Number(value)\r\n\r\n    if(!Number.isInteger(value) && decimalPlace) {\r\n      decimalPlace = Math.abs(decimalPlace);\r\n      value = value\r\n        .toFixed(decimalPlace)\r\n    }\r\n\r\n    if(!Number.isInteger(value) && decimalSeparator) {\r\n      value = value.toString().replace(\".\", decimalSeparator)\r\n    }\r\n\r\n    if(thousandsSeparator) {\r\n      if( ! thousandsSeparatorValue){\r\n        thousandsSeparatorValue = ' '\r\n      }\r\n      value = numberWithSpaces(value, thousandsSeparatorValue);\r\n    }\r\n\r\n\r\n    return custom\r\n      .toString()\r\n      .replace(/{n}/, value)\r\n  }\r\n\r\n  render() {\r\n    const min = this.props.element.getResponsiveSetting(\"min\", \"\", 0);\r\n    const max = this.props.element.getResponsiveSetting(\"max\", \"\", 100);\r\n    // const step = this.props.element.getResponsiveSetting(\"step\", \"\", 1);\r\n    const labelStepSize = this.props.element.getResponsiveSetting(\"label_step\", \"\", 25);\r\n    const decimalPlace = this.props.element.getResponsiveSetting(\"decimal_place\", \"\", null);\r\n    const vertical = this.props.element.getResponsiveSetting(\"vertical\", \"\", false);\r\n    const handleSize = this.props.element.getResponsiveSetting(\"handle_size\", \"\", null);\r\n    let step = this.props.element.getResponsiveSetting(\"step\", \"\", 1);\r\n\r\n    let value = this.getValue();\r\n\r\n    if(Number.isNaN(value[0])){\r\n      value[0] = Number(min)\r\n    }\r\n\r\n    if(Number.isNaN(value[1])) {\r\n      value[1] = Number(max);\r\n    }\r\n\r\n    return (\r\n      <SliderWrapper\r\n        value={this.state.value}\r\n        max={max}\r\n        handleSize={handleSize}\r\n        className={\"altrp-field-slider-wrapper\" + (vertical ? \" altrp-field-slider-vertical\" : \" altrp-field-slider-horizontal\")}\r\n      >\r\n        <Slider\r\n          min={min}\r\n          max={max}\r\n          stepSize={step}\r\n          value={value}\r\n          onChange={this.onChange}\r\n          labelPrecision={decimalPlace}\r\n          labelRenderer={this.label}\r\n          labelStepSize={labelStepSize}\r\n          vertical={vertical}\r\n          className=\"altrp-field-slider\"\r\n        />\r\n      </SliderWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputRangeSliderWidget;\r\n","export default function numberWithSpaces(x, thousandsSeparatorValue = ' ') {\r\n  var parts = x.toString().split(\".\");\r\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousandsSeparatorValue);\r\n  return parts.join(\".\");\r\n}\r\n","export const CHANGE_FORM_FIELD_VALUE = 'CHANGE_FORM_FIELD_VALUE';\r\nexport const CLEAR_FORM_FIELD_VALUE = 'CHANGE_FORM_FIELD_VALUE';\r\n\r\n/**\r\n * Получает данные поля формы и сохраняет в хранилище\r\n * @param {string}fieldName\r\n * @param {*}value\r\n * @param {string}formId\r\n * @param {boolean}userInput\r\n * @return {{type: string, fieldName: *, value: *, formId: *}}\r\n */\r\nexport function changeFormFieldValue(fieldName, value, formId, userInput) {\r\n\r\n  return {\r\n    type: CHANGE_FORM_FIELD_VALUE,\r\n    fieldName,\r\n    value,\r\n    formId,\r\n    changedField: userInput ? `${formId}.${fieldName}` : null,\r\n  };\r\n}\r\n/**\r\n * Очистить данные поля формы и сохраняет в хранилище\r\n * @param {string | null}formId\r\n * @return {{type: string, fieldName: *, value: *, formId: *}}\r\n */\r\nexport function clearFormStorage(formId = null) {\r\n  return {\r\n    type: CLEAR_FORM_FIELD_VALUE,\r\n    formId,\r\n  };\r\n}\r\n\r\n"],"sourceRoot":""}