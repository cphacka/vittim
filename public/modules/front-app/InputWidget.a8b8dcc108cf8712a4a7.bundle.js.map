{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./resources/modules/admin/src/components/altrp-select/AltrpSelect.js","webpack:///./resources/modules/editor/src/js/components/altrp-image-select/AltrpImageSelect.js","webpack:///./resources/modules/editor/src/js/components/ckeditor/Plugins/UploadAdapterPlugin.js","webpack:///./resources/modules/editor/src/js/components/ckeditor/CKeditor.js","webpack:///./resources/modules/editor/src/js/components/widgets/InputWidget.js","webpack:///./node_modules/react-select/async/dist/react-select.browser.esm.js"],"names":["_assertThisInitialized","self","ReferenceError","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_setPrototypeOf","o","p","setPrototypeOf","__proto__","renderScrollbar","props","autoHeight","children","AltrpSelect","loadOptions","searchString","callback","options","optionsResource","search","setState","state","optionsRoute","Resource","route","selectRef","React","customStyles","control","base","boxShadow","borderColor","isFocused","menuPortal","zIndex","selectProps","onChange","this","placeholder","noOptionsMessage","styles","menuPortalTarget","document","body","menuPlacement","menuPosition","onKeyDown","components","MenusList","captureMenuScroll","isDisabled","ref","_","assign","isArray","map","item","_i","label","isString","isNumber","isObject","forEach","option","find","Component","AltrpImageSelect","changeHandler","isMultiple","className","id","includes","onClick","filter","image","src","url","width","UploadAdapter","loader","resource","Promise","resolve","reject","file","then","result","postFiles","response","default","UploadAdapterPlugin","editor","plugins","get","createUploadAdapter","defaultToolbar","window","EditorFrame","contentWindow","config","extraPlugins","toolbar","textWidget","CKEditor","InlineEditor","disabled","readOnly","data","text","onReady","isEnabled","event","changeText","getData","onBlur","moment","altrpHelpers","globalDefaults","push","AltrpFieldContainer","styled","div","settings","content_label_position_type","InputWidget","timeInput","handleEnter","e","keyCode","preventDefault","inputs","Array","from","querySelectorAll","index","indexOf","target","undefined","focus","element","getSettings","create_allowed","create_label","create_url","createItem","debounceDispatch","debounce","dispatchFieldValueToStore","onFocus","focus_actions","isEditor","actionsManager","callAllWidgetActions","getIdForAction","content_type","userInput","formId","getFormId","fieldName","getFieldId","replaceContentWithData","appStore","dispatch","changeFormFieldValue","change_actions","inputValue","create_data","select2_multiple","currentModel","getCurrentModel","parseParamsFromString","parseURLTemplate","post","res","success","newOption","unshift","selectStateManager","menuIsOpen","console","error","component","elementDecorator","bind","defaultValue","getContent","valueMustArray","parseOptionsFromSettings","paramsForUpdate","altrpSelectRef","createRef","optionsDynamicSetting","getDynamicSetting","convertData","prevProps","prevState","model_for_options","getRoute","getAll","getProperty","contentLoaded","currentDataStorage","content_options","isEqual","dynamic","formsStore","updateOptions","updateValue","content_calculation","altrpforms","prevContext","altrpdata","altrpmodel","altrpuser","currentUser","altrppagestate","altrpPageState","altrpresponses","altrpmeta","altrpMeta","context","currentDataStorageLoaded","changedField","altrpstorage","getDataFromLocalStorage","replace","eval","message","getId","path","formData","AltrpModel","isEmpty","JSON","stringify","getQueried","filters","valueToDispatch","getElementsByName","name","input","checked","_value","trueValue","falseValue","valueReplacement","cloneDeep","timestamp","isDate","Date","getTime","change_change_end","change_change_end_delay","clearTimeout","setTimeout","sortBy","toString","options_sorting","content_readonly","image_select_options","label_icon","classLabel","styleLabel","getResponsiveSetting","marginBottom","label_style_spacing","size","unit","marginTop","marginRight","position","content_label","style","content_required","assetType","renderAssetIcon","autocomplete","content_autocomplete","getOptions","getName","position_css_id","position_css_classes","content_options_nullable","sortOptions","renderSelect2","renderRepeatedInput","renderWysiwyg","autoComplete","content_placeholder","renderAcceptInput","isClearable","content_clearable","unix","isValid","format","log","type","Math","random","substr","formID","inputType","idx","altrpCompare","htmlFor","nulled_option_title","v","_v","valueItem","union","select2Props","classNamePrefix","isOptionSelected","isMulti","SelectComponent","_class","_temp","SelectState","m","S","Async","_Component","Derived","hasNativeReflectConstruct","_super","Reflect","construct","sham","Proxy","prototype","call","_isNativeReflectConstruct","Super","NewTarget","constructor","arguments","apply","_this","select","lastRequest","mounted","optionsCache","handleInputChange","newValue","actionMeta","_this$props","cacheOptions","onInputChange","loadedInputValue","loadedOptions","isLoading","passEmptyOptions","request","defaultOptions","_this2","nextProps","blur","_this3","_this$props2","isLoadingProp","_this$state","_ref","defaultProps","filterOption"],"mappings":"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","file":"InputWidget.a8b8dcc108cf8712a4a7.bundle.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import React, {Component} from \"react\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport Resource from \"../../../../editor/src/js/classes/Resource\";\r\nimport Select from \"react-select\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {parseParamsFromString, parseURLTemplate} from \"../../../../front-app/src/js/helpers\";\r\n\r\nexport const renderScrollbar = (props) => {\r\n  return <Scrollbars autoHeight >{props.children}</Scrollbars>;\r\n};\r\n\r\nclass AltrpSelect extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      options: props.options || [],\r\n    };\r\n    if(props.optionsRoute){\r\n      this.optionsResource = new Resource({route: props.optionsRoute});\r\n    }\r\n    this.selectRef = React.createRef();\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  async componentDidMount(){\r\n\r\n  }\r\n  /**\r\n   * изменение значения\r\n   */\r\n  onChange(){\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  loadOptions = async (searchString, callback)=>{\r\n    let options = [];\r\n    if(this.optionsResource){\r\n      options = await this.optionsResource.search(searchString);\r\n    }\r\n    this.setState(state=>({\r\n      ...state,\r\n      options\r\n    }));\r\n    return callback(options);\r\n  };\r\n\r\n  render(){\r\n    const customStyles = {\r\n      control: (base, state) => ({\r\n        ...base,\r\n        boxShadow: \"none\",\r\n        borderColor: state.isFocused ? \"hsl(0,0%,80%)\" : \"hsl(0,0%,80%)\",\r\n        \"&:hover\": {\r\n          borderColor: \"hsl(0,0%,80%)\"\r\n        }\r\n      }),\r\n      menuPortal: base => ({ ...base, zIndex: 99999 }),\r\n      // option: (provided, state) => ({\r\n      //   ...provided,\r\n      //   backgroundColor: state.isSelected ?\r\n      //     background.selected.color :\r\n      //     state.isFocused ? background.focused.color : background.normal.color\r\n      // })\r\n    };\r\n\r\n    let selectProps = {\r\n      onChange: this.onChange,\r\n      options: this.state.options || [],\r\n      placeholder: this.props.placeholder,\r\n      loadOptions: this.loadOptions,\r\n      noOptionsMessage: this.props.noOptionsMessage || (() => \"not found\"),\r\n      styles: customStyles,\r\n      menuPortalTarget: document.body,\r\n      menuPlacement: 'auto',\r\n      menuPosition: 'absolute',\r\n      onKeyDown : this.onKeyDown,\r\n      components: { MenusList: renderScrollbar },\r\n      captureMenuScroll: false,\r\n      isDisabled: this.state.isDisabled,\r\n      ref: this.selectRef,\r\n    };\r\n\r\n    _.assign(selectProps, this.props);\r\n\r\n    if(_.isArray(selectProps.value)){\r\n      selectProps.value = selectProps.value.map(item => {\r\n        let _i = {\r\n          label: '',\r\n          value: '',\r\n        };\r\n        if(_.isString(item) || _.isNumber(item)){\r\n          _i.value = item;\r\n          _i.label = item;\r\n        } else if(_.isObject(item)) {\r\n          return item;\r\n        }\r\n        if(_.isArray(selectProps.options)){\r\n          selectProps.options.forEach(option=>{\r\n            if(option.value === _i.value){\r\n              _i = {...option,};\r\n            }\r\n          });\r\n        }\r\n        return _i;\r\n      });\r\n    }\r\n    if(selectProps.value && ! _.isObject(selectProps.value)){\r\n      selectProps.value = selectProps.options.find(o=>{\r\n        return o.value == selectProps.value;\r\n      });\r\n    }\r\n    if( this.optionsResource){\r\n      return <AsyncSelect {...selectProps} />\r\n    } else {\r\n      return <Select {...selectProps} />\r\n    }\r\n  }\r\n}\r\n\r\nexport default AltrpSelect\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass AltrpImageSelect extends Component {\r\n  render() {\r\n    const { options, changeHandler, isMultiple, value } = this.props;\r\n\r\n    return <div className=\"altrp-image-select\">\r\n      {options?.map(option => <div key={option.id}\r\n        className={`altrp-field altrp-field-container \r\n          ${(isMultiple && value.includes(option.value) || value === option.value ? \"active\" : \"\")}`}\r\n        onClick={() => changeHandler(isMultiple ?\r\n          value.includes(option.value) ? value.filter(item => item !== option.value) : [...value, option.value] :\r\n          option.value)}\r\n      >\r\n        {option.image && <img src={option.image.url} width={\"100%\"} />}\r\n        <div className=\"altrp-image-select__label\">{option.label}</div>\r\n      </div>)}\r\n    </div>\r\n  }\r\n}\r\nexport default AltrpImageSelect;\r\n","import Resource from \"../../../classes/Resource\";\r\n\r\nclass UploadAdapter {\r\n  constructor(props) {\r\n    this.loader = props;\r\n    this.resource = new Resource({ route: \"/admin/ajax/media\" });\r\n  }\r\n\r\n  upload() {\r\n    return new Promise((resolve, reject) => {\r\n      this.loader.file.then(result => {\r\n        this.resource.postFiles([result]).then(response => {\r\n          resolve({\r\n            default: response[0].url\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param editor\r\n */\r\nexport default function UploadAdapterPlugin(editor) {\r\n  editor.plugins.get(\"FileRepository\").createUploadAdapter = loader => {\r\n    return new UploadAdapter(loader);\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport InlineEditor from \"@ckeditor/ckeditor5-build-inline\";\r\nimport UploadAdapterPlugin from \"./Plugins/UploadAdapterPlugin\";\r\n\r\nconst defaultToolbar = [\r\n  \"heading\",\r\n  \"undo\",\r\n  \"redo\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"blockQuote\",\r\n  \"indent\",\r\n  \"outdent\",\r\n  \"link\",\r\n  \"numberedList\",\r\n  \"bulletedList\",\r\n  \"imageTextAlternative\",\r\n  \"imageUpload\",\r\n  \"mediaEmbed\",\r\n  \"insertTable\",\r\n  \"tableColumn\",\r\n  \"tableRow\",\r\n  \"mergeTableCells\"\r\n];\r\n\r\nclass CKeditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.body = window.EditorFrame ? window.EditorFrame.contentWindow.document.body : document.body;\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const config = {\r\n      extraPlugins: [UploadAdapterPlugin],\r\n      body: this.body,\r\n      toolbar: defaultToolbar\r\n    };\r\n\r\n    if (this.props.textWidget) {\r\n      return (\r\n        <>\r\n          <CKEditor\r\n            config={config}\r\n            body={this.body}\r\n            editor={InlineEditor}\r\n            disabled={!this.props.readOnly}\r\n            data={this.props.text || \"Type text here\"}\r\n            onReady={editor => {\r\n              // You can store the \"editor\" and use when it is needed.\r\n              editor.plugins.get( 'TextTransformation' ).isEnabled = false;\r\n            }}\r\n            onChange={(event, editor) =>\r\n              this.props.changeText(editor.getData())\r\n            }\r\n          />\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <CKEditor\r\n        config={config}\r\n        body={this.body}\r\n        editor={InlineEditor}\r\n        data={this.props.text || \"Type text here\"}\r\n        disabled={this.props.readOnly}\r\n        onReady={editor => {\r\n          editor.plugins.get( 'TextTransformation' ).isEnabled = false;\r\n\r\n        }}\r\n        onChange={(event, editor) => this.props.onChange(event, editor)}\r\n        onBlur={(event, editor) => this.props.onBlur(event, editor)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CKeditor;\r\n","import {\r\n  altrpCompare,\r\n  convertData,\r\n  isEditor,\r\n  parseOptionsFromSettings,\r\n  parseParamsFromString,\r\n  parseURLTemplate,\r\n  replaceContentWithData,\r\n  sortOptions,\r\n  renderAssetIcon,\r\n  valueReplacement,\r\n  getDataFromLocalStorage\r\n} from \"../../../../../front-app/src/js/helpers\";\r\nimport Resource from \"../../classes/Resource\";\r\nimport AltrpSelect from \"../../../../../admin/src/components/altrp-select/AltrpSelect\";\r\nimport { changeFormFieldValue } from \"../../../../../front-app/src/js/store/forms-data-storage/actions\";\r\nimport AltrpModel from \"../../classes/AltrpModel\";\r\nimport CKeditor from \"../ckeditor/CKeditor\";\r\nimport AltrpImageSelect from \"../altrp-image-select/AltrpImageSelect\";\r\nimport AltrpInput from \"../altrp-input/AltrpInput\";\r\nconst {moment} = window.altrpHelpers;\r\n\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n.altrp-field {\r\n  border-style: solid;\r\n  width: 100%;\r\n}\r\n.altrp-field-file{\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.altrp-label-icon svg,\r\n.altrp-label-icon img {\r\n  width: 20px;\r\n}\r\n.altrp-label-icon svg{\r\n  height: 20px;\r\n}\r\n.altrp-field-file__field{\r\n  display: none;\r\n}\r\n.altrp-field-file__placeholder{\r\n  display: none;\r\n}\r\n.altrp-field-file_empty .altrp-field-file__placeholder{\r\n  display: block;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: rgb(52,59,76);\r\n  color: #fff;\r\n}\r\n.input-clear-btn {\r\n  background: transparent;\r\n  padding: 0;\r\n  position: absolute;\r\n  bottom: calc(50% - 7px);\r\n  right: 15px;\r\n  display: none;\r\n}\r\n.input-clear-btn:hover {\r\n  font-weight: bold;\r\n}\r\n.altrp-field:hover + .input-clear-btn, .input-clear-btn:hover {\r\n  display: block;\r\n}\r\n.altrp-input-wrapper, .altrp-field-select2 {\r\n  position: relative;\r\n  flex-grow: 1;\r\n}\r\n.altrp-field-label--required::after {\r\n  content: \"*\";\r\n  color: red;\r\n  font-size: inherit;\r\n  padding-left: 10px;\r\n}\r\n.altrp-field-label {\r\n  font-size: 16px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-field-select2__single-value, .altrp-field {\r\n  font-size: 16px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-field-select2__control, .altrp-field {\r\n  text-align: left;\r\n  padding-top: 2px;\r\n  padding-right: 2px;\r\n  padding-bottom: 2px;\r\n  padding-left: 2px;\r\n  border-width: 1px;\r\n}\r\n.altrp-field-select2__control:hover{\r\n  border-width: 1px;\r\n}\r\n.altrp-field-container {\r\n  margin: 0;\r\n}\r\n.altrp-field::placeholder, .altrp-field-select2__placeholder {\r\n  font-size: 13px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-image-select {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n.altrp-image-select img {\r\n  flex-grow: 1;\r\n  object-fit: contain;\r\n}\r\n.altrp-field {\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n.altrp-field.active {\r\n  border-color: lightcoral;\r\n}\r\n.altrp-field-label {\r\n  text-align: center;\r\n  display: block;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__single-value {\r\n  font-size: 14px;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__indicator-separator {\r\n  display: none;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__indicator {\r\n  align-items: center;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__control {\r\n  width: 100px;\r\n  min-height: 32px;\r\n  padding: 0;\r\n  border-radius: 0;\r\n  outline: none;\r\n  border-color: rgb(142,148,170);\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__control input {\r\n  border: none;\r\n}\r\n.altrp-field-select2 {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  pointer-events: none;\r\n}\r\n.altrp-field-select2__control {\r\n  webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  background-color: hsl(0,0%,100%);\r\n  border-color: hsl(0,0%,80%);\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  cursor: default;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex-wrap: wrap;\r\n  -ms-flex-wrap: wrap;\r\n  flex-wrap: wrap;\r\n  -webkit-box-pack: justify;\r\n  -webkit-justify-content: space-between;\r\n  -ms-flex-pack: justify;\r\n  justify-content: space-between;\r\n  min-height: 38px;\r\n  outline: 0 !important;\r\n  position: relative;\r\n  -webkit-transition: all 100ms;\r\n  transition: all 100ms;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__value-container {\r\n  -webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex: 1;\r\n  -ms-flex: 1;\r\n  flex: 1;\r\n  -webkit-flex-wrap: wrap;\r\n  -ms-flex-wrap: wrap;\r\n  flex-wrap: wrap;\r\n  padding: 2px 8px;\r\n  -webkit-overflow-scrolling: touch;\r\n  position: relative;\r\n  overflow: hidden;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__single-value {\r\n  color: hsl(0,0%,20%);\r\n  margin-left: 2px;\r\n  margin-right: 2px;\r\n  max-width: calc(100% - 8px);\r\n  overflow: hidden;\r\n  position: absolute;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  top: 50%;\r\n  -webkit-transform: translateY(-50%);\r\n  -ms-transform: translateY(-50%);\r\n  transform: translateY(-50%);\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicators {\r\n  -webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  -webkit-align-self: stretch;\r\n  -ms-flex-item-align: stretch;\r\n  align-self: stretch;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex-shrink: 0;\r\n  -ms-flex-negative: 0;\r\n  flex-shrink: 0;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicator-separator {\r\n  -webkit-align-self: stretch;\r\n  -ms-flex-item-align: stretch;\r\n  align-self: stretch;\r\n  background-color: hsl(0,0%,80%);\r\n  margin-bottom: 8px;\r\n  margin-top: 8px;\r\n  width: 1px;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicator {\r\n  color: hsl(0,0%,80%);\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  padding: 8px;\r\n  -webkit-transition: color 150ms;\r\n  transition: color 150ms;\r\n  box-sizing: border-box;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.tba-placeholder {\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n.altrp-field-subgroup {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n.altrp-field-option {\r\n  display: flex;\r\n  padding: 10px;\r\n}\r\n.altrp-field-option__label {\r\n  cursor: pointer;\r\n}\r\ntextarea.altrp-field {\r\n  display: block;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__placeholder {\r\n  white-space: nowrap;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__single-value {\r\n  font-size: 14px;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__indicator-separator {\r\n  display: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__indicator {\r\n  align-items: center;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__control {\r\n  width: 100%;\r\n  min-height: 19px;\r\n  padding: 0;\r\n  border-radius: 0;\r\n  outline: none;\r\n  border-color: rgb(142, 148, 170);\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__control input {\r\n  border: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__value-container {\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  line-height: 13px;\r\n}\r\n.altrp-field-required {\r\n  color: red;\r\n  font-size: 18px;\r\n  padding-left: 10px;\r\n}\r\n.altrp-field-container-label {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.altrp-field-label-container-left {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.altrp-field-label-container {\r\n  display: inline-flex;\r\n  align-items: center;\r\n}\r\n.altrp-field-select2__indicator.altrp-field-select2__dropdown-indicator {\r\n  padding: 0 8px;\r\n  max-height: 14px;\r\n  overflow: hidden;\r\n}\r\n.altrp-field-select2 .altrp-field-select2__value-container {\r\n  padding: 0px 8px;\r\n}\r\n.altrp-field-select2 .css-b8ldur-Input {\r\n  padding-bottom: 0px;\r\n  padding-top: 0px;\r\n  margin: 0 2px;\r\n}\r\n.altrp-field-select2 .altrp-field-select2__control {\r\n  min-height: 14px;\r\n}\r\n`)\r\n\r\nconst AltrpFieldContainer = styled.div`\r\n  ${({ settings: { content_label_position_type } }) => {\r\n    switch (content_label_position_type) {\r\n      case \"left\": {\r\n        return \"display: flex\";\r\n      }\r\n      case \"right\": {\r\n        return \"display:flex;flex-direction:row-reverse;justify-content:flex-end;\";\r\n      }\r\n    }\r\n    return \"\";\r\n  }}\r\n`;\r\n\r\nclass InputWidget extends Component {\r\n  timeInput = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    props.element.component = this;\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    this.onChange = this.onChange.bind(this);\r\n    this.debounceDispatch = this.debounceDispatch.bind(this);\r\n\r\n    this.defaultValue =\r\n      this.getContent(\"content_default_value\") ||\r\n      (this.valueMustArray() ? [] : \"\");\r\n    if (this.valueMustArray() && !_.isArray(this.defaultValue)) {\r\n      this.defaultValue = [];\r\n    }\r\n    this.state = {\r\n      settings: { ...props.element.getSettings() },\r\n      value: this.defaultValue,\r\n      options: parseOptionsFromSettings(\r\n        props.element.getSettings(\"content_options\")\r\n      ),\r\n      paramsForUpdate: null\r\n    };\r\n    this.altrpSelectRef = React.createRef();\r\n    if (this.getContent(\"content_default_value\")) {\r\n      this.dispatchFieldValueToStore(this.getContent(\"content_default_value\"));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * В некоторых случаях значение поля должно быть массивом\r\n   * @return {boolean}\r\n   */\r\n  valueMustArray() {\r\n    if (\r\n      [\"file\", \"image_select\", \"checkbox\"].indexOf(\r\n        this.props.element.getSettings(\"content_type\")\r\n      ) !== -1\r\n    ) {\r\n      return true;\r\n    }\r\n    if (\r\n      this.props.element.getSettings(\"content_type\") === \"select2\" &&\r\n      this.props.element.getSettings(\"select2_multiple\")\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  /**\r\n   * Чистит значение\r\n   */\r\n  clearValue() {\r\n    let value = \"\";\r\n    if (\r\n      this.props.element.getSettings(\"content_type\") === \"checkbox\" ||\r\n      ([\"select2\", \"image_select\"].indexOf(\r\n        this.props.element.getSettings(\"content_type\")\r\n      ) >= 0 &&\r\n        this.props.element.getSettings(\"select2_multiple\"))\r\n    ) {\r\n      value = [];\r\n    }\r\n    this.onChange(value);\r\n    this.dispatchFieldValueToStore(value, true);\r\n  }\r\n  /**\r\n   * Метод устанавливает все опции как выбранные\r\n   */\r\n  selectAll() {\r\n    const optionsDynamicSetting = this.props.element.getDynamicSetting(\r\n      \"content_options\"\r\n    );\r\n    if (this.props.element.getSettings(\"content_type\") === \"checkbox\") {\r\n      let options = [...this.state.options];\r\n\r\n      if (optionsDynamicSetting) {\r\n        options = convertData(optionsDynamicSetting, options);\r\n      }\r\n      options = options.map(({ value }) => value);\r\n      this.onChange(options);\r\n    }\r\n    if (\r\n      [\"select2\", \"image_select\"].indexOf(\r\n        this.props.element.getSettings(\"content_type\")\r\n      ) >= 0 &&\r\n      this.props.element.getSettings(\"select2_multiple\")\r\n    ) {\r\n      let options = [...this.state.options];\r\n      if (!_.isArray(options)) {\r\n        options = [];\r\n      } else {\r\n        if (optionsDynamicSetting) {\r\n          options = convertData(optionsDynamicSetting, options);\r\n        }\r\n      }\r\n      this.onChange(options);\r\n    }\r\n  }\r\n  /**\r\n   * Обработка нажатия клавиши\r\n   * @param {{}} e\r\n   */\r\n  handleEnter = e => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      const inputs = Array.from(document.querySelectorAll(\"input,select\"));\r\n      const index = inputs.indexOf(e.target);\r\n      if (index === undefined) return;\r\n      inputs[index + 1] && inputs[index + 1].focus();\r\n      const {\r\n        create_allowed,\r\n        create_label,\r\n        create_url\r\n      } = this.props.element.getSettings();\r\n      if (create_allowed && create_label && create_url) {\r\n        this.createItem(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Загрузка виджета\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  async _componentDidMount(prevProps, prevState) {\r\n    if (this.props.element.getSettings(\"content_options\")) {\r\n      let options = parseOptionsFromSettings(\r\n        this.props.element.getSettings(\"content_options\")\r\n      );\r\n\r\n      this.setState(state => ({ ...state, options }));\r\n    } else if (\r\n      [\"select\", \"select2\"].indexOf(this.state.settings.content_type) >= 0 &&\r\n      this.state.settings.model_for_options\r\n    ) {\r\n      let options = await new Resource({ route: this.getRoute() }).getAll();\r\n      options = !_.isArray(options) ? options.data : options;\r\n      options = _.isArray(options) ? options : [];\r\n      this.setState(state => ({ ...state, options }));\r\n    }\r\n    let value = this.state.value;\r\n    /**\r\n     * Если динамическое значение загрузилось,\r\n     * то используем this.getContent для получение этого динамического значения\r\n     * старые динамические данные\r\n     * */\r\n    if (\r\n      _.get(value, \"dynamic\") &&\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\r\n    ) {\r\n      value = this.getContent(\"content_default_value\");\r\n    }\r\n    // if (!_.isObject(value)) {\r\n    //   value = this.getContent('content_default_value');\r\n    // }\r\n    /**\r\n     * Если модель обновилась при смене URL\r\n     */\r\n    if (\r\n      prevProps &&\r\n      !prevProps.currentModel.getProperty(\"altrpModelUpdated\") &&\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\r\n    ) {\r\n      value = this.getContent(\"content_default_value\");\r\n      this.setState(\r\n        state => ({ ...state, value, contentLoaded: true }),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    if (\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\") &&\r\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\r\n      !this.state.contentLoaded\r\n    ) {\r\n      value = this.getContent(\"content_default_value\");\r\n      this.setState(\r\n        state => ({ ...state, value, contentLoaded: true }),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    if (this.state.value !== value) {\r\n      this.setState(\r\n        state => ({ ...state, value }),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получить url для запросов\r\n   */\r\n  getRoute() {\r\n    let url = this.props.element.getSettings(\"model_for_options\");\r\n\r\n    if (url.indexOf(\"/\") === -1) {\r\n      return `/ajax/models/${url}_options`;\r\n    }\r\n    if (url.indexOf(\"{{\") !== -1) {\r\n      url = replaceContentWithData(url);\r\n    }\r\n    return url;\r\n  }\r\n  /**\r\n   * Обновление виджета\r\n   */\r\n  async _componentDidUpdate(prevProps, prevState) {\r\n    const { content_options, model_for_options } = this.state.settings;\r\n    if (\r\n      prevProps &&\r\n      !prevProps.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\r\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\")\r\n    ) {\r\n      let value = this.getContent(\r\n        \"content_default_value\",\r\n        this.props.element.getSettings(\"select2_multiple\")\r\n      );\r\n      this.setState(\r\n        state => ({ ...state, value, contentLoaded: true }),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n    }\r\n    if (\r\n      this.props.element.getSettings(\"content_type\") === \"select\" &&\r\n      this.props.element.getSettings(\"model_for_options\")\r\n    ) {\r\n      if (\r\n        !(\r\n          this.state.settings.model_for_options ===\r\n          prevProps.element.getSettings(\"model_for_options\")\r\n        )\r\n      ) {\r\n        let model_for_options = prevProps.element.getSettings(\r\n          \"model_for_options\"\r\n        );\r\n        let options = await new Resource({ route: this.getRoute() }).getAll();\r\n        options = !_.isArray(options) ? options.data : options;\r\n        options = _.isArray(options) ? options : [];\r\n        this.setState(state => ({ ...state, options, model_for_options }));\r\n      }\r\n    }\r\n    /**\r\n     * Если обновилась модель, то пробрасываем в стор новое значение (старый источник диамических данных)\r\n     */\r\n    if (\r\n      !_.isEqual(this.props.currentModel, prevProps.currentModel) &&\r\n      this.state.value &&\r\n      this.state.value.dynamic\r\n    ) {\r\n      this.dispatchFieldValueToStore(this.getContent(\"content_default_value\"));\r\n    }\r\n\r\n    /**\r\n     * Если обновилось хранилище данных формы, currentDataStorage или модель, то получаем новые опции c сервера\r\n     */\r\n    if (\r\n      this.props.formsStore !== prevProps.formsStore ||\r\n      this.props.currentModel !== prevProps.currentModel ||\r\n      this.props.currentDataStorage !== prevProps.currentDataStorage\r\n    ) {\r\n      this.updateOptions();\r\n    }\r\n    if (content_options && !model_for_options) {\r\n      let options = parseOptionsFromSettings(content_options);\r\n      if (!_.isEqual(options, this.state.options)) {\r\n        this.setState(state => ({ ...state, options }));\r\n      }\r\n    }\r\n    this.updateValue(prevProps);\r\n  }\r\n\r\n  /**\r\n   * Обновить значение если нужно\r\n   * @param {{}} prevProps\r\n   */\r\n  updateValue(prevProps) {\r\n    if (isEditor()) {\r\n      return;\r\n    }\r\n    let content_calculation = this.props.element.getSettings(\r\n      \"content_calculation\"\r\n    );\r\n    const altrpforms = this.props.formsStore;\r\n    const fieldName = this.props.element.getFieldId();\r\n    const formId = this.props.element.getFormId();\r\n    if (!content_calculation) {\r\n      /**\r\n       * Обновить значение, если formsStore изменилось из другого компонента\r\n       */\r\n      const path = `${formId}.${fieldName}`;\r\n      if (\r\n        this.props.formsStore !== prevProps.formsStore &&\r\n        _.get(altrpforms, path) !== this.state.value\r\n      ) {\r\n        this.setState(state => ({\r\n          ...state,\r\n          value: _.get(altrpforms, path)\r\n        }));\r\n      }\r\n      return;\r\n    }\r\n\r\n    const prevContext = {};\r\n\r\n    const altrpdata = this.props.currentDataStorage.getData();\r\n    const altrpmodel = this.props.currentModel.getData();\r\n    const altrpuser = this.props.currentUser.getData();\r\n    const altrppagestate = this.props.altrpPageState.getData();\r\n    const altrpresponses = this.props.altrpresponses.getData();\r\n    const altrpmeta = this.props.altrpMeta.getData();\r\n    const context = this.props.element.getCurrentModel().getData();\r\n    if (content_calculation.indexOf(\"altrpdata\") !== -1) {\r\n      context.altrpdata = altrpdata;\r\n      if (!altrpdata.currentDataStorageLoaded) {\r\n        prevContext.altrpdata = altrpdata;\r\n      } else {\r\n        prevContext.altrpdata = prevProps.currentDataStorage.getData();\r\n      }\r\n    }\r\n    if (content_calculation.indexOf(\"altrpforms\") !== -1) {\r\n      context.altrpforms = altrpforms;\r\n      /**\r\n       * Не производим вычисления, если изменилось текущее поле\r\n       */\r\n      if (`${formId}.${fieldName}` === altrpforms.changedField) {\r\n        prevContext.altrpforms = altrpforms;\r\n      } else {\r\n        prevContext.altrpforms = prevProps.formsStore;\r\n      }\r\n    }\r\n    if (content_calculation.indexOf(\"altrpmodel\") !== -1) {\r\n      context.altrpmodel = altrpmodel;\r\n      prevContext.altrpmodel = prevProps.currentModel.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\r\n      context.altrpuser = altrpuser;\r\n      prevContext.altrpuser = prevProps.currentUser.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\r\n      context.altrpuser = altrpuser;\r\n      prevContext.altrpuser = prevProps.currentUser.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrppagestate\") !== -1) {\r\n      context.altrppagestate = altrppagestate;\r\n      prevContext.altrppagestate = prevProps.altrpPageState.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpmeta\") !== -1) {\r\n      context.altrpmeta = altrpmeta;\r\n      prevContext.altrpmeta = prevProps.altrpMeta.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpresponses\") !== -1) {\r\n      context.altrpresponses = altrpresponses;\r\n      prevContext.altrpresponses = prevProps.altrpresponses.getData();\r\n    }\r\n\r\n    if (content_calculation.indexOf(\"altrpstorage\") !== -1) {\r\n      context.altrpstorage = getDataFromLocalStorage(\"altrpstorage\", {});\r\n    }\r\n\r\n    // if(_.isEqual(prevContext, context)){\r\n    //   return;\r\n    // }\r\n\r\n    if (\r\n      _.isEqual(prevProps.currentDataStorage, this.props.currentDataStorage) &&\r\n      _.isEqual(prevProps.currentUser, this.props.currentUser) &&\r\n      _.isEqual(prevProps.formsStore, this.props.formsStore) &&\r\n      _.isEqual(prevProps.altrpPageState, this.props.altrpPageState) &&\r\n      _.isEqual(prevProps.altrpMeta, this.props.altrpMeta) &&\r\n      _.isEqual(prevProps.altrpresponses, this.props.altrpresponses) &&\r\n      _.isEqual(prevProps.currentModel, this.props.currentModel)\r\n    ) {\r\n      return;\r\n    }\r\n    if (\r\n      !_.isEqual(prevProps.formsStore, this.props.formsStore) &&\r\n      `${formId}.${fieldName}` === altrpforms.changedField\r\n    ) {\r\n      return;\r\n    }\r\n    let value = \"\";\r\n    try {\r\n      content_calculation = content_calculation\r\n        .replace(/}}/g, \"')\")\r\n        .replace(/{{/g, \"_.get(context, '\");\r\n      value = eval(content_calculation);\r\n      if (value === this.state.value) {\r\n        return;\r\n      }\r\n      this.setState(\r\n        state => ({ ...state, value }),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n    } catch (e) {\r\n      console.error(\r\n        \"Evaluate error in Input: '\" + e.message + \"'\",\r\n        this.props.element.getId()\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновляет опции для селекта при обновлении данных, полей формы\r\n   */\r\n  async updateOptions() {\r\n    {\r\n      let formId = this.props.element.getFormId();\r\n      let paramsForUpdate = this.props.element.getSettings(\"params_for_update\");\r\n      let formData = _.get(this.props.formsStore, [formId], {});\r\n      paramsForUpdate = parseParamsFromString(\r\n        paramsForUpdate,\r\n        new AltrpModel(formData)\r\n      );\r\n      /**\r\n       * Сохраняем параметры запроса, и если надо обновляем опции\r\n       */\r\n      let options = [...this.state.options];\r\n      if (!_.isEqual(paramsForUpdate, this.state.paramsForUpdate)) {\r\n        if (!_.isEmpty(paramsForUpdate)) {\r\n          if (this.props.element.getSettings(\"params_as_filters\", false)) {\r\n            paramsForUpdate = JSON.stringify(paramsForUpdate);\r\n            options = await new Resource({\r\n              route: this.getRoute()\r\n            }).getQueried({ filters: paramsForUpdate });\r\n          } else {\r\n            options = await new Resource({ route: this.getRoute() }).getQueried(\r\n              paramsForUpdate\r\n            );\r\n          }\r\n          options = !_.isArray(options) ? options.data : options;\r\n          options = _.isArray(options) ? options : [];\r\n        } else if (this.state.paramsForUpdate) {\r\n          options = await new Resource({ route: this.getRoute() }).getAll();\r\n          options = !_.isArray(options) ? options.data : options;\r\n          options = _.isArray(options) ? options : [];\r\n        }\r\n        // console.log(options);\r\n        // console.log(this.state.value);\r\n        this.setState(state => ({\r\n          ...state,\r\n          paramsForUpdate,\r\n          options\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Изменение значения в виджете\r\n   * @param e\r\n   * @param  editor для получения изменений из CKEditor\r\n   */\r\n  onChange(e, editor = null) {\r\n    let value = \"\";\r\n    let valueToDispatch;\r\n    const settings = this.props.element.getSettings();\r\n    if (e && e.target) {\r\n      if (this.props.element.getSettings(\"content_type\") === \"checkbox\") {\r\n        let inputs = document.getElementsByName(e.target.name);\r\n        value = [];\r\n        inputs.forEach(input => {\r\n          if (input.checked) {\r\n            value.push(input.value);\r\n          }\r\n        });\r\n      } else if (settings.content_type === \"accept\") {\r\n        let _value = e.target.checked;\r\n        let trueValue =\r\n          this.props.element.getSettings(\"accept_checked\") || true;\r\n        let falseValue =\r\n          this.props.element.getSettings(\"accept_unchecked\") || false;\r\n        falseValue = valueReplacement(falseValue);\r\n        trueValue = valueReplacement(trueValue);\r\n        valueToDispatch = _value ? trueValue : falseValue;\r\n      } else {\r\n        value = e.target.value;\r\n      }\r\n    }\r\n\r\n    if (e && e.value) {\r\n      value = e.value;\r\n    }\r\n    if (_.get(editor, \"getData\")) {\r\n      value = `<div class=\"ck ck-content\" style=\"width:100%\">${editor.getData()}</div>`;\r\n    }\r\n    if (_.isArray(e)) {\r\n      value = _.cloneDeep(e);\r\n    }\r\n    if (this.props.element.getSettings(\"content_type\") === \"select2\") {\r\n      if (this.props.element.getSettings(\"select2_multiple\", false) && !e) {\r\n        value = [];\r\n      }\r\n      if (this.props.element.getSettings(\"select2_multiple\", false)) {\r\n        value = value.map(item => item.value);\r\n      }\r\n    }\r\n    if (\r\n      this.props.element.getSettings(\"content_options_nullable\") &&\r\n      e &&\r\n      e.value === \"<null>\"\r\n    ) {\r\n      value = null;\r\n    }\r\n\r\n    let timestamp = this.props.element.getSettings(\"content_timestamp\");\r\n    let isDate = this.state.settings.content_type === \"date\";\r\n\r\n    if (isDate && timestamp && value != \"\") {\r\n      value = new Date(value).getTime(); // timestamp\r\n    }\r\n    this.setState(\r\n      state => ({\r\n        ...state,\r\n        value\r\n      }),\r\n      () => {\r\n        /**\r\n         * Обновляем хранилище только если не текстовое поле\r\n         */\r\n\r\n        const change_actions = this.props.element.getSettings(\"change_actions\");\r\n        const change_change_end = this.props.element.getSettings(\r\n          \"change_change_end\"\r\n        );\r\n        const change_change_end_delay = this.props.element.getSettings(\r\n          \"change_change_end_delay\"\r\n        );\r\n\r\n        if (\r\n          [\"text\", \"email\", \"phone\", \"tel\", \"number\", \"password\"].indexOf(\r\n            this.state.settings.content_type\r\n          ) === -1\r\n        ) {\r\n          this.dispatchFieldValueToStore(\r\n            valueToDispatch !== undefined ? valueToDispatch : value,\r\n            true\r\n          );\r\n        }\r\n        if (change_actions && !change_change_end && !isEditor()) {\r\n          this.debounceDispatch(\r\n            valueToDispatch !== undefined ? valueToDispatch : value\r\n          );\r\n        }\r\n        if (change_actions && change_change_end && !isEditor()) {\r\n          this.timeInput && clearTimeout(this.timeInput);\r\n          this.timeInput = setTimeout(() => {\r\n            this.debounceDispatch(\r\n              valueToDispatch !== undefined ? valueToDispatch : value\r\n            );\r\n          }, change_change_end_delay);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  debounceDispatch = _.debounce(\r\n    value => this.dispatchFieldValueToStore(value, true),\r\n    150\r\n  );\r\n\r\n  // inputKeyBetween = setTimeout(\r\n  //   value => this.dispatchFieldValueToStore(value, true),\r\n  //   this.props.element.getSettings(\"change_change_end_delay\")\r\n  // );\r\n  /**\r\n   * получить опции\r\n   */\r\n  getOptions() {\r\n    let options = [...this.state.options];\r\n    const optionsDynamicSetting = this.props.element.getDynamicSetting(\r\n      \"content_options\"\r\n    );\r\n    if (optionsDynamicSetting) {\r\n      options = convertData(optionsDynamicSetting, options);\r\n    }\r\n    if (!this.props.element.getSettings(\"sort_default\")) {\r\n      options = _.sortBy(options, o => o && (o.label ? o.label.toString() : o));\r\n    }\r\n    return options;\r\n  }\r\n\r\n  /**\r\n   * Для действие по фокусу\r\n   * @param e\r\n   * @return {Promise<void>}\r\n   */\r\n\r\n  onFocus = async e => {\r\n    const focus_actions = this.props.element.getSettings(\"focus_actions\");\r\n\r\n    if (focus_actions && !isEditor()) {\r\n      const actionsManager = (\r\n        await import(\r\n          /* webpackChunkName: 'ActionsManager' */\r\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n        )\r\n      ).default;\r\n      await actionsManager.callAllWidgetActions(\r\n        this.props.element.getIdForAction(),\r\n        \"focus\",\r\n        focus_actions,\r\n        this.props.element\r\n      );\r\n    }\r\n  };\r\n  /**\r\n   * Потеря фокуса для оптимизации\r\n   * @param  e\r\n   * @param  editor для получения изменений из CKEditor\r\n   */\r\n  onBlur = async (e, editor = null) => {\r\n    if (\r\n      [\"text\", \"email\", \"phone\", \"tel\", \"number\", \"password\"].indexOf(\r\n        this.state.settings.content_type\r\n      ) !== -1\r\n    ) {\r\n      this.dispatchFieldValueToStore(e.target.value, true);\r\n    }\r\n    if (_.get(editor, \"getData\")) {\r\n      this.dispatchFieldValueToStore(editor.getData(), true);\r\n    }\r\n    if (this.props.element.getSettings(\"actions\", []) && !isEditor()) {\r\n      const actionsManager = (\r\n        await import(\r\n          /* webpackChunkName: 'ActionsManager' */\r\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n        )\r\n      ).default;\r\n      await actionsManager.callAllWidgetActions(\r\n        this.props.element.getIdForAction(),\r\n        \"blur\",\r\n        this.props.element.getSettings(\"actions\", []),\r\n        this.props.element\r\n      );\r\n    }\r\n  };\r\n  /**\r\n   * Передадим значение в хранилище формы\r\n   * @param {*} value\r\n   * @param {boolean} userInput true - имзенилось пользователем\r\n   */\r\n  dispatchFieldValueToStore = async (value, userInput = false) => {\r\n    let formId = this.props.element.getFormId();\r\n    let fieldName = this.props.element.getFieldId();\r\n    if (fieldName.indexOf(\"{{\") !== -1) {\r\n      fieldName = replaceContentWithData(fieldName);\r\n    }\r\n    if (_.isObject(this.props.appStore) && fieldName && formId) {\r\n      this.props.appStore.dispatch(\r\n        changeFormFieldValue(fieldName, value, formId, userInput)\r\n      );\r\n      if (userInput) {\r\n        const change_actions = this.props.element.getSettings(\"change_actions\");\r\n\r\n        if (change_actions && !isEditor()) {\r\n          const actionsManager = (\r\n            await import(\r\n              /* webpackChunkName: 'ActionsManager' */\r\n              \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n            )\r\n          ).default;\r\n          await actionsManager.callAllWidgetActions(\r\n            this.props.element.getIdForAction(),\r\n            \"change\",\r\n            change_actions,\r\n            this.props.element\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Обработка добавления опции по ajax\r\n   * @param {SyntheticKeyboardEvent} e\r\n   */\r\n  createItem = async e => {\r\n    const keyCode = e.keyCode;\r\n    const { value: inputValue } = e.target;\r\n    if (keyCode !== 13 || !inputValue) {\r\n      return;\r\n    }\r\n    const {\r\n      create_url,\r\n      create_label,\r\n      create_data,\r\n      select2_multiple\r\n    } = this.props.element.getSettings();\r\n    if (!create_label && !create_url) {\r\n      return;\r\n    }\r\n    const currentModel = this.props.element.getCurrentModel();\r\n    let data = parseParamsFromString(create_data, currentModel, true);\r\n    data[create_label] = inputValue;\r\n    let url = parseURLTemplate(create_url, currentModel.getData());\r\n    this.setState(state => ({ ...state, isDisabled: true }));\r\n    try {\r\n      const resource = new Resource({\r\n        route: url\r\n      });\r\n      let res = await resource.post(data);\r\n      if (res.success && _.get(res, \"data.id\")) {\r\n        let newOption = {\r\n          label: inputValue,\r\n          value: _.get(res, \"data.id\")\r\n        };\r\n        this.setState(\r\n          state => ({ ...state, isDisabled: false }),\r\n          () => {\r\n            let options = [...this.state.options];\r\n            options.unshift(newOption);\r\n            let value = this.state.value;\r\n            if (select2_multiple) {\r\n              value = value ? [...value] : [];\r\n              value.push(_.get(res, \"data.id\"));\r\n            } else {\r\n              value = _.get(res, \"data.id\");\r\n            }\r\n            this.setState(\r\n              state => ({ ...state, options, value }),\r\n              () => {\r\n                const selectStateManager = _.get(\r\n                  this,\r\n                  \"altrpSelectRef.current.selectRef.current\"\r\n                );\r\n                if (selectStateManager) {\r\n                  selectStateManager.setState({\r\n                    menuIsOpen: false,\r\n                    inputValue: \"\"\r\n                  });\r\n                }\r\n              }\r\n            );\r\n          }\r\n        );\r\n      }\r\n      this.setState(state => ({ ...state, isDisabled: false }));\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.setState(state => ({ ...state, isDisabled: false }));\r\n    }\r\n  };\r\n  // shouldComponentUpdate(nextProps) {\r\n    // console.log(nextProps);\r\n\r\n    // console.log(nextProps.ElementWrapper=== this.props.ElementWrapper);\r\n    // console.log(nextProps.altrpMeta=== this.props.altrpMeta);\r\n    // console.log(nextProps.altrpPageState=== this.props.altrpPageState);\r\n    // console.log(nextProps.altrpresponses=== this.props.altrpresponses);\r\n    // console.log(nextProps.appStore=== this.props.appStore);\r\n    // console.log(nextProps.baseRender=== this.props.baseRender);\r\n    // console.log(nextProps.children=== this.props.children);\r\n    // console.log(nextProps.currentDataStorage=== this.props.currentDataStorage);\r\n    // console.log(nextProps.currentModel=== this.props.currentModel);\r\n    // console.log(nextProps.currentScreen=== this.props.currentScreen);\r\n    // console.log(nextProps.currentUser=== this.props.currentUser);\r\n    // console.log(nextProps.element=== this.props.element);\r\n    // console.log(nextProps.elementDisplay=== this.props.elementDisplay);\r\n    // console.log(nextProps.formsStore=== this.props.formsStore);\r\n    // console.log(nextProps.match=== this.props.match);\r\n    // console.log(nextProps.match);\r\n    // console.log(nextProps.rootElement=== this.props.rootElement);\r\n    // console.log(nextProps.rootElement);\r\n    // console.log(nextProps.updateToken=== this.props.updateToken);\r\n  //   return true;\r\n  // }\r\n  /**\r\n   * Взовращает имя для атрибута name\r\n   * @return {string}\r\n   */\r\n  getName() {\r\n    return `${this.props.element.getFormId()}[${this.props.element.getFieldId()}]`;\r\n  }\r\n\r\n  render() {\r\n    let label = null;\r\n    const settings = this.props.element.getSettings();\r\n    const {\r\n      options_sorting,\r\n      content_readonly,\r\n      image_select_options,\r\n      select2_multiple: isMultiple,\r\n      label_icon\r\n    } = settings;\r\n\r\n    let value = this.state.value;\r\n\r\n    if (\r\n      _.get(value, \"dynamic\") &&\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\r\n    ) {\r\n      value = this.getContent(\"content_default_value\");\r\n    }\r\n    /**\r\n     * Пока динамический контент загружается (Еесли это динамический контент),\r\n     * нужно вывести пустую строку\r\n     */\r\n    if (value && value.dynamic) {\r\n      value = \"\";\r\n    }\r\n    let classLabel = \"\";\r\n    let styleLabel = {};\r\n    const content_label_position_type = this.props.element.getResponsiveSetting(\r\n      \"content_label_position_type\"\r\n    );\r\n    switch (content_label_position_type) {\r\n      case \"top\":\r\n        styleLabel = {\r\n          marginBottom: this.state.settings.label_style_spacing\r\n            ? this.state.settings.label_style_spacing.size +\r\n              this.state.settings.label_style_spacing.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n      case \"bottom\":\r\n        styleLabel = {\r\n          marginTop: this.state.settings.label_style_spacing\r\n            ? this.state.settings.label_style_spacing.size +\r\n              this.state.settings.label_style_spacing.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n      case \"left\":\r\n        styleLabel = {\r\n          marginRight: this.state.settings.label_style_spacing\r\n            ? this.state.settings.label_style_spacing.size +\r\n              this.state.settings.label_style_spacing.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"altrp-field-label-container-left\";\r\n        // this.label.current.classList.add(\"hello\")\r\n\r\n        break;\r\n      case \"absolute\":\r\n        styleLabel = {\r\n          position: \"absolute\",\r\n          zIndex: 2\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n    }\r\n\r\n    if (this.state.settings.content_label) {\r\n      label = (\r\n        <div\r\n          className={\"altrp-field-label-container \" + classLabel}\r\n          style={styleLabel}\r\n        >\r\n          <label\r\n            className={`altrp-field-label ${\r\n              this.state.settings.content_required\r\n                ? \"altrp-field-label--required\"\r\n                : \"\"\r\n            }`}\r\n          >\r\n            {this.state.settings.content_label}\r\n          </label>\r\n          {label_icon && label_icon.assetType && (\r\n            <span className=\"altrp-label-icon\">\r\n              {renderAssetIcon(label_icon)}\r\n            </span>\r\n          )}\r\n        </div>\r\n      );\r\n    } else {\r\n      label = null;\r\n    }\r\n\r\n    let autocomplete = \"off\";\r\n    if (this.state.settings.content_autocomplete) {\r\n      autocomplete = \"on\";\r\n    } else {\r\n      autocomplete = \"off\";\r\n    }\r\n\r\n    let input = null;\r\n    switch (this.state.settings.content_type) {\r\n      case \"select\":\r\n        {\r\n          let options = this.getOptions();\r\n          input = (\r\n            <select\r\n              value={value || \"\"}\r\n              onFocus={this.onFocus}\r\n              name={this.getName()}\r\n              onChange={this.onChange}\r\n              onBlur={this.onBlur}\r\n              onKeyDown={this.handleEnter}\r\n              id={this.state.settings.position_css_id}\r\n              className={\r\n                \"altrp-field \" + this.state.settings.position_css_classes\r\n              }\r\n            >\r\n              {this.state.settings.content_options_nullable ? (\r\n                <option value=\"\" />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              {(options_sorting\r\n                ? sortOptions(options, options_sorting)\r\n                : options\r\n              ).map(option => (\r\n                <option value={option.value} key={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          );\r\n        }\r\n        break;\r\n      case \"select2\":\r\n        {\r\n          input = this.renderSelect2();\r\n        }\r\n        break;\r\n      case \"radio\":\r\n      case \"checkbox\":\r\n        {\r\n          input = this.renderRepeatedInput();\r\n        }\r\n        break;\r\n      case \"wysiwyg\":\r\n        {\r\n          input = this.renderWysiwyg();\r\n        }\r\n        break;\r\n      case \"textarea\":\r\n        input = (\r\n          <textarea\r\n            value={value || \"\"}\r\n            readOnly={content_readonly}\r\n            autoComplete={autocomplete}\r\n            placeholder={this.state.settings.content_placeholder}\r\n            className={\r\n              \"altrp-field \" + this.state.settings.position_css_classes\r\n            }\r\n            onChange={this.onChange}\r\n            onBlur={this.onBlur}\r\n            id={this.state.settings.position_css_id}\r\n          />\r\n        );\r\n        break;\r\n      case \"image_select\":\r\n        input = (\r\n          <AltrpImageSelect\r\n            options={image_select_options}\r\n            value={this.state.value}\r\n            changeHandler={value => this.setState({ value })}\r\n            isMultiple={isMultiple}\r\n          />\r\n        );\r\n        break;\r\n      case \"accept\":\r\n        input = this.renderAcceptInput();\r\n        break;\r\n      default: {\r\n        const isClearable = this.state.settings.content_clearable;\r\n        const isDate = this.state.settings.content_type === \"date\";\r\n        const timestamp = this.props.element.getSettings(\"content_timestamp\");\r\n        if (isDate && timestamp) {\r\n          const isValid = moment.unix(value).isValid();\r\n          if (isValid) {\r\n            try {\r\n              value = moment.unix(value / 1000).format(\"YYYY-MM-DD\");\r\n            } catch (error) {\r\n              console.log(error);\r\n            }\r\n          }\r\n        }\r\n        input = (\r\n          <div className=\"altrp-input-wrapper\">\r\n            <AltrpInput\r\n              type={this.state.settings.content_type}\r\n              name={this.getName()}\r\n              value={value || \"\"}\r\n              element={this.props.element}\r\n              readOnly={content_readonly}\r\n              autoComplete={autocomplete}\r\n              placeholder={this.state.settings.content_placeholder}\r\n              className={\r\n                \"altrp-field \" + this.state.settings.position_css_classes\r\n              }\r\n              settings={this.props.element.getSettings()}\r\n              onKeyDown={this.handleEnter}\r\n              onChange={this.onChange}\r\n              onBlur={this.onBlur}\r\n              onFocus={this.onFocus}\r\n              id={this.state.settings.position_css_id}\r\n            />\r\n            {isClearable && (\r\n              <button\r\n                className=\"input-clear-btn\"\r\n                onClick={() => this.setState({ value: this.defaultValue })}\r\n              >\r\n                ✖\r\n              </button>\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <AltrpFieldContainer\r\n        settings={settings}\r\n        className={\r\n          this.state.settings.content_type !== \"image_select\"\r\n            ? \"altrp-field-container \"\r\n            : \"\" + classLabel\r\n        }\r\n      >\r\n        {content_label_position_type === \"top\" ? label : \"\"}\r\n        {content_label_position_type === \"left\" ? label : \"\"}\r\n        {content_label_position_type === \"right\" ? label : \"\"}\r\n        {content_label_position_type === \"absolute\" ? label : \"\"}\r\n        {/* .altrp-field-label-container */}\r\n        {input}\r\n        {content_label_position_type === \"bottom\" ? label : \"\"}\r\n      </AltrpFieldContainer>\r\n    );\r\n  }\r\n  /**\r\n   * Выводит input type=accept\r\n   */\r\n  renderAcceptInput() {\r\n    const settings = this.props.element.getSettings();\r\n    let value = this.state.value;\r\n    let trueValue = this.props.element.getSettings(\"accept_checked\") || true;\r\n    let falseValue =\r\n      this.props.element.getSettings(\"accept_unchecked\") || false;\r\n    if (value === trueValue) {\r\n      value = true;\r\n    } else if (value === falseValue) {\r\n      value = false;\r\n    }\r\n    return (\r\n      <div className={`altrp-field-option ${value ? \"active\" : \"\"}`}>\r\n        <span className=\"altrp-field-option-span\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name={`${this.props.element.getFormId()}[${this.props.element.getFieldId()}]`}\r\n            className={`altrp-field-option__input ${value ? \"active\" : \"\"}`}\r\n            onChange={this.onChange}\r\n            checked={!!value}\r\n            id={`${this.props.element.getFormId()}[${this.props.element.getFieldId()}]`}\r\n          />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n  /**\r\n   * Выводит input type=checkbox|radio\r\n   */\r\n  renderRepeatedInput() {\r\n    const { options = [] } = this.state;\r\n    let { value = \"\" } = this.state;\r\n    const fieldName =\r\n      this.props.element.getFieldId() ||\r\n      Math.random()\r\n        .toString(36)\r\n        .substr(2, 9);\r\n    const formID =\r\n      this.props.element.getFormId() ||\r\n      Math.random()\r\n        .toString(36)\r\n        .substr(2, 9);\r\n    const inputType = this.props.element.getSettings(\"content_type\", \"radio\");\r\n    return (\r\n      <div className=\"altrp-field-subgroup\">\r\n        {options.map((option, idx) => {\r\n          let checked = false;\r\n          /**\r\n           * Если значение или опция число, то приведем к числу перед сравнением\r\n           */\r\n          if (inputType === \"radio\") {\r\n            checked = altrpCompare(value, option.value, \"==\");\r\n          } else {\r\n            value = _.isArray(value) ? value : value ? [value] : [];\r\n            checked = altrpCompare(option.value, value, \"in\");\r\n          }\r\n          return (\r\n            <div\r\n              className={`altrp-field-option ${checked ? \"active\" : \"\"}`}\r\n              key={`${fieldName}-${idx}`}\r\n            >\r\n              <span className=\"altrp-field-option-span\">\r\n                <input\r\n                  type={inputType}\r\n                  value={option.value}\r\n                  name={`${formID}-${fieldName}`}\r\n                  className={`altrp-field-option__input ${\r\n                    checked ? \"active\" : \"\"\r\n                  }`}\r\n                  onChange={this.onChange}\r\n                  checked={checked}\r\n                  id={`${formID}-${fieldName}-${idx}`}\r\n                />\r\n              </span>\r\n              <label\r\n                htmlFor={`${formID}-${fieldName}-${idx}`}\r\n                className=\"altrp-field-option__label\"\r\n              >\r\n                {option.label}\r\n              </label>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Выводит инпут-select2, используя компонент AltrpSelect\r\n   */\r\n  renderSelect2() {\r\n    const {\r\n      content_options_nullable,\r\n      nulled_option_title,\r\n      content_placeholder\r\n    } = this.props.element.getSettings();\r\n\r\n    let options = this.getOptions();\r\n    let value = this.state.value;\r\n    if (\r\n      _.get(value, \"dynamic\") &&\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\r\n    ) {\r\n      value = this.getContent(\"content_default_value\", true);\r\n    }\r\n    /**\r\n     * Пока динамический контент загружается, нужно вывести пустую строку\r\n     */\r\n    if (value && value.dynamic) {\r\n      value = \"\";\r\n    }\r\n    if (!this.props.element.getSettings(\"select2_multiple\", false)) {\r\n      options.forEach(option => {\r\n        if (!option) {\r\n          return;\r\n        }\r\n        if (option.value === value) {\r\n          value = { ...option };\r\n        }\r\n        if (_.isArray(option.options)) {\r\n          option.options.forEach(option => {\r\n            if (option.value == value) {\r\n              value = { ...option };\r\n            }\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      /**\r\n       * Если включен мультиселект\r\n       */\r\n      value = value ? (_.isArray(value) ? value : [value]) : [];\r\n      value = value.map(v => {\r\n        let _v = v;\r\n        options.forEach(option => {\r\n          if (option.value && option.value.toString() === _v.toString()) {\r\n            _v = { ...option };\r\n          }\r\n          if (_.isArray(option.options)) {\r\n            option.options.forEach(option => {\r\n              if (option.value && option.value.toString() === _v.toString()) {\r\n                _v = { ...option };\r\n              }\r\n            });\r\n          }\r\n        });\r\n        return _v;\r\n      });\r\n      /**\r\n       * Добавим опцию, если для какого-то значения ее нет\r\n       */\r\n      value.forEach(valueItem => {\r\n        if (!_.isObject(valueItem)) {\r\n          options.push({\r\n            value: valueItem,\r\n            label: valueItem\r\n          });\r\n        }\r\n      });\r\n    }\r\n    /**\r\n     * Сортируем опции\r\n     * @type {Array|*}\r\n     */\r\n    if (\r\n      content_options_nullable &&\r\n      (this.props.element.getSettings(\"content_type\") !== \"select2\" ||\r\n        this.props.element.getSettings(\"select2_multiple\") !== true)\r\n    ) {\r\n      options = _.union(\r\n        [{ label: nulled_option_title, value: \"<null>\" }],\r\n        options\r\n      );\r\n    }\r\n    const select2Props = {\r\n      className: \"altrp-field-select2\",\r\n      onFocus: this.onFocus,\r\n      element: this.props.element,\r\n      classNamePrefix: this.props.element.getId() + \" altrp-field-select2\",\r\n      options,\r\n      name: this.props.element.getFieldId(),\r\n      ref: this.altrpSelectRef,\r\n      settings: this.props.element.getSettings(),\r\n      onChange: this.onChange,\r\n      onBlur: this.onBlur,\r\n      value: value || _.find(options, o => o && o.value == this.state.value),\r\n      isOptionSelected: option => {\r\n        if (_.isNumber(this.state.value) || _.isString(this.state.value)) {\r\n          return this.state.value == option.value;\r\n        }\r\n        return this.state.value && this.state.value.includes(option.value);\r\n      },\r\n      placeholder: content_placeholder,\r\n      isMulti: this.props.element.getSettings(\"select2_multiple\", false),\r\n      onKeyDown: this.handleEnter\r\n      // menuIsOpen: true,\r\n    };\r\n    return (\r\n      <div className=\"altrp-input-wrapper\">\r\n        <AltrpSelect {...select2Props} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderWysiwyg() {\r\n    return (\r\n      <CKeditor\r\n        onChange={this.onChange}\r\n        onBlur={this.onBlur}\r\n        changeText={this.dispatchFieldValueToStore}\r\n        text={this.getContent(\"content_default_value\")}\r\n        name={this.getName()}\r\n        readOnly={this.getContent(\"read_only\")}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputWidget;\r\n","import _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport '@babel/runtime/helpers/slicedToArray';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '@babel/runtime/helpers/defineProperty';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport '@babel/runtime/helpers/assertThisInitialized';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/esm/getPrototypeOf';\nimport React, { Component } from 'react';\nimport 'memoize-one';\nimport '@emotion/core';\nimport 'react-dom';\nimport '@babel/runtime/helpers/typeof';\nimport { G as handleInputChange } from '../../dist/index-75b02bac.browser.esm.js';\nimport { S as Select } from '../../dist/Select-e1cf49ae.browser.esm.js';\nimport '@emotion/css';\nimport '@babel/runtime/helpers/taggedTemplateLiteral';\nimport 'react-input-autosize';\nimport { m as manageState } from '../../dist/stateManager-2f2b6f5b.browser.esm.js';\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\nvar defaultProps = {\n  cacheOptions: false,\n  defaultOptions: false,\n  filterOption: null,\n  isLoading: false\n};\nvar makeAsyncSelect = function makeAsyncSelect(SelectComponent) {\n  var _class, _temp;\n\n  return _temp = _class = /*#__PURE__*/function (_Component) {\n    _inherits(Async, _Component);\n\n    var _super = _createSuper(Async);\n\n    function Async(props) {\n      var _this;\n\n      _classCallCheck(this, Async);\n\n      _this = _super.call(this);\n      _this.select = void 0;\n      _this.lastRequest = void 0;\n      _this.mounted = false;\n      _this.optionsCache = {};\n\n      _this.handleInputChange = function (newValue, actionMeta) {\n        var _this$props = _this.props,\n            cacheOptions = _this$props.cacheOptions,\n            onInputChange = _this$props.onInputChange; // TODO\n\n        var inputValue = handleInputChange(newValue, actionMeta, onInputChange);\n\n        if (!inputValue) {\n          delete _this.lastRequest;\n\n          _this.setState({\n            inputValue: '',\n            loadedInputValue: '',\n            loadedOptions: [],\n            isLoading: false,\n            passEmptyOptions: false\n          });\n\n          return;\n        }\n\n        if (cacheOptions && _this.optionsCache[inputValue]) {\n          _this.setState({\n            inputValue: inputValue,\n            loadedInputValue: inputValue,\n            loadedOptions: _this.optionsCache[inputValue],\n            isLoading: false,\n            passEmptyOptions: false\n          });\n        } else {\n          var request = _this.lastRequest = {};\n\n          _this.setState({\n            inputValue: inputValue,\n            isLoading: true,\n            passEmptyOptions: !_this.state.loadedInputValue\n          }, function () {\n            _this.loadOptions(inputValue, function (options) {\n              if (!_this.mounted) return;\n\n              if (options) {\n                _this.optionsCache[inputValue] = options;\n              }\n\n              if (request !== _this.lastRequest) return;\n              delete _this.lastRequest;\n\n              _this.setState({\n                isLoading: false,\n                loadedInputValue: inputValue,\n                loadedOptions: options || [],\n                passEmptyOptions: false\n              });\n            });\n          });\n        }\n\n        return inputValue;\n      };\n\n      _this.state = {\n        defaultOptions: Array.isArray(props.defaultOptions) ? props.defaultOptions : undefined,\n        inputValue: typeof props.inputValue !== 'undefined' ? props.inputValue : '',\n        isLoading: props.defaultOptions === true,\n        loadedOptions: [],\n        passEmptyOptions: false\n      };\n      return _this;\n    }\n\n    _createClass(Async, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        this.mounted = true;\n        var defaultOptions = this.props.defaultOptions;\n        var inputValue = this.state.inputValue;\n\n        if (defaultOptions === true) {\n          this.loadOptions(inputValue, function (options) {\n            if (!_this2.mounted) return;\n            var isLoading = !!_this2.lastRequest;\n\n            _this2.setState({\n              defaultOptions: options || [],\n              isLoading: isLoading\n            });\n          });\n        }\n      }\n    }, {\n      key: \"UNSAFE_componentWillReceiveProps\",\n      value: function UNSAFE_componentWillReceiveProps(nextProps) {\n        // if the cacheOptions prop changes, clear the cache\n        if (nextProps.cacheOptions !== this.props.cacheOptions) {\n          this.optionsCache = {};\n        }\n\n        if (nextProps.defaultOptions !== this.props.defaultOptions) {\n          this.setState({\n            defaultOptions: Array.isArray(nextProps.defaultOptions) ? nextProps.defaultOptions : undefined\n          });\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.mounted = false;\n      }\n    }, {\n      key: \"focus\",\n      value: function focus() {\n        this.select.focus();\n      }\n    }, {\n      key: \"blur\",\n      value: function blur() {\n        this.select.blur();\n      }\n    }, {\n      key: \"loadOptions\",\n      value: function loadOptions(inputValue, callback) {\n        var loadOptions = this.props.loadOptions;\n        if (!loadOptions) return callback();\n        var loader = loadOptions(inputValue, callback);\n\n        if (loader && typeof loader.then === 'function') {\n          loader.then(callback, function () {\n            return callback();\n          });\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n\n        var _this$props2 = this.props,\n            loadOptions = _this$props2.loadOptions,\n            isLoadingProp = _this$props2.isLoading,\n            props = _objectWithoutProperties(_this$props2, [\"loadOptions\", \"isLoading\"]);\n\n        var _this$state = this.state,\n            defaultOptions = _this$state.defaultOptions,\n            inputValue = _this$state.inputValue,\n            isLoading = _this$state.isLoading,\n            loadedInputValue = _this$state.loadedInputValue,\n            loadedOptions = _this$state.loadedOptions,\n            passEmptyOptions = _this$state.passEmptyOptions;\n        var options = passEmptyOptions ? [] : inputValue && loadedInputValue ? loadedOptions : defaultOptions || [];\n        return /*#__PURE__*/React.createElement(SelectComponent, _extends({}, props, {\n          ref: function ref(_ref) {\n            _this3.select = _ref;\n          },\n          options: options,\n          isLoading: isLoading || isLoadingProp,\n          onInputChange: this.handleInputChange\n        }));\n      }\n    }]);\n\n    return Async;\n  }(Component), _class.defaultProps = defaultProps, _temp;\n};\nvar SelectState = manageState(Select);\nvar Async = makeAsyncSelect(SelectState);\n\nexport default Async;\nexport { defaultProps, makeAsyncSelect };\n"],"sourceRoot":""}