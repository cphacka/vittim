{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./resources/modules/front-app/src/js/components/SimpleElementWrapper.js","webpack:///./resources/modules/front-app/src/js/store/elements-storage/actions.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_objectWithoutProperties","source","excluded","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","call","window","altrpHelpers","getDataByPath","TransparentDiv","styled","SimpleElementWrapper","updateStore","state","currentModel","appStore","getState","setState","currentUser","currentDataStorage","elementDisplay","element","getSettings","wrapper","elementWrapperRef","elementRef","React","settings","onClickTooltip","bind","closeTooltip","tooltipOnMouseEnter","tooltipOnMouseLeave","dispatch","addElement","elementId","getId","error","errorInfo","this","isEditor","frontApp","onWidgetMount","_","isFunction","update","updateFonts","checkElementDisplay","addEventListener","dispatchEvent","Event","mountElementEvent","mountElementTypeEvent","getName","document","console","unmountElementEvent","unmountElementTypeEvent","get","stylesModule","stylesContainer","current","getElementsByClassName","e","path","includes","find","domElem","classList","contains","s","tooltipOpen","tooltipOnClickListener","remove","removeEventListener","capture","prevProps","prevState","getProperty","title","currentTitle","replaceContentWithData","altrpPage","changeCurrentPageProperty","setTitle","updateToken","altrpRandomId","conditions","map","c","modelField","conditional_model_field","operator","conditional_other_operator","value","conditional_other_condition_value","conditionsChecker","getCurrentModel","formsStore","formId","logic","formConditions","display","forEach","altrpCompare","field_id","tooltip_position","getResponsiveSetting","tooltip_text","tooltip_minimal","tooltip_show_type","tooltip_horizontal_offset","tooltip_vertical_offset","className","getType","style","whiteSpace","toString","componentStack","styles","CSSId","getData","content","ContentComponent","frontElementsManager","getComponentClass","backend","HTML5Backend","ref","rootElement","ElementWrapper","children","getChildren","match","altrpresponses","altrpPageState","altrpMeta","currentScreen","baseRender","history","WrapperComponent","NavComponent","wrapperProps","onClick","onMouseEnter","onMouseLeave","updateHTMLElementDisplay","text","id","open","position","minimal","horizontal","vertical","HTMLElement","querySelector","Component","reactRedux","connect","hideTriggers","ADD_ELEMENT","CLEAR_ELEMENTS","elementComponent","type"],"mappings":"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","file":"SimpleElementWrapper.f459d28f60e65214ab7d.bundle.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import { addElement } from \"../store/elements-storage/actions\";\r\nimport { changeCurrentPageProperty } from \"../store/current-page/actions\";\r\nimport NavComponent from \"../../../../editor/src/js/components/widgets/styled-components/NavComponent\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { DndProvider } from \"react-dnd\";\r\nconst {getDataByPath} = window.altrpHelpers;\r\nimport styled from \"styled-components\";\r\nimport AltrpTooltip2 from \"../../../../editor/src/js/components/altrp-tooltip/AltrpTooltip2\";\r\nimport React from \"react\";\r\n\r\nconst TransparentDiv = styled.div`\r\n`;\r\n\r\nclass SimpleElementWrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      elementDisplay: !this.props.element.getSettings(\"default_hidden\")\r\n    };\r\n    props.element.wrapper = this;\r\n    this.elementWrapperRef = this.props.elementWrapperRef;\r\n    this.elementRef = React.createRef();\r\n    this.wrapper = React.createRef();\r\n    this.settings = props.element.getSettings();\r\n    this.onClickTooltip = this.onClickTooltip.bind(this);\r\n    this.closeTooltip = this.closeTooltip.bind(this);\r\n    this.tooltipOnMouseEnter = this.tooltipOnMouseEnter.bind(this);\r\n    this.tooltipOnMouseLeave = this.tooltipOnMouseLeave.bind(this);\r\n    appStore.dispatch(addElement(this));\r\n    this.elementId = props.element.getId();\r\n  }\r\n\r\n  /**\r\n   * Отлавливаем ошибки\r\n   * @param error\r\n   * @param errorInfo\r\n   */\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState(state => ({\r\n      ...state,\r\n      error: error,\r\n      errorInfo: errorInfo\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Иногда надо обновить элемент (FrontElement)\r\n   */\r\n  componentDidMount() {\r\n    !window.altrpHelpers.isEditor() && window?.frontApp?.onWidgetMount();\r\n    if (_.isFunction(this.props.element.update)) {\r\n      this.props.element.update();\r\n      this.props.element.updateFonts();\r\n    }\r\n    this.checkElementDisplay();\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      window.dispatchEvent(new Event(\"resize\"));\r\n    })\r\n\r\n    const {element} = this.props\r\n    const mountElementEvent = new Event(`altrp-mount-element:${element.getId()}` );\r\n    const mountElementTypeEvent = new Event(`altrp-mount-element:${element.getName()}` );\r\n    document.dispatchEvent(mountElementEvent)\r\n    document.dispatchEvent(mountElementTypeEvent)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const {element} = this.props\r\n    if(element.getId() === '_giafvu4nk'){\r\n      console.error(this);\r\n    }\r\n    const unmountElementEvent = new Event(`altrp-unmount-element:${element.getId()}` );\r\n    const unmountElementTypeEvent = new Event(`altrp-unmount-element:${element.getName()}` );\r\n    document.dispatchEvent(unmountElementEvent)\r\n    document.dispatchEvent(unmountElementTypeEvent)\r\n  }\r\n  /**\r\n   * Подписываемся на обновление store редакса\r\n   */\r\n  updateStore = () => {\r\n    if (this.state.currentModel !== appStore.getState().currentModel) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        currentModel: appStore.getState().currentModel\r\n      }));\r\n    }\r\n    /**\r\n     * Обновляем пользователя\r\n     */\r\n    if (this.state.currentUser !== appStore.getState().currentUser) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        currentModel: appStore.getState().currentUser\r\n      }));\r\n    }\r\n\r\n    /**\r\n     * Обновляем currentDataStorage\r\n     */\r\n    if (\r\n      this.state.currentDataStorage !== appStore.getState().currentDataStorage\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        currentDataStorage: appStore.getState().currentDataStorage\r\n      }));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Вернет HTMLElement, в котором записаны css стили текущего компонента\r\n   * @return {null | HTMLElement}\r\n   */\r\n  getStylesHTMLElement() {\r\n    if (!_.get(window, \"stylesModule.stylesContainer.current\")) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      window.stylesModule.stylesContainer.current.getElementsByClassName(\r\n        `altrp-styles${this.props.element.getId()}`\r\n      )[0] || null\r\n    );\r\n  }\r\n\r\n  closeTooltip(e) {\r\n    if(!e.path.includes(this.wrapper.current)) {\r\n      const checkTooltip = e.path.find(domElem => domElem.classList ? domElem.classList.contains(\"bp3-popover2\") : false);\r\n\r\n\r\n      if(!checkTooltip) {\r\n        this.setState(s => ({\r\n          ...s, tooltipOpen: false\r\n        }))\r\n\r\n        this.tooltipOnClickListener(true)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  tooltipOnClickListener(remove) {\r\n    if(remove) {\r\n      document.removeEventListener(\"click\", this.closeTooltip, {\r\n        capture: true\r\n      });\r\n    } else {\r\n      document.addEventListener(\"click\", this.closeTooltip, {\r\n        capture: true\r\n      });\r\n    }\r\n  }\r\n\r\n  tooltipOnMouseEnter() {\r\n    this.setState(s => ({\r\n      ...s, tooltipOpen: true\r\n    }))\r\n  }\r\n\r\n  tooltipOnMouseLeave() {\r\n    this.setState(s => ({\r\n      ...s, tooltipOpen: false\r\n    }))\r\n  }\r\n\r\n  onClickTooltip() {\r\n\r\n    this.setState(s => ({\r\n      ...s, tooltipOpen: !s.tooltipOpen\r\n    }))\r\n\r\n    this.tooltipOnClickListener()\r\n  };\r\n\r\n  /**\r\n   * Нужно ли обновить отображение обертки элементов\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.checkElementDisplay();\r\n    if (\r\n      appStore.getState().currentModel.getProperty(\"altrpModelUpdated\") &&\r\n      appStore\r\n        .getState()\r\n        .currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\r\n      !window.altrpHelpers.isEditor() &&\r\n      this.props.element.getName() === \"section\"\r\n    ) {\r\n      let title = appStore.getState().currentTitle;\r\n      title = window.altrpHelpers.replaceContentWithData(title);\r\n      if (appStore.getState().altrpPage.getProperty(\"title\") !== title) {\r\n        appStore.dispatch(changeCurrentPageProperty(\"title\", title));\r\n      }\r\n      window.altrpHelpers.setTitle(title);\r\n    }\r\n  }\r\n  /**\r\n   * Обновить элемент изменив this.state.updateToken\r\n   */\r\n  updateElement() {\r\n    this.setState(state => ({\r\n      ...state,\r\n      updateToken: window.altrpHelpers.altrpRandomId()\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Проверка видимости элемента\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  checkElementDisplay(prevProps, prevState) {\r\n    /**\r\n     * @member {FrontElement} element\r\n     */\r\n    const { element } = this.props;\r\n    if (! element.getSettings(\"conditional_other\")) {\r\n      return;\r\n    }\r\n    let conditions = element.getSettings(\"conditions\", []);\r\n    conditions = conditions.map(c => {\r\n      const {\r\n        conditional_model_field: modelField,\r\n        conditional_other_operator: operator,\r\n        conditional_other_condition_value: value\r\n      } = c;\r\n      return {\r\n        modelField,\r\n        operator,\r\n        value\r\n      };\r\n    });\r\n    let elementDisplay = window.altrpHelpers.conditionsChecker(\r\n      conditions,\r\n      element.getSettings(\"conditional_other_display\") === \"AND\",\r\n      this.props.element.getCurrentModel(),\r\n      true\r\n    );\r\n\r\n    if (this.state.elementDisplay === elementDisplay) {\r\n      return;\r\n    }\r\n\r\n    this.setState(state => ({\r\n      ...state,\r\n      elementDisplay\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Переключает видимость элемента\r\n   */\r\n  toggleElementDisplay() {\r\n    this.setState(state => ({\r\n      ...state,\r\n      elementDisplay: !state.elementDisplay\r\n    }));\r\n  }\r\n  /**\r\n   * Метод для проверки видимости поля формы\r\n   * @return {boolean}\r\n   */\r\n  inputIsDisplay() {\r\n    const { formsStore } = this.state;\r\n    const formId = this.props.element.getSettings(\"form_id\", \"\");\r\n    const logic = this.props.element.getSettings(\r\n      \"form_condition_display_on\",\r\n      \"AND\"\r\n    );\r\n    const formConditions = this.props.element.getSettings(\r\n      \"form_conditions\",\r\n      []\r\n    );\r\n    let display = true;\r\n    formConditions.forEach(c => {\r\n      if (logic === \"AND\") {\r\n        display *= window.altrpHelpers.altrpCompare(\r\n          _.get(formsStore, `${formId}.${c.field_id}`),\r\n          c.value,\r\n          c.operator\r\n        );\r\n      } else {\r\n        display += window.altrpHelpers.altrpCompare(\r\n          _.get(formsStore, `${formId}.${c.field_id}`),\r\n          c.value,\r\n          c.operator\r\n        );\r\n      }\r\n    });\r\n    return display;\r\n  }\r\n\r\n  render() {\r\n    /**\r\n     * @member {FrontElement} element\r\n     */\r\n    const {\r\n      element\r\n    } = this.props;\r\n    const tooltip_position = element.getResponsiveSetting('tooltip_position') || 'bottom'\r\n    let tooltip_text = this.props.element.getResponsiveSetting('tooltip_text')\r\n    const tooltip_minimal = this.props.element.getResponsiveSetting('tooltip_minimal')\r\n    let tooltip_show_type = this.props.element.getResponsiveSetting('tooltip_show_type')\r\n    const tooltip_horizontal_offset = this.props.element.getResponsiveSetting('tooltip_horizontal_offset')\r\n    const tooltip_vertical_offset = this.props.element.getResponsiveSetting('tooltip_vertical_offset')\r\n\r\n\r\n    if (this.state.errorInfo) {\r\n      return (\r\n        <div className=\"altrp-error\" data-eltype={this.props.element.getType()}>\r\n          <h2>Something went wrong.</h2>\r\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\r\n            {this.state.error && this.state.error.toString()}\r\n            <br />\r\n            {this.state.errorInfo.componentStack}\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n    const styles = {};\r\n    if (!this.state.elementDisplay) {\r\n      styles.display = \"none\";\r\n    }\r\n    let CSSId = this.props.element.getSettings(\"advanced_element_id\", \"\");\r\n    CSSId = window.altrpHelpers.replaceContentWithData(\r\n      CSSId,\r\n      this.props.element.getCurrentModel().getData()\r\n    );\r\n    if (this.CSSId !== CSSId) {\r\n      this.CSSId = CSSId;\r\n    }\r\n    let ContentComponent = frontElementsManager.getComponentClass(\r\n      this.props.element.getName()\r\n    );\r\n    let content\r\n    if (this.props.element.getName() === \"table\") {\r\n      content = <DndProvider backend={HTML5Backend}>{\r\n        React.createElement(ContentComponent, {\r\n          ref: this.elementRef,\r\n          rootElement: this.props.rootElement,\r\n          ElementWrapper: this.props.ElementWrapper,\r\n          element: this.props.element,\r\n          children: this.props.element.getChildren(),\r\n          match: this.props.match,\r\n          currentModel: this.props.currentModel,\r\n          currentUser: this.props.currentUser,\r\n          currentDataStorage: this.props.currentDataStorage,\r\n          altrpresponses: this.props.altrpresponses,\r\n          formsStore: this.props.formsStore,\r\n          elementDisplay: this.state.elementDisplay,\r\n          altrpPageState: this.props.altrpPageState,\r\n          altrpMeta: this.props.altrpMeta,\r\n          updateToken: this.state.updateToken,\r\n          currentScreen: this.props.currentScreen,\r\n          baseRender: this.props.baseRender,\r\n          history: this.props.history,\r\n          appStore\r\n        })}</DndProvider>;\r\n    } else {\r\n      content =\r\n        React.createElement(ContentComponent, {\r\n          ref: this.elementRef,\r\n          rootElement: this.props.rootElement,\r\n          ElementWrapper: this.props.ElementWrapper,\r\n          element: this.props.element,\r\n          children: this.props.element.getChildren(),\r\n          match: this.props.match,\r\n          currentModel: this.props.currentModel,\r\n          currentUser: this.props.currentUser,\r\n          currentDataStorage: this.props.currentDataStorage,\r\n          altrpresponses: this.props.altrpresponses,\r\n          formsStore: this.props.formsStore,\r\n          elementDisplay: this.state.elementDisplay,\r\n          altrpPageState: this.props.altrpPageState,\r\n          altrpMeta: this.props.altrpMeta,\r\n          updateToken: this.state.updateToken,\r\n          currentScreen: this.props.currentScreen,\r\n          baseRender: this.props.baseRender,\r\n          history: this.props.history,\r\n          appStore\r\n        })\r\n      ;\r\n    }\r\n    let WrapperComponent = TransparentDiv;\r\n\r\n    switch (this.props.element.getName()) {\r\n      case \"nav\":\r\n        WrapperComponent = NavComponent;\r\n        break;\r\n      case \"menu\":\r\n      case \"section\":\r\n        WrapperComponent = React.Fragment;\r\n        break;\r\n    }\r\n    tooltip_text = window.altrpHelpers.replaceContentWithData(\r\n      tooltip_text,\r\n      this.props.element.getCurrentModel().getData()\r\n    );\r\n\r\n    let wrapperProps = {\r\n      elementId: this.elementId,\r\n      settings: this.settings,\r\n      ref: this.wrapper,\r\n      style: styles,\r\n      onClick: tooltip_show_type === \"click\" ? this.onClickTooltip : null,\r\n      onMouseEnter: tooltip_show_type === \"hover\" ? this.tooltipOnMouseEnter : null,\r\n      onMouseLeave: tooltip_show_type === \"hover\" ? this.tooltipOnMouseLeave : null,\r\n    };\r\n    if (WrapperComponent === React.Fragment) {\r\n      wrapperProps = {};\r\n    }\r\n    this.updateHTMLElementDisplay()\r\n\r\n    if(['column', 'section'].indexOf(this.props.element.getType()) !== -1){\r\n      tooltip_show_type = 'never'\r\n    }\r\n    if(! this.props.element.getResponsiveSetting('tooltip_enable')){\r\n      tooltip_show_type = 'never'\r\n    }\r\n    return (\r\n      <>\r\n        {\r\n          tooltip_show_type && (tooltip_show_type !== \"never\" && tooltip_show_type !== \"Never\") ?\r\n            <AltrpTooltip2\r\n              element={this.wrapper}\r\n              text={tooltip_text}\r\n              id={this.props.element.getId()}\r\n              open={tooltip_show_type === \"always\" ? true : this.state.tooltipOpen}\r\n              position={tooltip_position}\r\n              minimal={tooltip_minimal}\r\n              horizontal={tooltip_horizontal_offset}\r\n              vertical={tooltip_vertical_offset}\r\n            /> : ''\r\n        }\r\n        <WrapperComponent {...wrapperProps} >\r\n          {content}\r\n        </WrapperComponent>\r\n\r\n      </>\r\n    );\r\n  }\r\n\r\n  updateHTMLElementDisplay() {\r\n    const HTMLElement = document.querySelector(`[data-react-element=\"${this.props.element.getId()}\"]`)\r\n    if(HTMLElement){\r\n      HTMLElement.style.display = this.state.elementDisplay ? null : 'none';\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    hideTriggers: state.hideTriggers,\r\n    altrpresponses: state.altrpresponses,\r\n    formsStore: state.formsStore,\r\n    currentDataStorage: state.currentDataStorage,\r\n    currentModel: state.currentModel,\r\n    currentUser: state.currentUser,\r\n    altrpMeta: state.altrpMeta,\r\n    altrpPageState: state.altrpPageState,\r\n    currentScreen: state.currentScreen\r\n  };\r\n}\r\n\r\nexport default window.reactRedux.connect(mapStateToProps)(SimpleElementWrapper);\r\n","export const ADD_ELEMENT = 'ADD_ELEMENT';\r\nexport const CLEAR_ELEMENTS = 'CLEAR_ELEMENTS';\r\n\r\n/**\r\n *\r\n * @param {React.Component}elementComponent\r\n * @return {{}} - {\r\n *     type: {string},\r\n *     sectionComponent: {React.Component},\r\n *   }\r\n */\r\nexport function addElement(elementComponent) {\r\n  return {\r\n    type: ADD_ELEMENT,\r\n    elementComponent\r\n  };\r\n}\r\n\r\n/**\r\n * Перед загрузкой новых данных, старые удаляем\r\n * @return {{type: string}}\r\n */\r\nexport function clearElements() {\r\n  return {\r\n    type: CLEAR_ELEMENTS,\r\n  };\r\n}\r\n\r\n"],"sourceRoot":""}