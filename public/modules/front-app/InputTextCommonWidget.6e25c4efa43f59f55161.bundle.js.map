{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./resources/modules/editor/src/js/components/widgets/InputTextAutocompleteWidget.js","webpack:///./resources/modules/editor/src/js/components/widgets/InputTextCommonWidget.js","webpack:///./resources/modules/editor/src/js/components/widgets/InputTextWidget.js"],"names":["_assertThisInitialized","self","ReferenceError","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_setPrototypeOf","o","p","setPrototypeOf","__proto__","window","altrpHelpers","isEditor","replaceContentWithData","renderAsset","getDataByPath","parseOptionsFromSettings","getDataFromLocalStorage","altrpLibs","Blueprint","MenuItem","Menu","Popover2","BlueprintPopover","globalDefaults","push","AltrpFieldContainer","styled","div","settings","content_label_position_type","InputTextCommonWidget","props","timeInput","handleEnter","e","setState","state","isOpen","keyCode","preventDefault","inputs","Array","from","document","querySelectorAll","index","indexOf","target","undefined","focus","element","getSettings","create_allowed","create_label","create_url","createItem","getValue","formId","getFormId","fieldName","getFieldId","_","get","appStore","getState","formsStore","onChange","dispatchFieldValueToStore","typing_actions","actionsManager","default","callAllWidgetActions","getIdForAction","onFocus","focus_actions","onBlur","setTimeout","userInput","isObject","dispatch","changeFormFieldValue","change_actions","handleLockClick","showPassword","onSelect","select_actions","len","length","input","inputRef","current","setSelectionRange","createTextRange","t","collapse","moveEnd","moveStart","select","itemRenderer","text","onClick","component","elementDecorator","defaultValue","getContent","popoverRef","React","createRef","options","popoverProps","usePortal","portalClassName","getId","portalContainer","EditorFrame","contentWindow","body","altrpSelectRef","this","prevProps","prevState","currentModel","getProperty","contentLoaded","currentDataStorage","content_options","getResponsiveSetting","isString","replace","isArray","filter","label","toLocaleLowerCase","map","uniq","find","updateValue","content_calculation","altrpforms","prevContext","altrpdata","getData","altrpmodel","altrpuser","currentUser","altrppagestate","altrpPageState","altrpresponses","altrpmeta","altrpMeta","context","getCurrentModel","currentDataStorageLoaded","changedField","altrpstorage","isEqual","eval","console","error","message","path","left_icon","password_show_left_icon","content_type","leftIconProps","style","cursor","className","tabIndex","right_icon","password_show_right_icon","rightIconProps","content_readonly","label_icon","classLabel","styleLabel","label_icon_position","label_style_spacing","marginBottom","size","unit","marginTop","marginRight","position","zIndex","content_label","htmlFor","getName","display","flexDirection","content_required","type","getOptions","disabled","minimal","autoFocus","fill","content","name","id","readOnly","placeholder","content_placeholder","onKeyDown","leftIcon","renderLeftIcon","rightElement","renderRightIcon","Component","debounceDispatch","debounce","bind","change_change_end","change_change_end_delay","clearTimeout","autocomplete","content_autocomplete","autoComplete","convertData","parseParamsFromString","parseURLTemplate","renderAssetIcon","InputTextWidget","editor","inputValue","create_data","select2_multiple","data","url","isDisabled","resource","Resource","route","post","res","success","newOption","unshift","selectStateManager","menuIsOpen","paramsForUpdate","model_for_options","dynamic","updateOptions","formData","AltrpModel","isEmpty","JSON","stringify","getRoute","getQueried","filters","getAll","valueToDispatch","cloneDeep","optionsDynamicSetting","getDynamicSetting","sortBy","toString","assetType","isClearable","content_clearable","position_css_classes","position_css_id"],"mappings":"0FAAe,SAASA,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,E,oECLM,SAASE,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,E,oECZM,SAASQ,EAAgBC,EAAGC,GAMzC,OALAF,EAAkBL,OAAOQ,gBAAkB,SAAyBF,EAAGC,GAErE,OADAD,EAAEG,UAAYF,EACPD,IAGcA,EAAGC,G,03FCL5B,yBAOIG,OAAOC,aANTC,SADF,qBACEA,SACAC,uBAFF,qBAEEA,uBACAC,YAHF,qBAGEA,YACAC,cAJF,qBAIEA,cACAC,yBALF,qBAKEA,yBACAC,wBANF,qBAMEA,wBAEF,sBAEUP,OAAOQ,UAAUC,UADzBC,SADF,sBACEA,SACAC,KAFF,sBAEEA,KAEAC,SACIZ,OAAOQ,UAAUK,iBADrBD,UAMDZ,OAAOc,eAAiBd,OAAOc,gBAAkB,IAAIC,KAArD,6tPAiWD,IAAMC,oBAAsBC,OAAOC,IAAV,mIACrB,YACF,OADiD,EAA7CC,SAAWC,6BAEb,IAAK,OACH,MAAO,gBAET,IAAK,QACH,MAAO,oEAGX,MAAO,MAIHC,sB,kNAGJ,+BAAYC,GAAO,kHACjB,mBAAMA,IAHRC,UAAY,KAEO,EA0CnBC,YAAc,SAAAC,GAEZ,GADA,EAAKC,UAAS,SAAAC,GAAK,sCAAOA,GAAP,IAAcC,QAAQ,OACvB,KAAdH,EAAEI,QAAgB,CACpBJ,EAAEK,iBACF,IAAMC,EAASC,MAAMC,KAAKC,SAASC,iBAAiB,iBAC9CC,EAAQL,EAAOM,QAAQZ,EAAEa,QAC/B,QAAcC,IAAVH,EAAqB,OACzBL,EAAOK,EAAQ,IAAML,EAAOK,EAAQ,GAAGI,QACvC,MAII,EAAKlB,MAAMmB,QAAQC,cAHrBC,EADF,EACEA,eACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,WAEEF,GAAkBC,GAAgBC,GACpC,EAAKC,WAAWrB,KAxDH,EAgJnBsB,SAAW,WACT,IAAI1D,EACA2D,EAAS,EAAK1B,MAAMmB,QAAQQ,YAC5BC,EAAY,EAAK5B,MAAMmB,QAAQU,aAOnC,OANIjD,WACFb,EAAQ,EAAKsC,MAAMtC,OAEnBA,EAAQ+D,EAAEC,IAAIC,SAASC,WAAWC,WAA1B,UAAyCR,GAAU,IAC3D3D,EAAQ+D,EAAEC,IAAIhE,EAAO6D,EAAW,KAE3B7D,GA1JU,EA0TnBoE,SA1TmB,oKA0TR,WAAOhC,GAAP,4IACLpC,EAAQ,GACRoC,GAAKA,EAAEa,SACTjD,EAAQoC,EAAEa,OAAOjD,OAGfoC,GAAKA,EAAEpC,QACTA,EAAQoC,EAAEpC,QAGTa,WAVM,gBAWP,EAAKwB,UAAS,SAAAC,GAAK,sCAAOA,GAAP,IAActC,aAX1B,0BAcP,EAAKqE,0BAA0BrE,GAAO,KAEhCsE,EAAiB,EAAKrC,MAAMmB,QAAQC,YAAY,mBAhB/C,kCAoBG,wLApBH,eAmBCkB,EAnBD,OAwBHC,QAxBG,UAyBCD,EAAeE,qBACnB,EAAKxC,MAAMmB,QAAQsB,iBACnB,SACAJ,EACA,EAAKrC,MAAMmB,SA7BR,4CA1TQ,wDAqWnBuB,QArWmB,oKAqWT,WAAMvC,GAAN,4IACFwC,EAAgB,EAAK3C,MAAMmB,QAAQC,YAAY,mBAE/BxC,WAHd,gCAKE,wLALF,cAIA0D,EAJA,OASJC,QATI,SAUAD,EAAeE,qBACnB,EAAKxC,MAAMmB,QAAQsB,iBACnB,QACAE,EACA,EAAK3C,MAAMmB,SAdP,2CArWS,wDA2XnByB,OA3XmB,oKA2XV,WAAOzC,GAAP,wIACP,EAAKiC,0BAA0BjC,EAAEa,OAAOjD,OAAO,GAC/C8E,YAAW,WACT,EAAKzC,UAAS,SAAAC,GAAK,sCAAOA,GAAP,IAAcC,QAAQ,SACxC,MAEC,EAAKN,MAAMmB,QAAQC,YAAY,UAAW,KAAQxC,WAN/C,gCAQG,wLARH,cAOC0D,EAPD,OAYHC,QAZG,SAaCD,EAAeE,qBACnB,EAAKxC,MAAMmB,QAAQsB,iBACnB,OACA,EAAKzC,MAAMmB,QAAQC,YAAY,UAAW,IAC1C,EAAKpB,MAAMmB,SAjBR,2CA3XU,wDAqZnBiB,0BArZmB,oKAqZS,WAAOrE,GAAP,4JAAc+E,EAAd,gCACtBpB,EAAS,EAAK1B,MAAMmB,QAAQQ,aAEC,KAD7BC,EAAY,EAAK5B,MAAMmB,QAAQU,cACrBd,QAAQ,QACpBa,EAAY/C,uBAAuB+C,MAEjCE,EAAEiB,SAAS,EAAK/C,MAAMgC,WAAaJ,GAAaF,GAN1B,oBAOxB,EAAK1B,MAAMgC,SAASgB,UAClBC,sFAAqBrB,EAAW7D,EAAO2D,EAAQoB,KAE7CA,EAVoB,sBAWhBI,EAAiB,EAAKlD,MAAMmB,QAAQC,YAAY,oBAE/BxC,WAbD,kCAeZ,wLAfY,eAcd0D,EAdc,OAmBlBC,QAnBkB,UAoBdD,EAAeE,qBACnB,EAAKxC,MAAMmB,QAAQsB,iBACnB,SACAS,EACA,EAAKlD,MAAMmB,SAxBO,4CArZT,wDA4bnBgC,gBAAkB,WAChB,EAAK/C,UAAS,SAACC,GACb,sCACKA,GADL,IAEE+C,cAAe/C,EAAM+C,mBAhcR,EAwfnBC,SAxfmB,oKAwfR,WAAMlD,GAAN,gJACHmD,EAAiB,EAAKtD,MAAMmB,QAAQC,YAAY,kBAClDmC,EAAM,EAAK9B,WAAW+B,QACtBC,EAAQ,EAAKC,SAASC,WAGpBF,EAAMG,mBACRH,EAAMvC,QACNuC,EAAMG,kBAAkBL,EAAKA,IACpBE,EAAMI,mBACXC,EAAIL,EAAMI,mBACZE,UAAS,GACXD,EAAEE,QAAQ,YAAaT,GACvBO,EAAEG,UAAU,YAAaV,GACzBO,EAAEI,YAGFZ,EAjBK,iCAmBC,wLAnBD,cAkBDhB,EAlBC,OAuBLC,QAvBK,UAwBDD,EAAeE,qBACnB,EAAKxC,MAAMmB,QAAQsB,iBACnB,sBACAa,EACA,EAAKtD,MAAMmB,SA5BN,4CAxfQ,wDA8hBnBgD,aAAe,SAACC,EAAMtD,GACpB,OAAO,oBAAC1B,SAAD,CACLiF,QAAS,SAAClE,GACR,EAAKiC,0BAA0BgC,GAAM,GACrC,EAAKf,SAASlD,IAGhBrC,IAAKsG,EAAOtD,EACZsD,KAAMA,KApiBRpE,EAAMmB,QAAQmD,WAAd,mFACI5F,OAAO6F,kBACT7F,OAAO6F,kBAAP,oFAGF,EAAKC,aAAe,EAAKC,WAAW,yBACpC,EAAKC,WAAaC,MAAMC,YACxB,EAAKlB,SAAWiB,MAAMC,YACtB,EAAKvE,MAAQ,CACXR,SAAU,cAAF,GAAMG,EAAMmB,QAAQC,eAC5BgC,cAAc,EACd9C,QAAQ,EACRuE,QAAS7F,yBACPgB,EAAMmB,QAAQC,YAAY,aAG9B,EAAK0D,aAAe,CAClBC,WAAW,EAEXC,gBAAiB,4BAAF,OAA8B,EAAKhF,MAAMmB,QAAQ8D,SAChEC,gBAAiBxG,OAAOyG,YAAczG,OAAOyG,YAAYC,cAAcxE,SAASyE,KAAOzE,SAASyE,MAElG,EAAKC,eAAiBX,MAAMC,YACxB,EAAKH,WAAW,0BAClB,EAAKrC,0BAA0B,EAAKqC,WAAW,0BA1BhC,E,4HAiCnB,WAEEc,KAAKnD,0BADO,IAC0B,K,wMA+BxC,WAAyBoD,EAAWC,GAApC,+IACM1H,EAAQwH,KAAK9D,YAMf+D,GACCA,EAAUE,aAAaC,YAAY,uBACpCJ,KAAKvF,MAAM0F,aAAaC,YAAY,qBATxC,uBAWI5H,EAAQwH,KAAKd,WAAW,yBACxBc,KAAKnF,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBuF,eAAe,OACpC,WACE,EAAKxD,0BAA0BrE,MAfvC,8BAqBIwH,KAAKvF,MAAM0F,aAAaC,YAAY,uBACpCJ,KAAKvF,MAAM6F,mBAAmBF,YAAY,6BACzCJ,KAAKlF,MAAMuF,cAvBhB,uBAyBI7H,EAAQwH,KAAKd,WAAW,yBACxBc,KAAKnF,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBuF,eAAe,OACpC,WACE,EAAKxD,0BAA0BrE,MA7BvC,mE,0FAmCA,WACE,IAAKwH,KAAK9D,WACR,MAAO,GAET,IAAIoD,EAAUU,KAAKlF,MAAMwE,QACrB1D,EAAUoE,KAAKvF,MAAMmB,QACnB2E,EAAkBP,KAAKvF,MAAMmB,QAAQ4E,qBAAqB,WAC7DjE,EAAEkE,SAASF,IACyB,IAAlCA,EAAgB/E,QAAQ,QAC3B8D,EAAU9F,cAAc+G,EAAgBG,QAAQ,KAAM,IAAIA,QAAQ,KAAM,KAClEnE,EAAEoE,QAAQrB,KACdA,EAAU,KAGd,IAAM9G,EAAQwH,KAAK9D,WAuBnB,MAtB8C,mBAA3CN,EAAQ4E,qBAAqB,YAC9BlB,EAAUA,EAAQsB,QAAO,SAAA7H,GACN,QAOjB,OAPGwD,EAAEiB,SAASzE,IAEH,KADTA,GAAM,QAAD,EAAAA,SAAA,eAAG8H,SAAH,UAAW9H,SAAX,aAAW,EAAGP,UAEjBO,EAAI,MAGRA,GAAK,IACI+H,oBAAoBtF,QAAQhD,EAAMsI,sBAAwB,MAGvExB,EAAUA,EAAQyB,KAAI,SAAAhI,GACpB,OAAKwD,EAAEiB,SAASzE,IAGTA,aAAA,EAAAA,EAAG8H,SAAQ9H,aAAX,EAAWA,EAAGP,QAAS,GAFrBO,KAKW,KADtBuG,EAAU/C,EAAEyE,KAAK1B,IACNrB,QAAgBqB,EAAQ2B,MAAK,SAAAlI,GAAC,OAAEA,GAAGP,OAC5C8G,EAAU,IAELA,I,0MAsBT,WAA0BW,EAAWC,GAArC,4IAEID,IACCA,EAAUK,mBAAmBF,YAAY,6BAC1CJ,KAAKvF,MAAM6F,mBAAmBF,YAAY,8BAEtC5H,EAAQwH,KAAKd,WACf,yBAEFc,KAAKnF,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBuF,eAAe,OACpC,WACE,EAAKxD,0BAA0BrE,OAMrCwH,KAAKkB,YAAYjB,GAlBnB,gD,4FAyBA,SAAAiB,YAAYjB,WAAW,gBACrB,IAAI5G,WAAJ,CAGA,IAAI8H,oBAAsBnB,KAAKvF,MAAMmB,QAAQC,YAC3C,uBAEIuF,WAAapB,KAAKvF,MAAMkC,WACxBN,UAAY2D,KAAKvF,MAAMmB,QAAQU,aAC/BH,OAAS6D,KAAKvF,MAAMmB,QAAQQ,YAClC,GAAK+E,oBAAL,CAiBA,IAAME,YAAc,GAEdC,UAAYtB,KAAKvF,MAAM6F,mBAAmBiB,UAC1CC,WAAaxB,KAAKvF,MAAM0F,aAAaoB,UACrCE,UAAYzB,KAAKvF,MAAMiH,YAAYH,UACnCI,eAAiB3B,KAAKvF,MAAMmH,eAAeL,UAC3CM,eAAiB7B,KAAKvF,MAAMoH,eAAeN,UAC3CO,UAAY9B,KAAKvF,MAAMsH,UAAUR,UACjCS,QAAUhC,KAAKvF,MAAMmB,QAAQqG,kBAAkBV,UAiDrD,IAhDkD,IAA9CJ,oBAAoB3F,QAAQ,eAC9BwG,QAAQV,UAAYA,UACfA,UAAUY,yBAGbb,YAAYC,UAAYrB,UAAUK,mBAAmBiB,UAFrDF,YAAYC,UAAYA,YAKuB,IAA/CH,oBAAoB3F,QAAQ,gBAC9BwG,QAAQZ,WAAaA,WAIjB,UAAGjF,OAAH,YAAaE,aAAgB+E,WAAWe,aAC1Cd,YAAYD,WAAaA,WAEzBC,YAAYD,WAAanB,UAAUtD,aAGY,IAA/CwE,oBAAoB3F,QAAQ,gBAC9BwG,QAAQR,WAAaA,WACrBH,YAAYG,WAAavB,UAAUE,aAAaoB,YAEA,IAA9CJ,oBAAoB3F,QAAQ,eAC9BwG,QAAQP,UAAYA,UACpBJ,YAAYI,UAAYxB,UAAUyB,YAAYH,YAEE,IAA9CJ,oBAAoB3F,QAAQ,eAC9BwG,QAAQP,UAAYA,UACpBJ,YAAYI,UAAYxB,UAAUyB,YAAYH,YAEO,IAAnDJ,oBAAoB3F,QAAQ,oBAC9BwG,QAAQL,eAAiBA,eACzBN,YAAYM,eAAiB1B,UAAU2B,eAAeL,YAEN,IAA9CJ,oBAAoB3F,QAAQ,eAC9BwG,QAAQF,UAAYA,UACpBT,YAAYS,UAAY7B,UAAU8B,UAAUR,YAES,IAAnDJ,oBAAoB3F,QAAQ,oBAC9BwG,QAAQH,eAAiBA,eACzBR,YAAYQ,eAAiB5B,UAAU4B,eAAeN,YAGH,IAAjDJ,oBAAoB3F,QAAQ,kBAC9BwG,QAAQI,aAAe1I,wBAAwB,eAAgB,OAI/D6C,EAAE8F,QAAQpC,UAAUK,mBAAoBN,KAAKvF,MAAM6F,qBACnD/D,EAAE8F,QAAQpC,UAAUyB,YAAa1B,KAAKvF,MAAMiH,cAC5CnF,EAAE8F,QAAQpC,UAAUtD,WAAYqD,KAAKvF,MAAMkC,aAC3CJ,EAAE8F,QAAQpC,UAAU2B,eAAgB5B,KAAKvF,MAAMmH,iBAC/CrF,EAAE8F,QAAQpC,UAAU8B,UAAW/B,KAAKvF,MAAMsH,YAC1CxF,EAAE8F,QAAQpC,UAAU4B,eAAgB7B,KAAKvF,MAAMoH,iBAC/CtF,EAAE8F,QAAQpC,UAAUE,aAAcH,KAAKvF,MAAM0F,iBAK5C5D,EAAE8F,QAAQpC,UAAUtD,WAAYqD,KAAKvF,MAAMkC,aAC5C,UAAGR,OAAH,YAAaE,aAAgB+E,WAAWe,cAF1C,CAMA,IAAI3J,MAAQ,GACZ,IAKE,GAJA2I,oBAAsBA,oBACnBT,QAAQ,MAAO,MACfA,QAAQ,MAAO,oBAClBlI,MAAQ8J,KAAKnB,qBACT3I,QAAUwH,KAAKlF,MAAMtC,MACvB,OAEFwH,KAAKnF,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBtC,iBACrB,WACE,OAAKqE,0BAA0BrE,UAGnC,MAAOoC,GACP2H,QAAQC,MACN,6BAA+B5H,EAAE6H,QAAU,IAC3CzC,KAAKvF,MAAMmB,QAAQ8D,eA7GvB,CAIE,IAAMgD,KAAO,GAAH,OAAMvG,OAAN,YAAgBE,WAExB2D,KAAKvF,MAAMkC,aAAesD,UAAUtD,YACpCJ,EAAEC,IAAI4E,WAAYsB,QAAU1C,KAAKlF,MAAMtC,OAEvCwH,KAAKnF,UAAS,SAAAC,GAAK,sCACdA,GADc,IAEjBtC,MAAO+D,EAAEC,IAAI4E,WAAYsB,e,qBA0OjC,WACE,gBAAU1C,KAAKvF,MAAMmB,QAAQQ,YAA7B,YAA4C4D,KAAKvF,MAAMmB,QAAQU,aAA/D,O,4BAYF,WACE,IAAOV,EAAWoE,KAAKvF,MAAhBmB,QACH+G,EAAY/G,EAAQ4E,qBAAqB,aACzCoC,EAA0BhH,EAAQ4E,qBAAqB,2BACpDqC,EAAgBjH,EAAQtB,SAAxBuI,aACDC,EAAgB,GAWtB,MAVoB,aAAjBD,GAA+B7C,KAAKlF,MAAM+C,cAAgB+E,IAC3DD,EAAYC,EACZE,EAAchE,QAAUkB,KAAKpC,iBAEX,aAAjBiF,GAA+BD,IAChCE,EAAchE,QAAUkB,KAAKpC,gBAC7BkF,EAAcC,MAAQ,CACpBC,OAAQ,YAGRL,EAGG,+FAAMM,UAAU,+CAAkDH,EAAlE,CAAiFI,SAAS,MAC9F3J,YAAYoJ,IAHN,O,6BAMX,WACE,IAAO/G,EAAWoE,KAAKvF,MAAhBmB,QACHuH,EAAavH,EAAQ4E,qBAAqB,cAC1C4C,EAA2BxH,EAAQ4E,qBAAqB,4BACrDqC,EAAgBjH,EAAQtB,SAAxBuI,aACDQ,EAAiB,GAUvB,MAToB,aAAjBR,GAA+B7C,KAAKlF,MAAM+C,cAAgBuF,IAC3DD,EAAaC,GAEK,aAAjBP,GAA+BO,IAChCC,EAAevE,QAAUkB,KAAKpC,gBAC9ByF,EAAeN,MAAQ,CACrBC,OAAQ,YAGRG,EAGG,+FAAMF,UAAU,gDAAmDI,EAAnE,CAAmFH,SAAS,MAChG3J,YAAY4J,IAHN,O,oBA6DX,WACE,IAAItC,EACEvG,EAAW0F,KAAKvF,MAAMmB,QAAQC,cAElCyH,EAEEhJ,EAFFgJ,iBACAC,EACEjJ,EADFiJ,WAEE/K,EAAQwH,KAAK9D,WAEbsH,EAAa,GACbC,EAAa,GACXlJ,EAA8ByF,KAAKvF,MAAMmB,QAAQ4E,qBACrD,gCACG,MACCkD,EAAsB1D,KAAKvF,MAAMmB,QAAQ4E,qBAAqB,uBAChEmD,EAAsB3D,KAAKvF,MAAMmB,QAAQ4E,qBAAqB,uBAClE,OAAQjG,GACN,IAAK,MACHkJ,EAAa,CACXG,aAAcD,GACVA,aAAA,EAAAA,EAAqBE,OACvBF,aADE,EACFA,EAAqBG,MACnB,OAENN,EAAa,GACb,MACF,IAAK,SACHC,EAAa,CACXM,UAAWJ,GACPA,aAAA,EAAAA,EAAqBE,OACvBF,aADE,EACFA,EAAqBG,MACnB,OAENN,EAAa,GACb,MACF,IAAK,OACHC,EAAa,CACXO,YAAaL,GACTA,aAAA,EAAAA,EAAqBE,OACvBF,aADE,EACFA,EAAqBG,MACnB,OAENN,EAAa,mCACb,MACF,IAAK,WACHC,EAAa,CACXQ,SAAU,WACVC,OAAQ,GAEVV,EAAa,GAKf3C,EADEb,KAAKlF,MAAMR,SAAS6J,eAAiBZ,EAErC,2BACEN,UAAW,+BAAiCO,EAC5CT,MAAOU,GAEP,6BACEW,QAASpE,KAAKqE,UACdtB,MAAO,CACLuB,QAAS,OACTC,cAAeb,GAEjBT,UAAS,0DAAqDjD,KAAKlF,MAAMR,SAASkK,iBAC9E,8BACA,KAGHxE,KAAKlF,MAAMR,SAAS6J,cAEpBZ,GAAcA,EAAWkB,MACxB,4BAAMxB,UAAU,oBACf1J,YAAYgK,MAOb,KAEV,IAAIjE,EAAUU,KAAK0E,aAEfxG,EACF,2BAAK+E,UAAU,wDACb,oBAAClJ,SAAD,CACEgB,OAAQiF,KAAKlF,MAAMC,OAEnB4J,UAAWrF,EAAQrB,OACnB2G,SAAS,EACTC,WAAW,EACXC,MAAM,EACNb,SAAS,SACT9E,WAAYa,KAAKb,WACjBK,WAAW,EACXuF,QAAS,oBAACjL,KAAD,KACNwF,EAAQyB,IAAIf,KAAKpB,gBAGpB,oBAAC,uDAAD,CACET,SAAU6B,KAAK7B,SACfsG,KAA2C,aAArCzE,KAAKlF,MAAMR,SAASuI,aAA+B7C,KAAKlF,MAAM+C,aAAe,OAAS,WAAcmC,KAAKlF,MAAMR,SAASuI,aAC9HmC,KAAMhF,KAAKqE,UACXY,GAAIjF,KAAKqE,UACT7L,MAAOA,GAAS,GAChB+G,aAAcS,KAAKT,aACnB3D,QAASoE,KAAKvF,MAAMmB,QACpBsJ,SAAU5B,EACV6B,YAAanF,KAAKlF,MAAMR,SAAS8K,oBACjC9K,SAAU0F,KAAKvF,MAAMmB,QAAQC,cAC7BwJ,UAAWrF,KAAKrF,YAChBiC,SAAUoD,KAAKpD,SACfS,OAAQ2C,KAAK3C,OACbF,QAAS6C,KAAK7C,QACdmI,SAAUtF,KAAKuF,iBACfC,aAAcxF,KAAKyF,sBAQ3B,OACE,oBAACtL,oBAAD,CACEG,SAAUA,EACV2I,UAAU,0BAEuB,QAAhC1I,EAAwCsG,EAAQ,GAChB,SAAhCtG,EAAyCsG,EAAQ,GACjB,UAAhCtG,EAA0CsG,EAAQ,GAClB,aAAhCtG,EAA6CsG,EAAQ,GAErD3C,EACgC,WAAhC3D,EAA2CsG,EAAQ,Q,uBAprBxB6E,WA0rBpC,mD,y1FC5jCA,yBAKIvM,OAAOC,aAJTC,SADF,qBACEA,SACAC,uBAFF,qBAEEA,uBACAC,YAHF,qBAGEA,YACAG,wBAJF,qBAIEA,yBAMDP,OAAOc,eAAiBd,OAAOc,gBAAkB,IAAIC,KAArD,+nPA4VD,IAAMC,oBAAsBC,OAAOC,IAAV,mIACrB,YACF,OADiD,EAA7CC,SAAWC,6BAEb,IAAK,OACH,MAAO,gBAET,IAAK,QACH,MAAO,oEAGX,MAAO,MAIHC,sB,kNAGJ,+BAAYC,GAAO,kHACjB,mBAAMA,IAHRC,UAAY,KAEO,EAuCnBC,YAAc,SAAAC,GACZ,GAAkB,KAAdA,EAAEI,QAAgB,CACpBJ,EAAEK,iBACF,IAAMC,EAASC,MAAMC,KAAKC,SAASC,iBAAiB,iBAC9CC,EAAQL,EAAOM,QAAQZ,EAAEa,QAC/B,QAAcC,IAAVH,EAAqB,OACzBL,EAAOK,EAAQ,IAAML,EAAOK,EAAQ,GAAGI,QACvC,MAII,EAAKlB,MAAMmB,QAAQC,cAHrBC,EADF,EACEA,eACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,WAEEF,GAAkBC,GAAgBC,GACpC,EAAKC,WAAWrB,KApDH,EAuGnBsB,SAAW,WACT,IAAI1D,EACA2D,EAAS,EAAK1B,MAAMmB,QAAQQ,YAC5BC,EAAY,EAAK5B,MAAMmB,QAAQU,aAOnC,OANIjD,WACFb,EAAQ,EAAKsC,MAAMtC,OAEnBA,EAAQ+D,EAAEC,IAAIC,SAASC,WAAWC,WAA1B,UAAyCR,GAAU,IAC3D3D,EAAQ+D,EAAEC,IAAIhE,EAAO6D,EAAW,KAE3B7D,GAjHU,EA4TnBmN,iBAAmBpJ,EAAEqJ,UACnB,SAAApN,GAAK,OAAI,EAAKqE,0BAA0BrE,GAAO,KAC/C,KA9TiB,EAwUnB2E,QAxUmB,oKAwUT,WAAMvC,GAAN,4IACFwC,EAAgB,EAAK3C,MAAMmB,QAAQC,YAAY,mBAE/BxC,WAHd,gCAKE,wLALF,cAIA0D,EAJA,OASJC,QATI,SAUAD,EAAeE,qBACnB,EAAKxC,MAAMmB,QAAQsB,iBACnB,QACAE,EACA,EAAK3C,MAAMmB,SAdP,2CAxUS,wDA+VnByB,OA/VmB,oKA+VV,WAAOzC,GAAP,oLACP,EAAKiC,0BAA0BjC,EAAEa,OAAOjD,OAAO,IAE3C,EAAKiC,MAAMmB,QAAQC,YAAY,UAAW,KAAQxC,WAH/C,gCAKG,wLALH,cAIC0D,EAJD,OASHC,QATG,SAUCD,EAAeE,qBACnB,EAAKxC,MAAMmB,QAAQsB,iBACnB,OACA,EAAKzC,MAAMmB,QAAQC,YAAY,UAAW,IAC1C,EAAKpB,MAAMmB,SAdR,2CA/VU,wDAsXnBiB,0BAtXmB,oKAsXS,WAAOrE,GAAP,4JAAc+E,EAAd,gCACtBpB,EAAS,EAAK1B,MAAMmB,QAAQQ,aAEC,KAD7BC,EAAY,EAAK5B,MAAMmB,QAAQU,cACrBd,QAAQ,QACpBa,EAAY/C,uBAAuB+C,MAGjCE,EAAEiB,SAAS,EAAK/C,MAAMgC,WAAaJ,GAAaF,GAP1B,oBAQxB,EAAK1B,MAAMgC,SAASgB,UAClBC,sFAAqBrB,EAAW7D,EAAO2D,EAAQoB,KAE7CA,EAXoB,sBAYhBI,EAAiB,EAAKlD,MAAMmB,QAAQC,YAAY,oBAE/BxC,WAdD,kCAgBZ,wLAhBY,eAed0D,EAfc,OAoBlBC,QApBkB,UAqBdD,EAAeE,qBACnB,EAAKxC,MAAMmB,QAAQsB,iBACnB,SACAS,EACA,EAAKlD,MAAMmB,SAzBO,4CAtXT,wDA8ZnBgC,gBAAkB,WAChB,EAAK/C,UAAS,SAACC,GACb,sCACKA,GADL,IAEE+C,cAAe/C,EAAM+C,mBAhazBpD,EAAMmB,QAAQmD,WAAd,mFACI5F,OAAO6F,kBACT7F,OAAO6F,kBAAP,oFAEF,EAAKpC,SAAW,EAAKA,SAASiJ,MAAd,oFAChB,EAAKF,iBAAmB,EAAKA,iBAAiBE,MAAtB,oFAExB,EAAK5G,aAAe,EAAKC,WAAW,yBAEpC,EAAKpE,MAAQ,CACXR,SAAU,cAAF,GAAMG,EAAMmB,QAAQC,eAC5BgC,cAAc,GAEhB,EAAK0B,aAAe,CAClBC,WAAW,EAEXC,gBAAiB,4BAAF,OAA8B,EAAKhF,MAAMmB,QAAQ8D,SAChEC,gBAAiBxG,OAAOyG,YAAczG,OAAOyG,YAAYC,cAAcxE,SAASyE,KAAOzE,SAASyE,MAE9F,EAAKZ,WAAW,0BAClB,EAAKrC,0BAA0B,EAAKqC,WAAW,0BAtBhC,E,4HA6BnB,WAEEc,KAAKpD,SADO,IAEZoD,KAAKnD,0BAFO,IAE0B,K,wMA8BxC,WAAyBoD,EAAWC,GAApC,+IAEM1H,EAAQwH,KAAK9D,YAMf+D,GACCA,EAAUE,aAAaC,YAAY,uBACpCJ,KAAKvF,MAAM0F,aAAaC,YAAY,qBAVxC,uBAYI5H,EAAQwH,KAAKd,WAAW,yBACxBc,KAAKnF,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBuF,eAAe,OACpC,WACE,EAAKxD,0BAA0BrE,MAhBvC,8BAsBIwH,KAAKvF,MAAM0F,aAAaC,YAAY,uBACpCJ,KAAKvF,MAAM6F,mBAAmBF,YAAY,6BACzCJ,KAAKlF,MAAMuF,cAxBhB,uBA0BI7H,EAAQwH,KAAKd,WAAW,yBACxBc,KAAKnF,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBuF,eAAe,OACpC,WACE,EAAKxD,0BAA0BrE,MA9BvC,mE,4QAyDA,WAA0ByH,EAAWC,GAArC,4IAEID,IACCA,EAAUK,mBAAmBF,YAAY,6BAC1CJ,KAAKvF,MAAM6F,mBAAmBF,YAAY,8BAEtC5H,EAAQwH,KAAKd,WACf,yBAEFc,KAAKnF,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBuF,eAAe,OACpC,WACE,EAAKxD,0BAA0BrE,OAMrCwH,KAAKkB,YAAYjB,GAlBnB,gD,4FAyBA,SAAAiB,YAAYjB,WAAW,gBACrB,IAAI5G,WAAJ,CAGA,IAAI8H,oBAAsBnB,KAAKvF,MAAMmB,QAAQC,YAC3C,uBAEIuF,WAAapB,KAAKvF,MAAMkC,WACxBN,UAAY2D,KAAKvF,MAAMmB,QAAQU,aAC/BH,OAAS6D,KAAKvF,MAAMmB,QAAQQ,YAClC,GAAK+E,oBAAL,CAiBA,IAAME,YAAc,GAEdC,UAAYtB,KAAKvF,MAAM6F,mBAAmBiB,UAC1CC,WAAaxB,KAAKvF,MAAM0F,aAAaoB,UACrCE,UAAYzB,KAAKvF,MAAMiH,YAAYH,UACnCI,eAAiB3B,KAAKvF,MAAMmH,eAAeL,UAC3CM,eAAiB7B,KAAKvF,MAAMoH,eAAeN,UAC3CO,UAAY9B,KAAKvF,MAAMsH,UAAUR,UACjCS,QAAUhC,KAAKvF,MAAMmB,QAAQqG,kBAAkBV,UAiDrD,IAhDkD,IAA9CJ,oBAAoB3F,QAAQ,eAC9BwG,QAAQV,UAAYA,UACfA,UAAUY,yBAGbb,YAAYC,UAAYrB,UAAUK,mBAAmBiB,UAFrDF,YAAYC,UAAYA,YAKuB,IAA/CH,oBAAoB3F,QAAQ,gBAC9BwG,QAAQZ,WAAaA,WAIjB,UAAGjF,OAAH,YAAaE,aAAgB+E,WAAWe,aAC1Cd,YAAYD,WAAaA,WAEzBC,YAAYD,WAAanB,UAAUtD,aAGY,IAA/CwE,oBAAoB3F,QAAQ,gBAC9BwG,QAAQR,WAAaA,WACrBH,YAAYG,WAAavB,UAAUE,aAAaoB,YAEA,IAA9CJ,oBAAoB3F,QAAQ,eAC9BwG,QAAQP,UAAYA,UACpBJ,YAAYI,UAAYxB,UAAUyB,YAAYH,YAEE,IAA9CJ,oBAAoB3F,QAAQ,eAC9BwG,QAAQP,UAAYA,UACpBJ,YAAYI,UAAYxB,UAAUyB,YAAYH,YAEO,IAAnDJ,oBAAoB3F,QAAQ,oBAC9BwG,QAAQL,eAAiBA,eACzBN,YAAYM,eAAiB1B,UAAU2B,eAAeL,YAEN,IAA9CJ,oBAAoB3F,QAAQ,eAC9BwG,QAAQF,UAAYA,UACpBT,YAAYS,UAAY7B,UAAU8B,UAAUR,YAES,IAAnDJ,oBAAoB3F,QAAQ,oBAC9BwG,QAAQH,eAAiBA,eACzBR,YAAYQ,eAAiB5B,UAAU4B,eAAeN,YAGH,IAAjDJ,oBAAoB3F,QAAQ,kBAC9BwG,QAAQI,aAAe1I,wBAAwB,eAAgB,OAI/D6C,EAAE8F,QAAQpC,UAAUK,mBAAoBN,KAAKvF,MAAM6F,qBACnD/D,EAAE8F,QAAQpC,UAAUyB,YAAa1B,KAAKvF,MAAMiH,cAC5CnF,EAAE8F,QAAQpC,UAAUtD,WAAYqD,KAAKvF,MAAMkC,aAC3CJ,EAAE8F,QAAQpC,UAAU2B,eAAgB5B,KAAKvF,MAAMmH,iBAC/CrF,EAAE8F,QAAQpC,UAAU8B,UAAW/B,KAAKvF,MAAMsH,YAC1CxF,EAAE8F,QAAQpC,UAAU4B,eAAgB7B,KAAKvF,MAAMoH,iBAC/CtF,EAAE8F,QAAQpC,UAAUE,aAAcH,KAAKvF,MAAM0F,iBAK5C5D,EAAE8F,QAAQpC,UAAUtD,WAAYqD,KAAKvF,MAAMkC,aAC5C,UAAGR,OAAH,YAAaE,aAAgB+E,WAAWe,cAF1C,CAMA,IAAI3J,MAAQ,GACZ,IAKE,GAJA2I,oBAAsBA,oBACnBT,QAAQ,MAAO,MACfA,QAAQ,MAAO,oBAClBlI,MAAQ8J,KAAKnB,qBACT3I,QAAUwH,KAAKlF,MAAMtC,MACvB,OAEFwH,KAAKnF,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBtC,iBACrB,WACE,OAAKqE,0BAA0BrE,UAGnC,MAAOoC,GACP2H,QAAQC,MACN,6BAA+B5H,EAAE6H,QAAU,IAC3CzC,KAAKvF,MAAMmB,QAAQ8D,eA7GvB,CAIE,IAAMgD,KAAO,GAAH,OAAMvG,OAAN,YAAgBE,WAExB2D,KAAKvF,MAAMkC,aAAesD,UAAUtD,YACpCJ,EAAEC,IAAI4E,WAAYsB,QAAU1C,KAAKlF,MAAMtC,OAEvCwH,KAAKnF,UAAS,SAAAC,GAAK,sCACdA,GADc,IAEjBtC,MAAO+D,EAAEC,IAAI4E,WAAYsB,e,sBA4GjC,SAAS9H,GAAG,WACNpC,EAAQ,GACRoC,GAAKA,EAAEa,SACTjD,EAAQoC,EAAEa,OAAOjD,OAGfoC,GAAKA,EAAEpC,QACTA,EAAQoC,EAAEpC,OAQZ,IAAMmF,EAAiBqC,KAAKvF,MAAMmB,QAAQC,YAAY,kBAChDiK,EAAoB9F,KAAKvF,MAAMmB,QAAQC,YAC3C,qBAEIkK,EAA0B/F,KAAKvF,MAAMmB,QAAQC,YACjD,4BAGE8B,GAAmBmI,GAAsBzM,YAC3C2G,KAAK2F,iBACmBnN,GAGtBmF,GAAkBmI,IAAsBzM,aAC1C2G,KAAKtF,WAAasL,aAAahG,KAAKtF,WACpCsF,KAAKtF,UAAY4C,YAAW,WAC1B,EAAKqI,iBACmBnN,KAEvBuN,IAEF1M,WACD2G,KAAKnF,UAAS,SAAAC,GAAK,sCAAOA,GAAP,IAActC,aAEjCwH,KAAKnD,0BAA0BrE,GAAO,K,qBAkG1C,WACE,gBAAUwH,KAAKvF,MAAMmB,QAAQQ,YAA7B,YAA4C4D,KAAKvF,MAAMmB,QAAQU,aAA/D,O,4BAYF,WACE,IAAOV,EAAWoE,KAAKvF,MAAhBmB,QACH+G,EAAY/G,EAAQ4E,qBAAqB,aACzCoC,EAA0BhH,EAAQ4E,qBAAqB,2BACpDqC,EAAgBjH,EAAQtB,SAAxBuI,aACDC,EAAgB,GAWtB,MAVoB,aAAjBD,GAA+B7C,KAAKlF,MAAM+C,cAAgB+E,IAC3DD,EAAYC,EACZE,EAAchE,QAAUkB,KAAKpC,iBAEX,aAAjBiF,GAA+BD,IAChCE,EAAchE,QAAUkB,KAAKpC,gBAC7BkF,EAAcC,MAAQ,CACpBC,OAAQ,YAGRL,EAGG,+FAAMM,UAAU,+CAAkDH,EAAlE,CAAiFI,SAAS,MAC9F3J,YAAYoJ,IAHN,O,6BAMX,WACE,IAAO/G,EAAWoE,KAAKvF,MAAhBmB,QACHuH,EAAavH,EAAQ4E,qBAAqB,cAC1C4C,EAA2BxH,EAAQ4E,qBAAqB,4BACrDqC,EAAgBjH,EAAQtB,SAAxBuI,aACDQ,EAAiB,GAUvB,MAToB,aAAjBR,GAA+B7C,KAAKlF,MAAM+C,cAAgBuF,IAC3DD,EAAaC,GAEK,aAAjBP,GAA+BO,IAChCC,EAAevE,QAAUkB,KAAKpC,gBAC9ByF,EAAeN,MAAQ,CACrBC,OAAQ,YAGRG,EAGG,+FAAMF,UAAU,gDAAmDI,EAAnE,CAAmFH,SAAS,MAChG3J,YAAY4J,IAHN,O,oBAOX,WACE,IAAItC,EACEvG,EAAW0F,KAAKvF,MAAMmB,QAAQC,cAElCyH,EAEEhJ,EAFFgJ,iBACAC,EACEjJ,EADFiJ,WAEE/K,EAAQwH,KAAK9D,WAEbsH,EAAa,GACbC,EAAa,GACXlJ,EAA8ByF,KAAKvF,MAAMmB,QAAQ4E,qBACrD,+BAEIkD,EAAsB1D,KAAKvF,MAAMmB,QAAQ4E,qBAAqB,uBAChEmD,EAAsB3D,KAAKvF,MAAMmB,QAAQ4E,qBAAqB,uBAClE,OAAQjG,GACN,IAAK,MACHkJ,EAAa,CACXG,aAAcD,GACVA,aAAA,EAAAA,EAAqBE,OACvBF,aADE,EACFA,EAAqBG,MACnB,OAENN,EAAa,GACb,MACF,IAAK,SACHC,EAAa,CACXM,UAAWJ,GACPA,aAAA,EAAAA,EAAqBE,OACvBF,aADE,EACFA,EAAqBG,MACnB,OAENN,EAAa,GACb,MACF,IAAK,OACHC,EAAa,CACXO,YAAaL,GACTA,aAAA,EAAAA,EAAqBE,OACvBF,aADE,EACFA,EAAqBG,MACnB,OAENN,EAAa,mCACb,MACF,IAAK,WACHC,EAAa,CACXQ,SAAU,WACVC,OAAQ,GAEVV,EAAa,GAKf3C,EADEb,KAAKlF,MAAMR,SAAS6J,eAAiBZ,EAErC,2BACEN,UAAW,+BAAiCO,EAC5CT,MAAOU,GAEP,6BACEW,QAASpE,KAAKqE,UACdtB,MAAO,CACLuB,QAAS,OACTC,cAAeb,GAEjBT,UAAS,0DAAqDjD,KAAKlF,MAAMR,SAASkK,iBAC9E,8BACA,KAGHxE,KAAKlF,MAAMR,SAAS6J,cAEpBZ,GAAcA,EAAWkB,MACxB,4BAAMxB,UAAU,oBACf1J,YAAYgK,MAOb,KAEV,IAAI0C,EAEFA,EADEjG,KAAKlF,MAAMR,SAAS4L,qBACP,KAEA,MAGjB,IAAIhI,EACF,2BAAK+E,UAAU,uBACb,oBAAC,uDAAD,CACEwB,KAA2C,aAArCzE,KAAKlF,MAAMR,SAASuI,aAA+B7C,KAAKlF,MAAM+C,aAAe,OAAS,WAAcmC,KAAKlF,MAAMR,SAASuI,aAC9HmC,KAAMhF,KAAKqE,UACXY,GAAIjF,KAAKqE,UACT7L,MAAOA,GAAS,GAChB+G,aAAcS,KAAKT,aACnB3D,QAASoE,KAAKvF,MAAMmB,QACpBsJ,SAAU5B,EACV6C,aAAcF,EACdd,YAAanF,KAAKlF,MAAMR,SAAS8K,oBACjC9K,SAAU0F,KAAKvF,MAAMmB,QAAQC,cAC7BwJ,UAAWrF,KAAKrF,YAChBiC,SAAUoD,KAAKpD,SACfS,OAAQ2C,KAAK3C,OACbF,QAAS6C,KAAK7C,QACdmI,SAAUtF,KAAKuF,iBACfC,aAAcxF,KAAKyF,qBAKzB,OACE,oBAACtL,oBAAD,CACEG,SAAUA,EACV2I,UAAU,0BAEuB,QAAhC1I,EAAwCsG,EAAQ,GAChB,SAAhCtG,EAAyCsG,EAAQ,GACjB,UAAhCtG,EAA0CsG,EAAQ,GAClB,aAAhCtG,EAA6CsG,EAAQ,GAErD3C,EACgC,WAAhC3D,EAA2CsG,EAAQ,Q,uBAplBxB6E,WA0lBpC,mD,2/FC98BA,yBASIvM,OAAOC,aARTgN,YADF,qBACEA,YACA/M,SAFF,qBAEEA,SACAI,yBAHF,qBAGEA,yBACA4M,sBAJF,qBAIEA,sBACAC,iBALF,qBAKEA,iBACAhN,uBANF,qBAMEA,uBACAiN,gBAPF,qBAOEA,gBACA7M,wBARF,qBAQEA,yBAODP,OAAOc,eAAiBd,OAAOc,gBAAkB,IAAIC,KAArD,+nPA4VD,IAAMC,oBAAsBC,OAAOC,IAAV,mIACrB,YACA,OADmD,EAAhDC,SAAYC,6BAEb,IAAK,OACH,MAAO,gBAET,IAAK,QACH,MAAO,oEAGX,MAAO,MAILiM,gB,qNAGJ,yBAAY/L,GAAO,4GACjB,mBAAMA,IAHRC,UAAY,KAEO,EAoCnBC,YAAc,SAAAC,GACZ,GAAkB,KAAdA,EAAEI,QAAgB,CACpBJ,EAAEK,iBACF,IAAMC,EAASC,MAAMC,KAAKC,SAASC,iBAAiB,iBAC9CC,EAAQL,EAAOM,QAAQZ,EAAEa,QAC/B,QAAcC,IAAVH,EAAqB,OACzBL,EAAOK,EAAQ,IAAML,EAAOK,EAAQ,GAAGI,QACvC,MAII,EAAKlB,MAAMmB,QAAQC,cAHrBC,EADF,EACEA,eACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,WAEEF,GAAkBC,GAAgBC,GACpC,EAAKC,WAAWrB,KAjDH,EAgcnB+K,iBAAmBpJ,EAAEqJ,UACnB,SAAApN,GAAK,OAAI,EAAKqE,0BAA0BrE,GAAO,KAC/C,KAlciB,EA+dnB2E,QA/dmB,qKA+dT,WAAMvC,GAAN,4IACFwC,EAAgB,EAAK3C,MAAMmB,QAAQC,YAAY,mBAE/BxC,WAHd,gCAKE,wLALF,cAIA0D,EAJA,OASJC,QATI,SAUAD,EAAeE,qBACnB,EAAKxC,MAAMmB,QAAQsB,iBACnB,QACAE,EACA,EAAK3C,MAAMmB,SAdP,2CA/dS,wDAwfnByB,OAxfmB,qKAwfV,WAAOzC,GAAP,sJAAU6L,EAAV,+BAAmB,KAC1B,EAAK5J,0BAA0BjC,EAAEa,OAAOjD,OAAO,GAE3C+D,EAAEC,IAAIiK,EAAQ,YAChB,EAAK5J,0BAA0B4J,EAAOlF,WAAW,IAG/C,EAAK9G,MAAMmB,QAAQC,YAAY,UAAW,KAAQxC,WAP/C,gCASG,wLATH,cAQC0D,EARD,OAaHC,QAbG,SAcCD,EAAeE,qBACnB,EAAKxC,MAAMmB,QAAQsB,iBACnB,OACA,EAAKzC,MAAMmB,QAAQC,YAAY,UAAW,IAC1C,EAAKpB,MAAMmB,SAlBR,2CAxfU,wDAohBnBiB,0BAphBmB,qKAohBS,WAAOrE,GAAP,4JAAc+E,EAAd,gCACtBpB,EAAS,EAAK1B,MAAMmB,QAAQQ,aAGC,KAF7BC,EAAY,EAAK5B,MAAMmB,QAAQU,cAErBd,QAAQ,QACpBa,EAAY/C,uBAAuB+C,MAGjCE,EAAEiB,SAAS,EAAK/C,MAAMgC,WAAaJ,GAAaF,GAR1B,oBASxB,EAAK1B,MAAMgC,SAASgB,UAClBC,uFAAqBrB,EAAW7D,EAAO2D,EAAQoB,KAG7CA,EAboB,sBAchBI,EAAiB,EAAKlD,MAAMmB,QAAQC,YAAY,oBAE/BxC,WAhBD,kCAkBZ,wLAlBY,eAiBd0D,EAjBc,OAsBlBC,QAtBkB,UAuBdD,EAAeE,qBACnB,EAAKxC,MAAMmB,QAAQsB,iBACnB,SACAS,EACA,EAAKlD,MAAMmB,SA3BO,4CAphBT,wDA0jBnBK,WA1jBmB,qKA0jBN,WAAMrB,GAAN,gKACLI,EAAUJ,EAAEI,QACH0L,EAAe9L,EAAEa,OAAxBjD,MAEQ,KAAZwC,GAAmB0L,EAJZ,sDAaP,EAAKjM,MAAMmB,QAAQC,cAJrBG,EATS,EASTA,WACAD,EAVS,EAUTA,aACA4K,EAXS,EAWTA,YACAC,EAZS,EAYTA,iBAGG7K,GAAiBC,EAfX,wDAmBLmE,EAAe,EAAK1F,MAAMmB,QAAQqG,mBACpC4E,EAAOR,sBAAsBM,EAAaxG,GAAc,IACvDpE,GAAgB2K,EACjBI,EAAMR,iBAAiBtK,EAAYmE,EAAaoB,WACpD,EAAK1G,UAAS,SAAAC,GAAK,sCAAUA,GAAV,IAAiBiM,YAAY,OAvBrC,UA0BHC,EAAW,IAAIC,iDAAS,CAC5BC,MAAOJ,IA3BA,UA6BOE,EAASG,KAAKN,GA7BrB,SA6BLO,EA7BK,QA+BDC,SAAW9K,EAAEC,IAAI4K,EAAK,aACxBE,EAAY,CACdzG,MAAO6F,EACPlO,MAAO+D,EAAEC,IAAI4K,EAAK,YAGpB,EAAKvM,UACH,SAAAC,GAAK,sCAAUA,GAAV,IAAiBiM,YAAY,OAClC,WACE,IAAIzH,GAAU,4EAAI,EAAKxE,MAAMwE,SAC7BA,EAAQiI,QAAQD,GAChB,IAAI9O,EAAQ,EAAKsC,MAAMtC,MACnBoO,GACFpO,EAAQA,GAAQ,4EAAIA,GAAS,IACvB0B,KAAKqC,EAAEC,IAAI4K,EAAK,YAEtB5O,EAAQ+D,EAAEC,IAAI4K,EAAK,WAGrB,EAAKvM,UACH,SAAAC,GAAK,sCAAUA,GAAV,IAAiBwE,UAAS9G,aAC/B,WACE,IAAMgP,EAAqBjL,EAAEC,KAAF,mFAEzB,4CAGEgL,GACFA,EAAmB3M,SAAS,CAC1B4M,YAAY,EACZf,WAAY,YAQ1B,EAAK7L,UAAS,SAAAC,GAAK,sCAAUA,GAAV,IAAiBiM,YAAY,OArEvC,mDAuETxE,QAAQC,MAAR,MACA,EAAK3H,UAAS,SAAAC,GAAK,sCAAUA,GAAV,IAAiBiM,YAAY,OAxEvC,2DA1jBM,sDAEjBtM,EAAMmB,QAAQmD,WAAd,mFACI5F,OAAO6F,kBACT7F,OAAO6F,kBAAP,oFAEF,EAAKpC,SAAW,EAAKA,SAASiJ,MAAd,oFAChB,EAAKF,iBAAmB,EAAKA,iBAAiBE,MAAtB,oFAExB,EAAK5G,aAAe,EAAKC,WAAW,0BAA4B,GAChE,EAAKpE,MAAQ,CACXR,SAAU,cAAF,GAAOG,EAAMmB,QAAQC,eAC7BrD,MAAO,EAAKyG,aACZK,QAAS7F,yBACPgB,EAAMmB,QAAQC,YAAY,oBAE5B6L,gBAAiB,MAEnB,EAAK3H,eAAiBX,MAAMC,YACxB,EAAKH,WAAW,0BAClB,EAAKrC,0BAA0B,EAAKqC,WAAW,0BApBhC,E,sHA2BnB,WACEc,KAAKpD,SAAS,IACdoD,KAAKnD,0BAA0B,IAAI,K,yMA8BrC,WAAyBoD,EAAWC,GAApC,iJACMF,KAAKvF,MAAMmB,QAAQC,YAAY,qBAC7ByD,EAAU7F,yBACZuG,KAAKvF,MAAMmB,QAAQC,YAAY,oBAGjCmE,KAAKnF,UAAS,SAAAC,GAAK,sCAAUA,GAAV,IAAiBwE,gBAGlC9G,EAAQwH,KAAKlF,MAAMtC,MAQrB+D,EAAEC,IAAIhE,EAAO,YACbwH,KAAKvF,MAAM0F,aAAaC,YAAY,uBAEpC5H,EAAQwH,KAAKd,WAAW,2BAOxBe,GACCA,EAAUE,aAAaC,YAAY,uBACpCJ,KAAKvF,MAAM0F,aAAaC,YAAY,qBA7BxC,uBA+BI5H,EAAQwH,KAAKd,WAAW,yBACxBc,KAAKnF,UACH,SAAAC,GAAK,sCAAUA,GAAV,IAAiBtC,QAAO6H,eAAe,OAC5C,WACE,EAAKxD,0BAA0BrE,MAnCvC,8BA0CIwH,KAAKvF,MAAM0F,aAAaC,YAAY,uBACpCJ,KAAKvF,MAAM6F,mBAAmBF,YAAY,6BACzCJ,KAAKlF,MAAMuF,cA5ChB,wBA8CI7H,EAAQwH,KAAKd,WAAW,yBACxBc,KAAKnF,UACH,SAAAC,GAAK,sCAAUA,GAAV,IAAiBtC,QAAO6H,eAAe,OAC5C,WACE,EAAKxD,0BAA0BrE,MAlDvC,2BAwDMwH,KAAKlF,MAAMtC,QAAUA,GACvBwH,KAAKnF,UACH,SAAAC,GAAK,sCAAUA,GAAV,IAAiBtC,aACtB,WACE,EAAKqE,0BAA0BrE,MA5DvC,iD,wFAqEA,WACE,IAAIsO,EAAM9G,KAAKvF,MAAMmB,QAAQC,YAAY,qBAEzC,OAA0B,IAAtBiL,EAAItL,QAAQ,KACd,uBAAuBsL,EAAvB,cAEyB,IAAvBA,EAAItL,QAAQ,QACdsL,EAAMxN,uBAAuBwN,IAExBA,K,2MAMT,WAA0B7G,EAAWC,GAArC,sJACiDF,KAAKlF,MAAMR,SAAlDiG,EADV,EACUA,gBAAiBoH,EAD3B,EAC2BA,kBAGvB1H,IACCA,EAAUK,mBAAmBF,YAAY,6BAC1CJ,KAAKvF,MAAM6F,mBAAmBF,YAAY,8BAEtC5H,EAAQwH,KAAKd,WACf,wBACAc,KAAKvF,MAAMmB,QAAQC,YAAY,qBAEjCmE,KAAKnF,UACH,SAAAC,GAAK,sCAAUA,GAAV,IAAiBtC,QAAO6H,eAAe,OAC5C,WACE,EAAKxD,0BAA0BrE,QASlC+D,EAAE8F,QAAQrC,KAAKvF,MAAM0F,aAAcF,EAAUE,eAC9CH,KAAKlF,MAAMtC,OACXwH,KAAKlF,MAAMtC,MAAMoP,SAEjB5H,KAAKnD,0BAA0BmD,KAAKd,WAAW,0BAO/Cc,KAAKvF,MAAMkC,aAAesD,EAAUtD,YACpCqD,KAAKvF,MAAM0F,eAAiBF,EAAUE,cACtCH,KAAKvF,MAAM6F,qBAAuBL,EAAUK,oBAE5CN,KAAK6H,gBAEHtH,IAAoBoH,IAClBrI,EAAU7F,yBAAyB8G,GAClChE,EAAE8F,QAAQ/C,EAASU,KAAKlF,MAAMwE,UACjCU,KAAKnF,UAAS,SAAAC,GAAK,sCAAUA,GAAV,IAAiBwE,gBAGxCU,KAAKkB,YAAYjB,GA/CnB,gD,4FAsDA,SAAAiB,YAAYjB,WAAW,gBAErB,IAAI5G,WAAJ,CAIA,IAAI8H,oBAAsBnB,KAAKvF,MAAMmB,QAAQC,YAC3C,uBAEIuF,WAAapB,KAAKvF,MAAMkC,WACxBN,UAAY2D,KAAKvF,MAAMmB,QAAQU,aAC/BH,OAAS6D,KAAKvF,MAAMmB,QAAQQ,YAElC,GAAK+E,oBAAL,CAiBA,IAAME,YAAc,GACdC,UAAYtB,KAAKvF,MAAM6F,mBAAmBiB,UAC1CC,WAAaxB,KAAKvF,MAAM0F,aAAaoB,UACrCE,UAAYzB,KAAKvF,MAAMiH,YAAYH,UACnCI,eAAiB3B,KAAKvF,MAAMmH,eAAeL,UAC3CM,eAAiB7B,KAAKvF,MAAMoH,eAAeN,UAC3CO,UAAY9B,KAAKvF,MAAMsH,UAAUR,UACjCS,QAAUhC,KAAKvF,MAAMmB,QAAQqG,kBAAkBV,UAyDrD,IAvDkD,IAA9CJ,oBAAoB3F,QAAQ,eAC9BwG,QAAQV,UAAYA,UACfA,UAAUY,yBAGbb,YAAYC,UAAYrB,UAAUK,mBAAmBiB,UAFrDF,YAAYC,UAAYA,YAMuB,IAA/CH,oBAAoB3F,QAAQ,gBAC9BwG,QAAQZ,WAAaA,WAIjB,UAAGjF,OAAH,YAAaE,aAAgB+E,WAAWe,aAC1Cd,YAAYD,WAAaA,WAEzBC,YAAYD,WAAanB,UAAUtD,aAIY,IAA/CwE,oBAAoB3F,QAAQ,gBAC9BwG,QAAQR,WAAaA,WACrBH,YAAYG,WAAavB,UAAUE,aAAaoB,YAGA,IAA9CJ,oBAAoB3F,QAAQ,eAC9BwG,QAAQP,UAAYA,UACpBJ,YAAYI,UAAYxB,UAAUyB,YAAYH,YAGE,IAA9CJ,oBAAoB3F,QAAQ,eAC9BwG,QAAQP,UAAYA,UACpBJ,YAAYI,UAAYxB,UAAUyB,YAAYH,YAGO,IAAnDJ,oBAAoB3F,QAAQ,oBAC9BwG,QAAQL,eAAiBA,eACzBN,YAAYM,eAAiB1B,UAAU2B,eAAeL,YAGN,IAA9CJ,oBAAoB3F,QAAQ,eAC9BwG,QAAQF,UAAYA,UACpBT,YAAYS,UAAY7B,UAAU8B,UAAUR,YAGS,IAAnDJ,oBAAoB3F,QAAQ,oBAC9BwG,QAAQH,eAAiBA,eACzBR,YAAYQ,eAAiB5B,UAAU4B,eAAeN,YAGH,IAAjDJ,oBAAoB3F,QAAQ,kBAC9BwG,QAAQI,aAAe1I,wBAAwB,eAAgB,OAI/D6C,EAAE8F,QAAQpC,UAAUK,mBAAoBN,KAAKvF,MAAM6F,qBACnD/D,EAAE8F,QAAQpC,UAAUyB,YAAa1B,KAAKvF,MAAMiH,cAC5CnF,EAAE8F,QAAQpC,UAAUtD,WAAYqD,KAAKvF,MAAMkC,aAC3CJ,EAAE8F,QAAQpC,UAAU2B,eAAgB5B,KAAKvF,MAAMmH,iBAC/CrF,EAAE8F,QAAQpC,UAAU8B,UAAW/B,KAAKvF,MAAMsH,YAC1CxF,EAAE8F,QAAQpC,UAAU4B,eAAgB7B,KAAKvF,MAAMoH,iBAC/CtF,EAAE8F,QAAQpC,UAAUE,aAAcH,KAAKvF,MAAM0F,iBAM5C5D,EAAE8F,QAAQpC,UAAUtD,WAAYqD,KAAKvF,MAAMkC,aAC5C,UAAGR,OAAH,YAAaE,aAAgB+E,WAAWe,cAF1C,CAOA,IAAI3J,MAAQ,GAEZ,IAKE,GAJA2I,oBAAsBA,oBACnBT,QAAQ,MAAO,MACfA,QAAQ,MAAO,oBAClBlI,MAAQ8J,KAAKnB,qBACT3I,QAAUwH,KAAKlF,MAAMtC,MACvB,OAEFwH,KAAKnF,UACH,SAAAC,GAAK,sCAAUA,GAAV,IAAiBtC,iBACtB,WACE,OAAKqE,0BAA0BrE,UAGnC,MAAOoC,GACP2H,QAAQC,MACN,6BAA+B5H,EAAE6H,QAAU,IAC3CzC,KAAKvF,MAAMmB,QAAQ8D,eAvHvB,CAIE,IAAMgD,KAAO,GAAH,OAAMvG,OAAN,YAAgBE,WAExB2D,KAAKvF,MAAMkC,aAAesD,UAAUtD,YACpCJ,EAAEC,IAAI4E,WAAYsB,QAAU1C,KAAKlF,MAAMtC,OAEvCwH,KAAKnF,UAAS,SAAAC,GAAK,sCACdA,GADc,IAEjBtC,MAAO+D,EAAEC,IAAI4E,WAAYsB,e,+LAoHjC,2JAEQvG,EAAS6D,KAAKvF,MAAMmB,QAAQQ,YAC5BsL,EAAkB1H,KAAKvF,MAAMmB,QAAQC,YAAY,qBACjDiM,EAAWvL,EAAEC,IAAIwD,KAAKvF,MAAMkC,WAAY,CAACR,GAAS,IACtDuL,EAAkBrB,sBAChBqB,EACA,IAAIK,mDAAWD,IAKbxI,GAZR,4EAYsBU,KAAKlF,MAAMwE,SAExB/C,EAAE8F,QAAQqF,EAAiB1H,KAAKlF,MAAM4M,iBAd/C,oBAeWnL,EAAEyL,QAAQN,GAfrB,qBAgBY1H,KAAKvF,MAAMmB,QAAQC,YAAY,qBAAqB,GAhBhE,wBAiBU6L,EAAkBO,KAAKC,UAAUR,GAjB3C,UAkB0B,IAAIT,iDAAS,CAC3BC,MAAOlH,KAAKmI,aACXC,WAAW,CAAEC,QAASX,IApBnC,QAkBUpI,EAlBV,gDAsB0B,IAAI2H,iDAAS,CAAEC,MAAOlH,KAAKmI,aAAcC,WACvDV,GAvBZ,QAsBUpI,EAtBV,eA0BQA,EAAW/C,EAAEoE,QAAQrB,GAA0BA,EAAfA,EAAQuH,KACxCvH,EAAU/C,EAAEoE,QAAQrB,GAAWA,EAAU,GA3BjD,4BA4BiBU,KAAKlF,MAAM4M,gBA5B5B,kCA6BwB,IAAIT,iDAAS,CAAEC,MAAOlH,KAAKmI,aAAcG,SA7BjE,QA6BQhJ,EA7BR,OA8BQA,EAAW/C,EAAEoE,QAAQrB,GAA0BA,EAAfA,EAAQuH,KACxCvH,EAAU/C,EAAEoE,QAAQrB,GAAWA,EAAU,GA/BjD,QAkCMU,KAAKnF,UAAS,SAAAC,GAAK,sCACdA,GADc,IAEjB4M,kBACApI,eArCR,iD,gFAgDA,SAAS1E,GAAkB,IAErB2N,EAFqB,OAAf9B,EAAe,uDAAN,KACfjO,EAAQ,GAGRoC,GAAKA,EAAEa,SACTjD,EAAQoC,EAAEa,OAAOjD,OAGfoC,GAAKA,EAAEpC,QACTA,EAAQoC,EAAEpC,OAGR+D,EAAEC,IAAIiK,EAAQ,aAChBjO,EAAQ,iDAAH,OAAoDiO,EAAOlF,UAA3D,WAGHhF,EAAEoE,QAAQ/F,KACZpC,EAAQ+D,EAAEiM,UAAU5N,IAIpBoF,KAAKvF,MAAMmB,QAAQC,YAAY,6BAC/BjB,GACY,WAAZA,EAAEpC,QAEFA,EAAQ,MAGVwH,KAAKnF,UACH,SAAAC,GAAK,sCACAA,GADA,IAEHtC,aAEF,WAKE,IAAMmF,EAAiB,EAAKlD,MAAMmB,QAAQC,YAAY,kBAChDiK,EAAoB,EAAKrL,MAAMmB,QAAQC,YAC3C,qBAEIkK,EAA0B,EAAKtL,MAAMmB,QAAQC,YACjD,4BAGE8B,GAAmBmI,GAAsBzM,YAC3C,EAAKsM,sBACiBjK,IAApB6M,EAAgCA,EAAkB/P,GAGlDmF,GAAkBmI,IAAsBzM,aAC1C,EAAKqB,WAAasL,aAAa,EAAKtL,WACpC,EAAKA,UAAY4C,YAAW,WAC1B,EAAKqI,sBACiBjK,IAApB6M,EAAgCA,EAAkB/P,KAEnDuN,S,wBAcX,WACE,IAAIzG,GAAU,4EAAIU,KAAKlF,MAAMwE,SACvBmJ,EAAwBzI,KAAKvF,MAAMmB,QAAQ8M,kBAC/C,mBAWF,OARID,IACFnJ,EAAU8G,YAAYqC,EAAuBnJ,IAG1CU,KAAKvF,MAAMmB,QAAQC,YAAY,kBAClCyD,EAAU/C,EAAEoM,OAAOrJ,GAAS,SAAAvG,GAAC,OAAIA,IAAMA,EAAE8H,MAAQ9H,EAAE8H,MAAM+H,WAAa7P,OAGjEuG,I,qBAoLT,WACE,gBAAUU,KAAKvF,MAAMmB,QAAQQ,YAA7B,YAA4C4D,KAAKvF,MAAMmB,QAAQU,aAA/D,O,oBAGF,WAAS,IACHuE,EADG,OAEDvG,EAAW0F,KAAKvF,MAAMmB,QAAQC,cAElCyH,EAGEhJ,EAHFgJ,iBAEAC,GACEjJ,EAFFsM,iBAEEtM,EADFiJ,YAGE/K,EAAQwH,KAAKlF,MAAMtC,MAGrB+D,EAAEC,IAAIhE,EAAO,YACbwH,KAAKvF,MAAM0F,aAAaC,YAAY,uBAEpC5H,EAAQwH,KAAKd,WAAW,0BAQtB1G,GAASA,EAAMoP,UACjBpP,EAAQ,IAGV,IAAIgL,EAAa,GACbC,EAAa,GACXlJ,EAA8ByF,KAAKvF,MAAMmB,QAAQ4E,qBACrD,+BAGF,OAAQjG,GACN,IAAK,MACHkJ,EAAa,CACXG,aAAc5D,KAAKlF,MAAMR,SAASqJ,oBAC9B3D,KAAKlF,MAAMR,SAASqJ,oBAAoBE,KAC1C7D,KAAKlF,MAAMR,SAASqJ,oBAAoBG,KACtC,OAENN,EAAa,GACb,MACF,IAAK,SACHC,EAAa,CACXM,UAAW/D,KAAKlF,MAAMR,SAASqJ,oBAC3B3D,KAAKlF,MAAMR,SAASqJ,oBAAoBE,KAC1C7D,KAAKlF,MAAMR,SAASqJ,oBAAoBG,KACtC,OAENN,EAAa,GACb,MACF,IAAK,OACHC,EAAa,CACXO,YAAahE,KAAKlF,MAAMR,SAASqJ,oBAC7B3D,KAAKlF,MAAMR,SAASqJ,oBAAoBE,KAC1C7D,KAAKlF,MAAMR,SAASqJ,oBAAoBG,KACtC,OAENN,EAAa,mCACb,MACF,IAAK,WACHC,EAAa,CACXQ,SAAU,WACVC,OAAQ,GAEVV,EAAa,GAKf3C,EADEb,KAAKlF,MAAMR,SAAS6J,cAEpB,2BACElB,UAAW,+BAAiCO,EAC5CT,MAAOU,GAEP,6BACER,UAAS,4BAAuBjD,KAAKlF,MAAMR,SAASkK,iBAChD,8BACA,KAGHxE,KAAKlF,MAAMR,SAAS6J,eAEtBZ,GAAcA,EAAWsF,WACxB,4BAAM5F,UAAU,oBACbsD,gBAAgBhD,KAMjB,KAGV,IAAI0C,EAEFA,EADEjG,KAAKlF,MAAMR,SAAS4L,qBACP,KAEA,MAGjB,IAAM4C,EAAc9I,KAAKlF,MAAMR,SAASyO,kBAElC7K,EACJ,2BAAK+E,UAAU,uBACb,oBAAC,uDAAD,CACEwB,KAAK,OACLO,KAAMhF,KAAKqE,UACX7L,MAAOA,GAAS,GAChBoD,QAASoE,KAAKvF,MAAMmB,QACpBsJ,SAAU5B,EACV6C,aAAcF,EACdd,YAAanF,KAAKlF,MAAMR,SAAS8K,oBACjCnC,UACE,eAAiBjD,KAAKlF,MAAMR,SAAS0O,qBAEvC1O,SAAU0F,KAAKvF,MAAMmB,QAAQC,cAC7BwJ,UAAWrF,KAAKrF,YAChBiC,SAAUoD,KAAKpD,SACfS,OAAQ2C,KAAK3C,OACbF,QAAS6C,KAAK7C,QACd8H,GAAIjF,KAAKlF,MAAMR,SAAS2O,kBAEzBH,GACC,8BACE7F,UAAU,kBACVnE,QAAS,kBAAM,EAAKjE,SAAS,CAAErC,MAAO,EAAKyG,iBAF7C,MAUN,OACE,oBAAC9E,oBAAD,CACEG,SAAUA,EACV2I,UAAU,0BAEuB,QAAhC1I,EAAwCsG,EAAQ,GAChB,SAAhCtG,EAAyCsG,EAAQ,GACjB,UAAhCtG,EAA0CsG,EAAQ,GAClB,aAAhCtG,EAA6CsG,EAAQ,GAErD3C,EACgC,WAAhC3D,EAA2CsG,EAAQ,Q,iBAnyB9B6E,WAyyB9B","file":"InputTextCommonWidget.6e25c4efa43f59f55161.bundle.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import AltrpInput from \"../altrp-input/AltrpInput\";\r\nconst {\r\n  isEditor,\r\n  replaceContentWithData,\r\n  renderAsset,\r\n  getDataByPath,\r\n  parseOptionsFromSettings,\r\n  getDataFromLocalStorage,\r\n} = window.altrpHelpers;\r\nconst {\r\n  MenuItem,\r\n  Menu} = window.altrpLibs.Blueprint;\r\nconst {\r\n  Popover2,\r\n  } = window.altrpLibs.BlueprintPopover;\r\nimport {changeFormFieldValue} from \"../../../../../front-app/src/js/store/forms-data-storage/actions\";\r\n\r\n\r\n\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n.altrp-field-label_text-widget{\r\n    width: 100%;\r\n}\r\n.bp3-icon_text-widget img{\r\n  width: 16px;\r\n  height: 16px;\r\n  object-fit: contain;\r\n  pointer-events: none;\r\n}\r\n.altrp-input-wrapper_autocomplete .bp3-menu{\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n}\r\n.bp3-icon_text-widget svg{\r\n  width: 16px;\r\n  height: 16px;\r\n  pointer-events: none;\r\n}\r\n.bp3-icon_right{\r\n    margin: 7px;\r\n}\r\n.altrp-field {\r\n  border-style: solid;\r\n  width: 100%;\r\n}\r\n.altrp-field-file{\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.altrp-label-icon svg,\r\n.altrp-label-icon img {\r\n  width: 20px;\r\n}\r\n.altrp-label-icon svg{\r\n  height: 20px;\r\n}\r\n.altrp-field-file__field{\r\n  display: none;\r\n}\r\n.altrp-field-file__placeholder{\r\n  display: none;\r\n}\r\n.altrp-field-file_empty .altrp-field-file__placeholder{\r\n  display: block;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: rgb(52,59,76);\r\n  color: #fff;\r\n}\r\n.input-clear-btn {\r\n  background: transparent;\r\n  padding: 0;\r\n  position: absolute;\r\n  bottom: calc(50% - 7px);\r\n  right: 15px;\r\n  display: none;\r\n}\r\n.input-clear-btn:hover {\r\n  font-weight: bold;\r\n}\r\n.altrp-field:hover + .input-clear-btn, .input-clear-btn:hover {\r\n  display: block;\r\n}\r\n.altrp-input-wrapper, .altrp-field-select2 {\r\n  position: relative;\r\n  flex-grow: 1;\r\n}\r\n\r\n.altrp-field-label--required::after {\r\n  content: \"*\";\r\n  color: red;\r\n  font-size: inherit;\r\n  padding-left: 10px;\r\n}\r\n.altrp-field-label {\r\n  font-size: 16px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-field-select2__single-value, .altrp-field {\r\n  font-size: 16px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-field-select2__control, .altrp-field {\r\n  text-align: left;\r\n  padding-top: 2px;\r\n  padding-right: 2px;\r\n  padding-bottom: 2px;\r\n  padding-left: 2px;\r\n  border-width: 1px;\r\n}\r\n.altrp-field-select2__control:hover{\r\n  border-width: 1px;\r\n}\r\n.altrp-field-container {\r\n  margin: 0;\r\n}\r\n.altrp-field::placeholder, .altrp-field-select2__placeholder {\r\n  font-size: 13px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-image-select {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n.altrp-image-select img {\r\n  flex-grow: 1;\r\n  object-fit: contain;\r\n}\r\n.altrp-field {\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n.altrp-field.active {\r\n  border-color: lightcoral;\r\n}\r\n.altrp-field-label {\r\n  text-align: center;\r\n  display: block;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__single-value {\r\n  font-size: 14px;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__indicator-separator {\r\n  display: none;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__indicator {\r\n  align-items: center;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__control {\r\n  width: 100px;\r\n  min-height: 32px;\r\n  padding: 0;\r\n  border-radius: 0;\r\n  outline: none;\r\n  border-color: rgb(142,148,170);\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__control input {\r\n  border: none;\r\n}\r\n.altrp-field-select2 {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  pointer-events: none;\r\n}\r\n.altrp-field-select2__control {\r\n  webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  background-color: hsl(0,0%,100%);\r\n  border-color: hsl(0,0%,80%);\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  cursor: default;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex-wrap: wrap;\r\n  -ms-flex-wrap: wrap;\r\n  flex-wrap: wrap;\r\n  -webkit-box-pack: justify;\r\n  -webkit-justify-content: space-between;\r\n  -ms-flex-pack: justify;\r\n  justify-content: space-between;\r\n  min-height: 38px;\r\n  outline: 0 !important;\r\n  position: relative;\r\n  -webkit-transition: all 100ms;\r\n  transition: all 100ms;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__value-container {\r\n  -webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex: 1;\r\n  -ms-flex: 1;\r\n  flex: 1;\r\n  -webkit-flex-wrap: wrap;\r\n  -ms-flex-wrap: wrap;\r\n  flex-wrap: wrap;\r\n  padding: 2px 8px;\r\n  -webkit-overflow-scrolling: touch;\r\n  position: relative;\r\n  overflow: hidden;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__single-value {\r\n  color: hsl(0,0%,20%);\r\n  margin-left: 2px;\r\n  margin-right: 2px;\r\n  max-width: calc(100% - 8px);\r\n  overflow: hidden;\r\n  position: absolute;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  top: 50%;\r\n  -webkit-transform: translateY(-50%);\r\n  -ms-transform: translateY(-50%);\r\n  transform: translateY(-50%);\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicators {\r\n  -webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  -webkit-align-self: stretch;\r\n  -ms-flex-item-align: stretch;\r\n  align-self: stretch;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex-shrink: 0;\r\n  -ms-flex-negative: 0;\r\n  flex-shrink: 0;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicator-separator {\r\n  -webkit-align-self: stretch;\r\n  -ms-flex-item-align: stretch;\r\n  align-self: stretch;\r\n  background-color: hsl(0,0%,80%);\r\n  margin-bottom: 8px;\r\n  margin-top: 8px;\r\n  width: 1px;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicator {\r\n  color: hsl(0,0%,80%);\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  padding: 8px;\r\n  -webkit-transition: color 150ms;\r\n  transition: color 150ms;\r\n  box-sizing: border-box;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.tba-placeholder {\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n.altrp-field-subgroup {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n.altrp-field-option {\r\n  display: flex;\r\n  padding: 10px;\r\n}\r\n.altrp-field-option__label {\r\n  cursor: pointer;\r\n}\r\ntextarea.altrp-field {\r\n  display: block;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__placeholder {\r\n  white-space: nowrap;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__single-value {\r\n  font-size: 14px;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__indicator-separator {\r\n  display: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__indicator {\r\n  align-items: center;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__control {\r\n  width: 100%;\r\n  min-height: 19px;\r\n  padding: 0;\r\n  border-radius: 0;\r\n  outline: none;\r\n  border-color: rgb(142, 148, 170);\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__control input {\r\n  border: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__value-container {\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  line-height: 13px;\r\n}\r\n.altrp-field-required {\r\n  color: red;\r\n  font-size: 18px;\r\n  padding-left: 10px;\r\n}\r\n.altrp-field-container-label {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.altrp-field-label-container-left {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.altrp-field-label-container {\r\n  display: inline-flex;\r\n  align-items: center;\r\n}\r\n.altrp-field-select2__indicator.altrp-field-select2__dropdown-indicator {\r\n  padding: 0 8px;\r\n  max-height: 14px;\r\n  overflow: hidden;\r\n}\r\n.altrp-field-select2 .altrp-field-select2__value-container {\r\n  padding: 0px 8px;\r\n}\r\n.altrp-field-select2 .css-b8ldur-Input {\r\n  padding-bottom: 0px;\r\n  padding-top: 0px;\r\n  margin: 0 2px;\r\n}\r\n.altrp-field-select2 .altrp-field-select2__control {\r\n  min-height: 14px;\r\n}\r\n`)\r\n\r\nconst AltrpFieldContainer = styled.div`\r\n  ${({settings: {content_label_position_type}}) => {\r\n  switch (content_label_position_type) {\r\n    case \"left\": {\r\n      return \"display: flex\";\r\n    }\r\n    case \"right\": {\r\n      return \"display:flex;flex-direction:row-reverse;justify-content:flex-end;\";\r\n    }\r\n  }\r\n  return \"\";\r\n}}\r\n`;\r\n\r\nclass InputTextCommonWidget extends Component {\r\n  timeInput = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    props.element.component = this;\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n\r\n    this.defaultValue = this.getContent(\"content_default_value\")\r\n    this.popoverRef = React.createRef()\r\n    this.inputRef = React.createRef()\r\n    this.state = {\r\n      settings: {...props.element.getSettings()},\r\n      showPassword: false,\r\n      isOpen: false,\r\n      options: parseOptionsFromSettings(\r\n        props.element.getSettings(\"options\")\r\n      ),\r\n    };\r\n    this.popoverProps = {\r\n      usePortal: true,\r\n      // isOpen:true ,\r\n      portalClassName: `altrp-portal altrp-portal${this.props.element.getId()}`,\r\n      portalContainer: window.EditorFrame ? window.EditorFrame.contentWindow.document.body : document.body,\r\n    };\r\n    this.altrpSelectRef = React.createRef();\r\n    if (this.getContent(\"content_default_value\")) {\r\n      this.dispatchFieldValueToStore(this.getContent(\"content_default_value\"));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Чистит значение\r\n   */\r\n  clearValue() {\r\n    let value = \"\";\r\n    this.dispatchFieldValueToStore(value, true);\r\n  }\r\n\r\n  /**\r\n   * Обработка нажатия клавиши\r\n   * @param {{}} e\r\n   */\r\n  handleEnter = e => {\r\n    this.setState(state=>({...state, isOpen: true}));\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      const inputs = Array.from(document.querySelectorAll(\"input,select\"));\r\n      const index = inputs.indexOf(e.target);\r\n      if (index === undefined) return;\r\n      inputs[index + 1] && inputs[index + 1].focus();\r\n      const {\r\n        create_allowed,\r\n        create_label,\r\n        create_url\r\n      } = this.props.element.getSettings();\r\n      if (create_allowed && create_label && create_url) {\r\n        this.createItem(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Загрузка виджета\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  async _componentDidMount(prevProps, prevState) {\r\n    let value = this.getValue();\r\n\r\n    /**\r\n     * Если модель обновилась при смене URL\r\n     */\r\n    if (\r\n      prevProps &&\r\n      !prevProps.currentModel.getProperty(\"altrpModelUpdated\") &&\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\r\n    ) {\r\n      value = this.getContent(\"content_default_value\");\r\n      this.setState(\r\n        state => ({...state, contentLoaded: true}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    if (\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\") &&\r\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\r\n      !this.state.contentLoaded\r\n    ) {\r\n      value = this.getContent(\"content_default_value\");\r\n      this.setState(\r\n        state => ({...state, contentLoaded: true}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n      return;\r\n    }\r\n  }\r\n  getOptions(){\r\n    if(! this.getValue()){\r\n      return [];\r\n    }\r\n    let options = this.state.options;\r\n    let element = this.props.element;\r\n    const content_options = this.props.element.getResponsiveSetting('options');\r\n    if(_.isString(content_options)\r\n      && content_options.indexOf('{{') === 0 ){\r\n      options = getDataByPath(content_options.replace('{{', '').replace('}}', ''))\r\n      if( ! _.isArray(options)){\r\n        options = [];\r\n      }\r\n    }\r\n    const value = this.getValue()\r\n    if(element.getResponsiveSetting('s_type') !== 'prevent_filter'){\r\n      options = options.filter(o=>{\r\n        if(_.isObject(o)){\r\n          o = (o?.label ||o?.value)\r\n          if(o === 0){\r\n            o = '0';\r\n          }\r\n        }\r\n        o += '';\r\n        return o.toLocaleLowerCase().indexOf(value.toLocaleLowerCase()) >= 0;\r\n      });\r\n    }\r\n    options = options.map(o=>{\r\n      if(! _.isObject(o)){\r\n        return o;\r\n      }\r\n      return o?.label ||o?.value || ''\r\n    })\r\n    options = _.uniq(options);\r\n    if(options.length === 1 && options.find(o=>o==value)){\r\n      options = [];\r\n    }\r\n    return options;\r\n  }\r\n  /**\r\n   *\r\n   * @returns {string}\r\n   */\r\n  getValue = () => {\r\n    let value;\r\n    let formId = this.props.element.getFormId();\r\n    let fieldName = this.props.element.getFieldId();\r\n    if (isEditor()) {\r\n      value = this.state.value;\r\n    } else {\r\n      value = _.get(appStore.getState().formsStore, `${formId}`, '')\r\n      value = _.get(value, fieldName, '')\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Обновление виджета\r\n   */\r\n  async _componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevProps &&\r\n      !prevProps.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\r\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\")\r\n    ) {\r\n      let value = this.getContent(\r\n        \"content_default_value\"\r\n      );\r\n      this.setState(\r\n        state => ({...state, contentLoaded: true}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n    }\r\n\r\n\r\n    this.updateValue(prevProps);\r\n  }\r\n\r\n  /**\r\n   * Обновить значение если нужно\r\n   * @param {{}} prevProps\r\n   */\r\n  updateValue(prevProps) {\r\n    if (isEditor()) {\r\n      return;\r\n    }\r\n    let content_calculation = this.props.element.getSettings(\r\n      \"content_calculation\"\r\n    );\r\n    const altrpforms = this.props.formsStore;\r\n    const fieldName = this.props.element.getFieldId();\r\n    const formId = this.props.element.getFormId();\r\n    if (!content_calculation) {\r\n      /**\r\n       * Обновить значение, если formsStore изменилось из другого компонента\r\n       */\r\n      const path = `${formId}.${fieldName}`;\r\n      if (\r\n        this.props.formsStore !== prevProps.formsStore &&\r\n        _.get(altrpforms, path) !== this.state.value\r\n      ) {\r\n        this.setState(state => ({\r\n          ...state,\r\n          value: _.get(altrpforms, path)\r\n        }));\r\n      }\r\n      return;\r\n    }\r\n\r\n    const prevContext = {};\r\n\r\n    const altrpdata = this.props.currentDataStorage.getData();\r\n    const altrpmodel = this.props.currentModel.getData();\r\n    const altrpuser = this.props.currentUser.getData();\r\n    const altrppagestate = this.props.altrpPageState.getData();\r\n    const altrpresponses = this.props.altrpresponses.getData();\r\n    const altrpmeta = this.props.altrpMeta.getData();\r\n    const context = this.props.element.getCurrentModel().getData();\r\n    if (content_calculation.indexOf(\"altrpdata\") !== -1) {\r\n      context.altrpdata = altrpdata;\r\n      if (!altrpdata.currentDataStorageLoaded) {\r\n        prevContext.altrpdata = altrpdata;\r\n      } else {\r\n        prevContext.altrpdata = prevProps.currentDataStorage.getData();\r\n      }\r\n    }\r\n    if (content_calculation.indexOf(\"altrpforms\") !== -1) {\r\n      context.altrpforms = altrpforms;\r\n      /**\r\n       * Не производим вычисления, если изменилось текущее поле\r\n       */\r\n      if (`${formId}.${fieldName}` === altrpforms.changedField) {\r\n        prevContext.altrpforms = altrpforms;\r\n      } else {\r\n        prevContext.altrpforms = prevProps.formsStore;\r\n      }\r\n    }\r\n    if (content_calculation.indexOf(\"altrpmodel\") !== -1) {\r\n      context.altrpmodel = altrpmodel;\r\n      prevContext.altrpmodel = prevProps.currentModel.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\r\n      context.altrpuser = altrpuser;\r\n      prevContext.altrpuser = prevProps.currentUser.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\r\n      context.altrpuser = altrpuser;\r\n      prevContext.altrpuser = prevProps.currentUser.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrppagestate\") !== -1) {\r\n      context.altrppagestate = altrppagestate;\r\n      prevContext.altrppagestate = prevProps.altrpPageState.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpmeta\") !== -1) {\r\n      context.altrpmeta = altrpmeta;\r\n      prevContext.altrpmeta = prevProps.altrpMeta.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpresponses\") !== -1) {\r\n      context.altrpresponses = altrpresponses;\r\n      prevContext.altrpresponses = prevProps.altrpresponses.getData();\r\n    }\r\n\r\n    if (content_calculation.indexOf(\"altrpstorage\") !== -1) {\r\n      context.altrpstorage = getDataFromLocalStorage(\"altrpstorage\", {});\r\n    }\r\n\r\n    if (\r\n      _.isEqual(prevProps.currentDataStorage, this.props.currentDataStorage) &&\r\n      _.isEqual(prevProps.currentUser, this.props.currentUser) &&\r\n      _.isEqual(prevProps.formsStore, this.props.formsStore) &&\r\n      _.isEqual(prevProps.altrpPageState, this.props.altrpPageState) &&\r\n      _.isEqual(prevProps.altrpMeta, this.props.altrpMeta) &&\r\n      _.isEqual(prevProps.altrpresponses, this.props.altrpresponses) &&\r\n      _.isEqual(prevProps.currentModel, this.props.currentModel)\r\n    ) {\r\n      return;\r\n    }\r\n    if (\r\n      !_.isEqual(prevProps.formsStore, this.props.formsStore) &&\r\n      `${formId}.${fieldName}` === altrpforms.changedField\r\n    ) {\r\n      return;\r\n    }\r\n    let value = \"\";\r\n    try {\r\n      content_calculation = content_calculation\r\n        .replace(/}}/g, \"')\")\r\n        .replace(/{{/g, \"_.get(context, '\");\r\n      value = eval(content_calculation);\r\n      if (value === this.state.value) {\r\n        return;\r\n      }\r\n      this.setState(\r\n        state => ({...state, value}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n    } catch (e) {\r\n      console.error(\r\n        \"Evaluate error in Input: '\" + e.message + \"'\",\r\n        this.props.element.getId()\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Изменение значения в виджете\r\n   * @param e\r\n   */\r\n  onChange = async (e) => {\r\n    let value = \"\";\r\n    if (e && e.target) {\r\n      value = e.target.value;\r\n    }\r\n\r\n    if (e && e.value) {\r\n      value = e.value;\r\n    }\r\n\r\n    if(isEditor()){\r\n      this.setState(state=>({...state, value}))\r\n    } else {\r\n\r\n      this.dispatchFieldValueToStore(value, true)\r\n\r\n      const typing_actions = this.props.element.getSettings(\"typing_actions\");\r\n\r\n      if (typing_actions) {\r\n        const actionsManager = (\r\n          await import(\r\n            /* webpackChunkName: 'ActionsManager' */\r\n            \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n            )\r\n        ).default;\r\n        await actionsManager.callAllWidgetActions(\r\n          this.props.element.getIdForAction(),\r\n          \"typing\",\r\n          typing_actions,\r\n          this.props.element\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Для действие по фокусу\r\n   * @param e\r\n   * @return {Promise<void>}\r\n   */\r\n\r\n  onFocus = async e => {\r\n    const focus_actions = this.props.element.getSettings(\"focus_actions\");\r\n    // this.setState(state=>({...state, isOpen: true}))\r\n    if (focus_actions && !isEditor()) {\r\n      const actionsManager = (\r\n        await import(\r\n          /* webpackChunkName: 'ActionsManager' */\r\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n          )\r\n      ).default;\r\n      await actionsManager.callAllWidgetActions(\r\n        this.props.element.getIdForAction(),\r\n        \"focus\",\r\n        focus_actions,\r\n        this.props.element\r\n      );\r\n    }\r\n  };\r\n  /**\r\n   * Потеря фокуса для оптимизации\r\n   * @param  e\r\n   */\r\n  onBlur = async (e) => {\r\n    this.dispatchFieldValueToStore(e.target.value, true);\r\n    setTimeout(()=>{\r\n      this.setState(state=>({...state, isOpen: false}))\r\n    }, 200);\r\n\r\n    if (this.props.element.getSettings(\"actions\", []) && !isEditor()) {\r\n      const actionsManager = (\r\n        await import(\r\n          /* webpackChunkName: 'ActionsManager' */\r\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n          )\r\n      ).default;\r\n      await actionsManager.callAllWidgetActions(\r\n        this.props.element.getIdForAction(),\r\n        \"blur\",\r\n        this.props.element.getSettings(\"actions\", []),\r\n        this.props.element\r\n      );\r\n    }\r\n  };\r\n  /**\r\n   * Передадим значение в хранилище формы\r\n   * @param {*} value\r\n   * @param {boolean} userInput true - имзенилось пользователем\r\n   */\r\n  dispatchFieldValueToStore = async (value, userInput = false) => {\r\n    let formId = this.props.element.getFormId();\r\n    let fieldName = this.props.element.getFieldId();\r\n    if (fieldName.indexOf(\"{{\") !== -1) {\r\n      fieldName = replaceContentWithData(fieldName);\r\n    }\r\n    if (_.isObject(this.props.appStore) && fieldName && formId) {\r\n      this.props.appStore.dispatch(\r\n        changeFormFieldValue(fieldName, value, formId, userInput)\r\n      );\r\n      if (userInput) {\r\n        const change_actions = this.props.element.getSettings(\"change_actions\");\r\n\r\n        if (change_actions && !isEditor()) {\r\n          const actionsManager = (\r\n            await import(\r\n              /* webpackChunkName: 'ActionsManager' */\r\n              \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n              )\r\n          ).default;\r\n          await actionsManager.callAllWidgetActions(\r\n            this.props.element.getIdForAction(),\r\n            \"change\",\r\n            change_actions,\r\n            this.props.element\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Взовращает имя для атрибута name\r\n   * @return {string}\r\n   */\r\n  getName() {\r\n    return `${this.props.element.getFormId()}[${this.props.element.getFieldId()}]`;\r\n  }\r\n\r\n  handleLockClick = () => {\r\n    this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        showPassword: !state.showPassword,\r\n      }\r\n    })\r\n  }\r\n\r\n  renderLeftIcon(){\r\n    const {element} = this.props;\r\n    let left_icon = element.getResponsiveSetting('left_icon');\r\n    let password_show_left_icon = element.getResponsiveSetting('password_show_left_icon');\r\n    const {content_type} = element.settings\r\n    const leftIconProps = {}\r\n    if(content_type === 'password' && this.state.showPassword && password_show_left_icon){\r\n      left_icon = password_show_left_icon\r\n      leftIconProps.onClick = this.handleLockClick\r\n    }\r\n    if(content_type === 'password' && password_show_left_icon){\r\n      leftIconProps.onClick = this.handleLockClick\r\n      leftIconProps.style = {\r\n        cursor: 'pointer'\r\n      }\r\n    }\r\n    if(!left_icon){\r\n      return null\r\n    }\r\n    return <span className=\"bp3-icon bp3-icon_text-widget bp3-icon_left\" {...leftIconProps} tabIndex=\"0\">\r\n      {renderAsset(left_icon, )}\r\n    </span>\r\n  }\r\n  renderRightIcon(){\r\n    const {element} = this.props;\r\n    let right_icon = element.getResponsiveSetting('right_icon');\r\n    let password_show_right_icon = element.getResponsiveSetting('password_show_right_icon');\r\n    const {content_type} = element.settings\r\n    const rightIconProps = {}\r\n    if(content_type === 'password' && this.state.showPassword && password_show_right_icon){\r\n      right_icon = password_show_right_icon\r\n    }\r\n    if(content_type === 'password' && password_show_right_icon){\r\n      rightIconProps.onClick = this.handleLockClick\r\n      rightIconProps.style = {\r\n        cursor: 'pointer'\r\n      }\r\n    }\r\n    if(!right_icon){\r\n      return null\r\n    }\r\n    return <span className=\"bp3-icon bp3-icon_text-widget bp3-icon_right\" {...rightIconProps} tabIndex=\"0\">\r\n      {renderAsset(right_icon, )}\r\n    </span>\r\n  }\r\n\r\n  /**\r\n   * Срабатывает после клика на элемент в меню\r\n   * @param e\r\n   * @returns {Promise<void>}\r\n   */\r\n  onSelect = async(e)=>{\r\n    const select_actions = this.props.element.getSettings(\"select_actions\");\r\n    var len = this.getValue().length;\r\n    let input = this.inputRef.current\r\n\r\n    if(input){\r\n      if (input.setSelectionRange) {\r\n        input.focus();\r\n        input.setSelectionRange(len, len);\r\n      } else if (input.createTextRange) {\r\n        var t = input.createTextRange();\r\n        t.collapse(true);\r\n        t.moveEnd('character', len);\r\n        t.moveStart('character', len);\r\n        t.select();\r\n      }\r\n    }\r\n    if (select_actions) {\r\n      const actionsManager = (\r\n        await import(\r\n          /* webpackChunkName: 'ActionsManager' */\r\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n          )\r\n      ).default;\r\n      await actionsManager.callAllWidgetActions(\r\n        this.props.element.getIdForAction(),\r\n        \"autocomplete_select\",\r\n        select_actions,\r\n        this.props.element\r\n      );\r\n    }\r\n  }\r\n  /**\r\n   *\r\n   * @param {text} text\r\n   * @param {int} index\r\n   * @returns {JSX.Element}\r\n   */\r\n  itemRenderer = (text, index)=>{\r\n    return <MenuItem\r\n      onClick={(e)=>{\r\n        this.dispatchFieldValueToStore(text, true)\r\n        this.onSelect(e)\r\n      }\r\n      }\r\n      key={text + index}\r\n      text={text}/>\r\n  }\r\n\r\n  render() {\r\n    let label = null;\r\n    const settings = this.props.element.getSettings();\r\n    const {\r\n      content_readonly,\r\n      label_icon\r\n    } = settings;\r\n    let value = this.getValue()\r\n\r\n    let classLabel = \"\";\r\n    let styleLabel = {};\r\n    const content_label_position_type = this.props.element.getResponsiveSetting(\r\n      \"content_label_position_type\"\r\n    ) || 'top';\r\n    const label_icon_position = this.props.element.getResponsiveSetting('label_icon_position')\r\n    let label_style_spacing = this.props.element.getResponsiveSetting('label_style_spacing')\r\n    switch (content_label_position_type) {\r\n      case \"top\":\r\n        styleLabel = {\r\n          marginBottom: label_style_spacing\r\n            ? label_style_spacing?.size +\r\n            label_style_spacing?.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n      case \"bottom\":\r\n        styleLabel = {\r\n          marginTop: label_style_spacing\r\n            ? label_style_spacing?.size +\r\n            label_style_spacing?.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n      case \"left\":\r\n        styleLabel = {\r\n          marginRight: label_style_spacing\r\n            ? label_style_spacing?.size +\r\n            label_style_spacing?.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"altrp-field-label-container-left\";\r\n        break;\r\n      case \"absolute\":\r\n        styleLabel = {\r\n          position: \"absolute\",\r\n          zIndex: 2\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n    }\r\n\r\n    if (this.state.settings.content_label || label_icon ) {\r\n      label = (\r\n        <div\r\n          className={\"altrp-field-label-container \" + classLabel}\r\n          style={styleLabel}\r\n        >\r\n          <label\r\n            htmlFor={this.getName()}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: label_icon_position,\r\n            }}\r\n            className={`altrp-field-label altrp-field-label_text-widget ${this.state.settings.content_required\r\n              ? \"altrp-field-label--required\"\r\n              : \"\"\r\n            }`}\r\n          >\r\n            {this.state.settings.content_label}\r\n\r\n            {label_icon && label_icon.type && (\r\n              <span className=\"altrp-label-icon\">\r\n              {renderAsset(label_icon)}\r\n            </span>\r\n            )}\r\n          </label>\r\n        </div>\r\n      );\r\n    } else {\r\n      label = null;\r\n    }\r\n    let options = this.getOptions();\r\n\r\n    let input = (\r\n      <div className=\"altrp-input-wrapper altrp-input-wrapper_autocomplete\">\r\n        <Popover2\r\n          isOpen={this.state.isOpen}\r\n          // isOpen={true}\r\n          disabled={!options.length}\r\n          minimal={true}\r\n          autoFocus={false}\r\n          fill={true}\r\n          position=\"bottom\"\r\n          popoverRef={this.popoverRef}\r\n          usePortal={false}\r\n          content={<Menu>\r\n            {options.map(this.itemRenderer)}\r\n          </Menu>}\r\n        >\r\n          <AltrpInput\r\n            inputRef={this.inputRef}\r\n            type={this.state.settings.content_type === 'password' ? (this.state.showPassword ? \"text\" : \"password\") : this.state.settings.content_type}\r\n            name={this.getName()}\r\n            id={this.getName()}\r\n            value={value || \"\"}\r\n            popoverProps={this.popoverProps}\r\n            element={this.props.element}\r\n            readOnly={content_readonly}\r\n            placeholder={this.state.settings.content_placeholder}\r\n            settings={this.props.element.getSettings()}\r\n            onKeyDown={this.handleEnter}\r\n            onChange={this.onChange}\r\n            onBlur={this.onBlur}\r\n            onFocus={this.onFocus}\r\n            leftIcon={this.renderLeftIcon()}\r\n            rightElement={this.renderRightIcon()}\r\n          />\r\n\r\n      </Popover2>\r\n\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <AltrpFieldContainer\r\n        settings={settings}\r\n        className=\"altrp-field-container \"\r\n      >\r\n        {content_label_position_type === \"top\" ? label : \"\"}\r\n        {content_label_position_type === \"left\" ? label : \"\"}\r\n        {content_label_position_type === \"right\" ? label : \"\"}\r\n        {content_label_position_type === \"absolute\" ? label : \"\"}\r\n        {/* .altrp-field-label-container */}\r\n        {input}\r\n        {content_label_position_type === \"bottom\" ? label : \"\"}\r\n      </AltrpFieldContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputTextCommonWidget;\r\n","const {\r\n  isEditor,\r\n  replaceContentWithData,\r\n  renderAsset,\r\n  getDataFromLocalStorage,\r\n} = window.altrpHelpers;\r\nimport {changeFormFieldValue} from \"../../../../../front-app/src/js/store/forms-data-storage/actions\";\r\nimport AltrpInput from \"../altrp-input/AltrpInput\";\r\n\r\n\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n.altrp-field-label_text-widget{\r\n    width: 100%;\r\n}\r\n.bp3-icon_text-widget img{\r\n  width: 16px;\r\n  height: 16px;\r\n  object-fit: contain;\r\n  pointer-events: none;\r\n}\r\n.bp3-icon_text-widget svg{\r\n  width: 16px;\r\n  height: 16px;\r\n  pointer-events: none;\r\n}\r\n.bp3-icon_right{\r\n    margin: 7px;\r\n}\r\n.altrp-field {\r\n  border-style: solid;\r\n  width: 100%;\r\n}\r\n.altrp-field-file{\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.altrp-label-icon svg,\r\n.altrp-label-icon img {\r\n  width: 20px;\r\n}\r\n.altrp-label-icon svg{\r\n  height: 20px;\r\n}\r\n.altrp-field-file__field{\r\n  display: none;\r\n}\r\n.altrp-field-file__placeholder{\r\n  display: none;\r\n}\r\n.altrp-field-file_empty .altrp-field-file__placeholder{\r\n  display: block;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: rgb(52,59,76);\r\n  color: #fff;\r\n}\r\n.input-clear-btn {\r\n  background: transparent;\r\n  padding: 0;\r\n  position: absolute;\r\n  bottom: calc(50% - 7px);\r\n  right: 15px;\r\n  display: none;\r\n}\r\n.input-clear-btn:hover {\r\n  font-weight: bold;\r\n}\r\n.altrp-field:hover + .input-clear-btn, .input-clear-btn:hover {\r\n  display: block;\r\n}\r\n.altrp-input-wrapper, .altrp-field-select2 {\r\n  position: relative;\r\n  flex-grow: 1;\r\n}\r\n.altrp-field-label--required::after {\r\n  content: \"*\";\r\n  color: red;\r\n  font-size: inherit;\r\n  padding-left: 10px;\r\n}\r\n.altrp-field-label {\r\n  font-size: 16px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-field-select2__single-value, .altrp-field {\r\n  font-size: 16px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-field-select2__control, .altrp-field {\r\n  text-align: left;\r\n  padding-top: 2px;\r\n  padding-right: 2px;\r\n  padding-bottom: 2px;\r\n  padding-left: 2px;\r\n  border-width: 1px;\r\n}\r\n.altrp-field-select2__control:hover{\r\n  border-width: 1px;\r\n}\r\n.altrp-field-container {\r\n  margin: 0;\r\n}\r\n.altrp-field::placeholder, .altrp-field-select2__placeholder {\r\n  font-size: 13px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-image-select {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n.altrp-image-select img {\r\n  flex-grow: 1;\r\n  object-fit: contain;\r\n}\r\n.altrp-field {\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n.altrp-field.active {\r\n  border-color: lightcoral;\r\n}\r\n.altrp-field-label {\r\n  text-align: center;\r\n  display: block;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__single-value {\r\n  font-size: 14px;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__indicator-separator {\r\n  display: none;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__indicator {\r\n  align-items: center;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__control {\r\n  width: 100px;\r\n  min-height: 32px;\r\n  padding: 0;\r\n  border-radius: 0;\r\n  outline: none;\r\n  border-color: rgb(142,148,170);\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__control input {\r\n  border: none;\r\n}\r\n.altrp-field-select2 {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  pointer-events: none;\r\n}\r\n.altrp-field-select2__control {\r\n  webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  background-color: hsl(0,0%,100%);\r\n  border-color: hsl(0,0%,80%);\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  cursor: default;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex-wrap: wrap;\r\n  -ms-flex-wrap: wrap;\r\n  flex-wrap: wrap;\r\n  -webkit-box-pack: justify;\r\n  -webkit-justify-content: space-between;\r\n  -ms-flex-pack: justify;\r\n  justify-content: space-between;\r\n  min-height: 38px;\r\n  outline: 0 !important;\r\n  position: relative;\r\n  -webkit-transition: all 100ms;\r\n  transition: all 100ms;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__value-container {\r\n  -webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex: 1;\r\n  -ms-flex: 1;\r\n  flex: 1;\r\n  -webkit-flex-wrap: wrap;\r\n  -ms-flex-wrap: wrap;\r\n  flex-wrap: wrap;\r\n  padding: 2px 8px;\r\n  -webkit-overflow-scrolling: touch;\r\n  position: relative;\r\n  overflow: hidden;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__single-value {\r\n  color: hsl(0,0%,20%);\r\n  margin-left: 2px;\r\n  margin-right: 2px;\r\n  max-width: calc(100% - 8px);\r\n  overflow: hidden;\r\n  position: absolute;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  top: 50%;\r\n  -webkit-transform: translateY(-50%);\r\n  -ms-transform: translateY(-50%);\r\n  transform: translateY(-50%);\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicators {\r\n  -webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  -webkit-align-self: stretch;\r\n  -ms-flex-item-align: stretch;\r\n  align-self: stretch;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex-shrink: 0;\r\n  -ms-flex-negative: 0;\r\n  flex-shrink: 0;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicator-separator {\r\n  -webkit-align-self: stretch;\r\n  -ms-flex-item-align: stretch;\r\n  align-self: stretch;\r\n  background-color: hsl(0,0%,80%);\r\n  margin-bottom: 8px;\r\n  margin-top: 8px;\r\n  width: 1px;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicator {\r\n  color: hsl(0,0%,80%);\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  padding: 8px;\r\n  -webkit-transition: color 150ms;\r\n  transition: color 150ms;\r\n  box-sizing: border-box;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.tba-placeholder {\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n.altrp-field-subgroup {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n.altrp-field-option {\r\n  display: flex;\r\n  padding: 10px;\r\n}\r\n.altrp-field-option__label {\r\n  cursor: pointer;\r\n}\r\ntextarea.altrp-field {\r\n  display: block;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__placeholder {\r\n  white-space: nowrap;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__single-value {\r\n  font-size: 14px;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__indicator-separator {\r\n  display: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__indicator {\r\n  align-items: center;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__control {\r\n  width: 100%;\r\n  min-height: 19px;\r\n  padding: 0;\r\n  border-radius: 0;\r\n  outline: none;\r\n  border-color: rgb(142, 148, 170);\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__control input {\r\n  border: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__value-container {\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  line-height: 13px;\r\n}\r\n.altrp-field-required {\r\n  color: red;\r\n  font-size: 18px;\r\n  padding-left: 10px;\r\n}\r\n.altrp-field-container-label {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.altrp-field-label-container-left {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.altrp-field-label-container {\r\n  display: inline-flex;\r\n  align-items: center;\r\n}\r\n.altrp-field-select2__indicator.altrp-field-select2__dropdown-indicator {\r\n  padding: 0 8px;\r\n  max-height: 14px;\r\n  overflow: hidden;\r\n}\r\n.altrp-field-select2 .altrp-field-select2__value-container {\r\n  padding: 0px 8px;\r\n}\r\n.altrp-field-select2 .css-b8ldur-Input {\r\n  padding-bottom: 0px;\r\n  padding-top: 0px;\r\n  margin: 0 2px;\r\n}\r\n.altrp-field-select2 .altrp-field-select2__control {\r\n  min-height: 14px;\r\n}\r\n`)\r\n\r\nconst AltrpFieldContainer = styled.div`\r\n  ${({settings: {content_label_position_type}}) => {\r\n  switch (content_label_position_type) {\r\n    case \"left\": {\r\n      return \"display: flex\";\r\n    }\r\n    case \"right\": {\r\n      return \"display:flex;flex-direction:row-reverse;justify-content:flex-end;\";\r\n    }\r\n  }\r\n  return \"\";\r\n}}\r\n`;\r\n\r\nclass InputTextCommonWidget extends Component {\r\n  timeInput = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    props.element.component = this;\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    this.onChange = this.onChange.bind(this);\r\n    this.debounceDispatch = this.debounceDispatch.bind(this);\r\n\r\n    this.defaultValue = this.getContent(\"content_default_value\")\r\n\r\n    this.state = {\r\n      settings: {...props.element.getSettings()},\r\n      showPassword: false,\r\n    };\r\n    this.popoverProps = {\r\n      usePortal: true,\r\n      // isOpen:true ,\r\n      portalClassName: `altrp-portal altrp-portal${this.props.element.getId()}`,\r\n      portalContainer: window.EditorFrame ? window.EditorFrame.contentWindow.document.body : document.body,\r\n    };\r\n    if (this.getContent(\"content_default_value\")) {\r\n      this.dispatchFieldValueToStore(this.getContent(\"content_default_value\"));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Чистит значение\r\n   */\r\n  clearValue() {\r\n    let value = \"\";\r\n    this.onChange(value);\r\n    this.dispatchFieldValueToStore(value, true);\r\n  }\r\n\r\n  /**\r\n   * Обработка нажатия клавиши\r\n   * @param {{}} e\r\n   */\r\n  handleEnter = e => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      const inputs = Array.from(document.querySelectorAll(\"input,select\"));\r\n      const index = inputs.indexOf(e.target);\r\n      if (index === undefined) return;\r\n      inputs[index + 1] && inputs[index + 1].focus();\r\n      const {\r\n        create_allowed,\r\n        create_label,\r\n        create_url\r\n      } = this.props.element.getSettings();\r\n      if (create_allowed && create_label && create_url) {\r\n        this.createItem(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Загрузка виджета\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  async _componentDidMount(prevProps, prevState) {\r\n\r\n    let value = this.getValue();\r\n\r\n    /**\r\n     * Если модель обновилась при смене URL\r\n     */\r\n    if (\r\n      prevProps &&\r\n      !prevProps.currentModel.getProperty(\"altrpModelUpdated\") &&\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\r\n    ) {\r\n      value = this.getContent(\"content_default_value\");\r\n      this.setState(\r\n        state => ({...state, contentLoaded: true}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    if (\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\") &&\r\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\r\n      !this.state.contentLoaded\r\n    ) {\r\n      value = this.getContent(\"content_default_value\");\r\n      this.setState(\r\n        state => ({...state, contentLoaded: true}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n      return;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {string}\r\n   */\r\n  getValue = () => {\r\n    let value;\r\n    let formId = this.props.element.getFormId();\r\n    let fieldName = this.props.element.getFieldId();\r\n    if (isEditor()) {\r\n      value = this.state.value;\r\n    } else {\r\n      value = _.get(appStore.getState().formsStore, `${formId}`, '')\r\n      value = _.get(value, fieldName, '')\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Обновление виджета\r\n   */\r\n  async _componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevProps &&\r\n      !prevProps.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\r\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\")\r\n    ) {\r\n      let value = this.getContent(\r\n        \"content_default_value\"\r\n      );\r\n      this.setState(\r\n        state => ({...state, contentLoaded: true}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n    }\r\n\r\n\r\n    this.updateValue(prevProps);\r\n  }\r\n\r\n  /**\r\n   * Обновить значение если нужно\r\n   * @param {{}} prevProps\r\n   */\r\n  updateValue(prevProps) {\r\n    if (isEditor()) {\r\n      return;\r\n    }\r\n    let content_calculation = this.props.element.getSettings(\r\n      \"content_calculation\"\r\n    );\r\n    const altrpforms = this.props.formsStore;\r\n    const fieldName = this.props.element.getFieldId();\r\n    const formId = this.props.element.getFormId();\r\n    if (!content_calculation) {\r\n      /**\r\n       * Обновить значение, если formsStore изменилось из другого компонента\r\n       */\r\n      const path = `${formId}.${fieldName}`;\r\n      if (\r\n        this.props.formsStore !== prevProps.formsStore &&\r\n        _.get(altrpforms, path) !== this.state.value\r\n      ) {\r\n        this.setState(state => ({\r\n          ...state,\r\n          value: _.get(altrpforms, path)\r\n        }));\r\n      }\r\n      return;\r\n    }\r\n\r\n    const prevContext = {};\r\n\r\n    const altrpdata = this.props.currentDataStorage.getData();\r\n    const altrpmodel = this.props.currentModel.getData();\r\n    const altrpuser = this.props.currentUser.getData();\r\n    const altrppagestate = this.props.altrpPageState.getData();\r\n    const altrpresponses = this.props.altrpresponses.getData();\r\n    const altrpmeta = this.props.altrpMeta.getData();\r\n    const context = this.props.element.getCurrentModel().getData();\r\n    if (content_calculation.indexOf(\"altrpdata\") !== -1) {\r\n      context.altrpdata = altrpdata;\r\n      if (!altrpdata.currentDataStorageLoaded) {\r\n        prevContext.altrpdata = altrpdata;\r\n      } else {\r\n        prevContext.altrpdata = prevProps.currentDataStorage.getData();\r\n      }\r\n    }\r\n    if (content_calculation.indexOf(\"altrpforms\") !== -1) {\r\n      context.altrpforms = altrpforms;\r\n      /**\r\n       * Не производим вычисления, если изменилось текущее поле\r\n       */\r\n      if (`${formId}.${fieldName}` === altrpforms.changedField) {\r\n        prevContext.altrpforms = altrpforms;\r\n      } else {\r\n        prevContext.altrpforms = prevProps.formsStore;\r\n      }\r\n    }\r\n    if (content_calculation.indexOf(\"altrpmodel\") !== -1) {\r\n      context.altrpmodel = altrpmodel;\r\n      prevContext.altrpmodel = prevProps.currentModel.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\r\n      context.altrpuser = altrpuser;\r\n      prevContext.altrpuser = prevProps.currentUser.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\r\n      context.altrpuser = altrpuser;\r\n      prevContext.altrpuser = prevProps.currentUser.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrppagestate\") !== -1) {\r\n      context.altrppagestate = altrppagestate;\r\n      prevContext.altrppagestate = prevProps.altrpPageState.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpmeta\") !== -1) {\r\n      context.altrpmeta = altrpmeta;\r\n      prevContext.altrpmeta = prevProps.altrpMeta.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpresponses\") !== -1) {\r\n      context.altrpresponses = altrpresponses;\r\n      prevContext.altrpresponses = prevProps.altrpresponses.getData();\r\n    }\r\n\r\n    if (content_calculation.indexOf(\"altrpstorage\") !== -1) {\r\n      context.altrpstorage = getDataFromLocalStorage(\"altrpstorage\", {});\r\n    }\r\n\r\n    if (\r\n      _.isEqual(prevProps.currentDataStorage, this.props.currentDataStorage) &&\r\n      _.isEqual(prevProps.currentUser, this.props.currentUser) &&\r\n      _.isEqual(prevProps.formsStore, this.props.formsStore) &&\r\n      _.isEqual(prevProps.altrpPageState, this.props.altrpPageState) &&\r\n      _.isEqual(prevProps.altrpMeta, this.props.altrpMeta) &&\r\n      _.isEqual(prevProps.altrpresponses, this.props.altrpresponses) &&\r\n      _.isEqual(prevProps.currentModel, this.props.currentModel)\r\n    ) {\r\n      return;\r\n    }\r\n    if (\r\n      !_.isEqual(prevProps.formsStore, this.props.formsStore) &&\r\n      `${formId}.${fieldName}` === altrpforms.changedField\r\n    ) {\r\n      return;\r\n    }\r\n    let value = \"\";\r\n    try {\r\n      content_calculation = content_calculation\r\n        .replace(/}}/g, \"')\")\r\n        .replace(/{{/g, \"_.get(context, '\");\r\n      value = eval(content_calculation);\r\n      if (value === this.state.value) {\r\n        return;\r\n      }\r\n      this.setState(\r\n        state => ({...state, value}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n    } catch (e) {\r\n      console.error(\r\n        \"Evaluate error in Input: '\" + e.message + \"'\",\r\n        this.props.element.getId()\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Изменение значения в виджете\r\n   * @param e\r\n   */\r\n  onChange(e) {\r\n    let value = \"\";\r\n    if (e && e.target) {\r\n      value = e.target.value;\r\n    }\r\n\r\n    if (e && e.value) {\r\n      value = e.value;\r\n    }\r\n\r\n\r\n    /**\r\n     * Обновляем хранилище только если не текстовое поле\r\n     */\r\n\r\n    const change_actions = this.props.element.getSettings(\"change_actions\");\r\n    const change_change_end = this.props.element.getSettings(\r\n      \"change_change_end\"\r\n    );\r\n    const change_change_end_delay = this.props.element.getSettings(\r\n      \"change_change_end_delay\"\r\n    );\r\n\r\n    if (change_actions && !change_change_end && !isEditor()) {\r\n      this.debounceDispatch(\r\n        value !== undefined ? value : value\r\n      );\r\n    }\r\n    if (change_actions && change_change_end && !isEditor()) {\r\n      this.timeInput && clearTimeout(this.timeInput);\r\n      this.timeInput = setTimeout(() => {\r\n        this.debounceDispatch(\r\n          value !== undefined ? value : value\r\n        );\r\n      }, change_change_end_delay);\r\n    }\r\n    if(isEditor()){\r\n      this.setState(state=>({...state, value}))\r\n    } else {\r\n      this.dispatchFieldValueToStore(value, true)\r\n    }\r\n  }\r\n\r\n  debounceDispatch = _.debounce(\r\n    value => this.dispatchFieldValueToStore(value, true),\r\n    150\r\n  );\r\n\r\n\r\n  /**\r\n   * Для действие по фокусу\r\n   * @param e\r\n   * @return {Promise<void>}\r\n   */\r\n\r\n  onFocus = async e => {\r\n    const focus_actions = this.props.element.getSettings(\"focus_actions\");\r\n\r\n    if (focus_actions && !isEditor()) {\r\n      const actionsManager = (\r\n        await import(\r\n          /* webpackChunkName: 'ActionsManager' */\r\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n          )\r\n      ).default;\r\n      await actionsManager.callAllWidgetActions(\r\n        this.props.element.getIdForAction(),\r\n        \"focus\",\r\n        focus_actions,\r\n        this.props.element\r\n      );\r\n    }\r\n  };\r\n  /**\r\n   * Потеря фокуса для оптимизации\r\n   * @param  e\r\n   * @param  editor для получения изменений из CKEditor\r\n   */\r\n  onBlur = async (e, editor = null) => {\r\n    this.dispatchFieldValueToStore(e.target.value, true);\r\n\r\n    if (this.props.element.getSettings(\"actions\", []) && !isEditor()) {\r\n      const actionsManager = (\r\n        await import(\r\n          /* webpackChunkName: 'ActionsManager' */\r\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n          )\r\n      ).default;\r\n      await actionsManager.callAllWidgetActions(\r\n        this.props.element.getIdForAction(),\r\n        \"blur\",\r\n        this.props.element.getSettings(\"actions\", []),\r\n        this.props.element\r\n      );\r\n    }\r\n  };\r\n  /**\r\n   * Передадим значение в хранилище формы\r\n   * @param {*} value\r\n   * @param {boolean} userInput true - имзенилось пользователем\r\n   */\r\n  dispatchFieldValueToStore = async (value, userInput = false) => {\r\n    let formId = this.props.element.getFormId();\r\n    let fieldName = this.props.element.getFieldId();\r\n    if (fieldName.indexOf(\"{{\") !== -1) {\r\n      fieldName = replaceContentWithData(fieldName);\r\n    }\r\n\r\n    if (_.isObject(this.props.appStore) && fieldName && formId) {\r\n      this.props.appStore.dispatch(\r\n        changeFormFieldValue(fieldName, value, formId, userInput)\r\n      );\r\n      if (userInput) {\r\n        const change_actions = this.props.element.getSettings(\"change_actions\");\r\n\r\n        if (change_actions && !isEditor()) {\r\n          const actionsManager = (\r\n            await import(\r\n              /* webpackChunkName: 'ActionsManager' */\r\n              \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n              )\r\n          ).default;\r\n          await actionsManager.callAllWidgetActions(\r\n            this.props.element.getIdForAction(),\r\n            \"change\",\r\n            change_actions,\r\n            this.props.element\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Взовращает имя для атрибута name\r\n   * @return {string}\r\n   */\r\n  getName() {\r\n    return `${this.props.element.getFormId()}[${this.props.element.getFieldId()}]`;\r\n  }\r\n\r\n  handleLockClick = () => {\r\n    this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        showPassword: !state.showPassword,\r\n      }\r\n    })\r\n  }\r\n\r\n  renderLeftIcon(){\r\n    const {element} = this.props;\r\n    let left_icon = element.getResponsiveSetting('left_icon');\r\n    let password_show_left_icon = element.getResponsiveSetting('password_show_left_icon');\r\n    const {content_type} = element.settings\r\n    const leftIconProps = {}\r\n    if(content_type === 'password' && this.state.showPassword && password_show_left_icon){\r\n      left_icon = password_show_left_icon\r\n      leftIconProps.onClick = this.handleLockClick\r\n    }\r\n    if(content_type === 'password' && password_show_left_icon){\r\n      leftIconProps.onClick = this.handleLockClick\r\n      leftIconProps.style = {\r\n        cursor: 'pointer'\r\n      }\r\n    }\r\n    if(!left_icon){\r\n      return null\r\n    }\r\n    return <span className=\"bp3-icon bp3-icon_text-widget bp3-icon_left\" {...leftIconProps} tabIndex=\"0\">\r\n      {renderAsset(left_icon, )}\r\n    </span>\r\n  }\r\n  renderRightIcon(){\r\n    const {element} = this.props;\r\n    let right_icon = element.getResponsiveSetting('right_icon');\r\n    let password_show_right_icon = element.getResponsiveSetting('password_show_right_icon');\r\n    const {content_type} = element.settings\r\n    const rightIconProps = {}\r\n    if(content_type === 'password' && this.state.showPassword && password_show_right_icon){\r\n      right_icon = password_show_right_icon\r\n    }\r\n    if(content_type === 'password' && password_show_right_icon){\r\n      rightIconProps.onClick = this.handleLockClick\r\n      rightIconProps.style = {\r\n        cursor: 'pointer'\r\n      }\r\n    }\r\n    if(!right_icon){\r\n      return null\r\n    }\r\n    return <span className=\"bp3-icon bp3-icon_text-widget bp3-icon_right\" {...rightIconProps} tabIndex=\"0\">\r\n      {renderAsset(right_icon, )}\r\n    </span>\r\n  }\r\n\r\n  render() {\r\n    let label = null;\r\n    const settings = this.props.element.getSettings();\r\n    const {\r\n      content_readonly,\r\n      label_icon\r\n    } = settings;\r\n    let value = this.getValue()\r\n\r\n    let classLabel = \"\";\r\n    let styleLabel = {};\r\n    const content_label_position_type = this.props.element.getResponsiveSetting(\r\n      \"content_label_position_type\"\r\n    );\r\n    const label_icon_position = this.props.element.getResponsiveSetting('label_icon_position')\r\n    let label_style_spacing = this.props.element.getResponsiveSetting('label_style_spacing')\r\n    switch (content_label_position_type) {\r\n      case \"top\":\r\n        styleLabel = {\r\n          marginBottom: label_style_spacing\r\n            ? label_style_spacing?.size +\r\n            label_style_spacing?.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n      case \"bottom\":\r\n        styleLabel = {\r\n          marginTop: label_style_spacing\r\n            ? label_style_spacing?.size +\r\n            label_style_spacing?.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n      case \"left\":\r\n        styleLabel = {\r\n          marginRight: label_style_spacing\r\n            ? label_style_spacing?.size +\r\n            label_style_spacing?.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"altrp-field-label-container-left\";\r\n        break;\r\n      case \"absolute\":\r\n        styleLabel = {\r\n          position: \"absolute\",\r\n          zIndex: 2\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n    }\r\n\r\n    if (this.state.settings.content_label || label_icon ) {\r\n      label = (\r\n        <div\r\n          className={\"altrp-field-label-container \" + classLabel}\r\n          style={styleLabel}\r\n        >\r\n          <label\r\n            htmlFor={this.getName()}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: label_icon_position,\r\n            }}\r\n            className={`altrp-field-label altrp-field-label_text-widget ${this.state.settings.content_required\r\n              ? \"altrp-field-label--required\"\r\n              : \"\"\r\n            }`}\r\n          >\r\n            {this.state.settings.content_label}\r\n\r\n            {label_icon && label_icon.type && (\r\n              <span className=\"altrp-label-icon\">\r\n              {renderAsset(label_icon)}\r\n            </span>\r\n            )}\r\n          </label>\r\n        </div>\r\n      );\r\n    } else {\r\n      label = null;\r\n    }\r\n    let autocomplete = \"off\";\r\n    if (this.state.settings.content_autocomplete) {\r\n      autocomplete = \"on\";\r\n    } else {\r\n      autocomplete = \"off\";\r\n    }\r\n\r\n    let input = (\r\n      <div className=\"altrp-input-wrapper\">\r\n        <AltrpInput\r\n          type={this.state.settings.content_type === 'password' ? (this.state.showPassword ? \"text\" : \"password\") : this.state.settings.content_type}\r\n          name={this.getName()}\r\n          id={this.getName()}\r\n          value={value || \"\"}\r\n          popoverProps={this.popoverProps}\r\n          element={this.props.element}\r\n          readOnly={content_readonly}\r\n          autoComplete={autocomplete}\r\n          placeholder={this.state.settings.content_placeholder}\r\n          settings={this.props.element.getSettings()}\r\n          onKeyDown={this.handleEnter}\r\n          onChange={this.onChange}\r\n          onBlur={this.onBlur}\r\n          onFocus={this.onFocus}\r\n          leftIcon={this.renderLeftIcon()}\r\n          rightElement={this.renderRightIcon()}\r\n        />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <AltrpFieldContainer\r\n        settings={settings}\r\n        className=\"altrp-field-container \"\r\n      >\r\n        {content_label_position_type === \"top\" ? label : \"\"}\r\n        {content_label_position_type === \"left\" ? label : \"\"}\r\n        {content_label_position_type === \"right\" ? label : \"\"}\r\n        {content_label_position_type === \"absolute\" ? label : \"\"}\r\n        {/* .altrp-field-label-container */}\r\n        {input}\r\n        {content_label_position_type === \"bottom\" ? label : \"\"}\r\n      </AltrpFieldContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputTextCommonWidget;\r\n","const {\r\n  convertData,\r\n  isEditor,\r\n  parseOptionsFromSettings,\r\n  parseParamsFromString,\r\n  parseURLTemplate,\r\n  replaceContentWithData,\r\n  renderAssetIcon,\r\n  getDataFromLocalStorage\r\n} = window.altrpHelpers;\r\nimport Resource from \"../../classes/Resource\";\r\nimport { changeFormFieldValue } from \"../../../../../front-app/src/js/store/forms-data-storage/actions\";\r\nimport AltrpModel from \"../../classes/AltrpModel\";\r\nimport AltrpInput from \"../altrp-input/AltrpInput\";\r\n\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n.altrp-field-label_text-widget{\r\n    width: 100%;\r\n}\r\n.bp3-icon_text-widget img{\r\n  width: 16px;\r\n  height: 16px;\r\n  object-fit: contain;\r\n  pointer-events: none;\r\n}\r\n.bp3-icon_text-widget svg{\r\n  width: 16px;\r\n  height: 16px;\r\n  pointer-events: none;\r\n}\r\n.bp3-icon_right{\r\n    margin: 7px;\r\n}\r\n.altrp-field {\r\n  border-style: solid;\r\n  width: 100%;\r\n}\r\n.altrp-field-file{\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.altrp-label-icon svg,\r\n.altrp-label-icon img {\r\n  width: 20px;\r\n}\r\n.altrp-label-icon svg{\r\n  height: 20px;\r\n}\r\n.altrp-field-file__field{\r\n  display: none;\r\n}\r\n.altrp-field-file__placeholder{\r\n  display: none;\r\n}\r\n.altrp-field-file_empty .altrp-field-file__placeholder{\r\n  display: block;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: rgb(52,59,76);\r\n  color: #fff;\r\n}\r\n.input-clear-btn {\r\n  background: transparent;\r\n  padding: 0;\r\n  position: absolute;\r\n  bottom: calc(50% - 7px);\r\n  right: 15px;\r\n  display: none;\r\n}\r\n.input-clear-btn:hover {\r\n  font-weight: bold;\r\n}\r\n.altrp-field:hover + .input-clear-btn, .input-clear-btn:hover {\r\n  display: block;\r\n}\r\n.altrp-input-wrapper, .altrp-field-select2 {\r\n  position: relative;\r\n  flex-grow: 1;\r\n}\r\n.altrp-field-label--required::after {\r\n  content: \"*\";\r\n  color: red;\r\n  font-size: inherit;\r\n  padding-left: 10px;\r\n}\r\n.altrp-field-label {\r\n  font-size: 16px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-field-select2__single-value, .altrp-field {\r\n  font-size: 16px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-field-select2__control, .altrp-field {\r\n  text-align: left;\r\n  padding-top: 2px;\r\n  padding-right: 2px;\r\n  padding-bottom: 2px;\r\n  padding-left: 2px;\r\n  border-width: 1px;\r\n}\r\n.altrp-field-select2__control:hover{\r\n  border-width: 1px;\r\n}\r\n.altrp-field-container {\r\n  margin: 0;\r\n}\r\n.altrp-field::placeholder, .altrp-field-select2__placeholder {\r\n  font-size: 13px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-image-select {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n.altrp-image-select img {\r\n  flex-grow: 1;\r\n  object-fit: contain;\r\n}\r\n.altrp-field {\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n.altrp-field.active {\r\n  border-color: lightcoral;\r\n}\r\n.altrp-field-label {\r\n  text-align: center;\r\n  display: block;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__single-value {\r\n  font-size: 14px;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__indicator-separator {\r\n  display: none;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__indicator {\r\n  align-items: center;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__control {\r\n  width: 100px;\r\n  min-height: 32px;\r\n  padding: 0;\r\n  border-radius: 0;\r\n  outline: none;\r\n  border-color: rgb(142,148,170);\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__control input {\r\n  border: none;\r\n}\r\n.altrp-field-select2 {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  pointer-events: none;\r\n}\r\n.altrp-field-select2__control {\r\n  webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  background-color: hsl(0,0%,100%);\r\n  border-color: hsl(0,0%,80%);\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  cursor: default;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex-wrap: wrap;\r\n  -ms-flex-wrap: wrap;\r\n  flex-wrap: wrap;\r\n  -webkit-box-pack: justify;\r\n  -webkit-justify-content: space-between;\r\n  -ms-flex-pack: justify;\r\n  justify-content: space-between;\r\n  min-height: 38px;\r\n  outline: 0 !important;\r\n  position: relative;\r\n  -webkit-transition: all 100ms;\r\n  transition: all 100ms;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__value-container {\r\n  -webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex: 1;\r\n  -ms-flex: 1;\r\n  flex: 1;\r\n  -webkit-flex-wrap: wrap;\r\n  -ms-flex-wrap: wrap;\r\n  flex-wrap: wrap;\r\n  padding: 2px 8px;\r\n  -webkit-overflow-scrolling: touch;\r\n  position: relative;\r\n  overflow: hidden;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__single-value {\r\n  color: hsl(0,0%,20%);\r\n  margin-left: 2px;\r\n  margin-right: 2px;\r\n  max-width: calc(100% - 8px);\r\n  overflow: hidden;\r\n  position: absolute;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  top: 50%;\r\n  -webkit-transform: translateY(-50%);\r\n  -ms-transform: translateY(-50%);\r\n  transform: translateY(-50%);\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicators {\r\n  -webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  -webkit-align-self: stretch;\r\n  -ms-flex-item-align: stretch;\r\n  align-self: stretch;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex-shrink: 0;\r\n  -ms-flex-negative: 0;\r\n  flex-shrink: 0;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicator-separator {\r\n  -webkit-align-self: stretch;\r\n  -ms-flex-item-align: stretch;\r\n  align-self: stretch;\r\n  background-color: hsl(0,0%,80%);\r\n  margin-bottom: 8px;\r\n  margin-top: 8px;\r\n  width: 1px;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicator {\r\n  color: hsl(0,0%,80%);\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  padding: 8px;\r\n  -webkit-transition: color 150ms;\r\n  transition: color 150ms;\r\n  box-sizing: border-box;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.tba-placeholder {\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n.altrp-field-subgroup {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n.altrp-field-option {\r\n  display: flex;\r\n  padding: 10px;\r\n}\r\n.altrp-field-option__label {\r\n  cursor: pointer;\r\n}\r\ntextarea.altrp-field {\r\n  display: block;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__placeholder {\r\n  white-space: nowrap;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__single-value {\r\n  font-size: 14px;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__indicator-separator {\r\n  display: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__indicator {\r\n  align-items: center;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__control {\r\n  width: 100%;\r\n  min-height: 19px;\r\n  padding: 0;\r\n  border-radius: 0;\r\n  outline: none;\r\n  border-color: rgb(142, 148, 170);\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__control input {\r\n  border: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__value-container {\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  line-height: 13px;\r\n}\r\n.altrp-field-required {\r\n  color: red;\r\n  font-size: 18px;\r\n  padding-left: 10px;\r\n}\r\n.altrp-field-container-label {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.altrp-field-label-container-left {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.altrp-field-label-container {\r\n  display: inline-flex;\r\n  align-items: center;\r\n}\r\n.altrp-field-select2__indicator.altrp-field-select2__dropdown-indicator {\r\n  padding: 0 8px;\r\n  max-height: 14px;\r\n  overflow: hidden;\r\n}\r\n.altrp-field-select2 .altrp-field-select2__value-container {\r\n  padding: 0px 8px;\r\n}\r\n.altrp-field-select2 .css-b8ldur-Input {\r\n  padding-bottom: 0px;\r\n  padding-top: 0px;\r\n  margin: 0 2px;\r\n}\r\n.altrp-field-select2 .altrp-field-select2__control {\r\n  min-height: 14px;\r\n}\r\n`)\r\n\r\nconst AltrpFieldContainer = styled.div`\r\n  ${({ settings: { content_label_position_type } }) => {\r\n    switch (content_label_position_type) {\r\n      case \"left\": {\r\n        return \"display: flex\";\r\n      }\r\n      case \"right\": {\r\n        return \"display:flex;flex-direction:row-reverse;justify-content:flex-end;\";\r\n      }\r\n    }\r\n    return \"\";\r\n  }}\r\n`;\r\n\r\nclass InputTextWidget extends Component {\r\n  timeInput = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    props.element.component = this;\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    this.onChange = this.onChange.bind(this);\r\n    this.debounceDispatch = this.debounceDispatch.bind(this);\r\n\r\n    this.defaultValue = this.getContent(\"content_default_value\") || \"\";\r\n    this.state = {\r\n      settings: { ...props.element.getSettings() },\r\n      value: this.defaultValue,\r\n      options: parseOptionsFromSettings(\r\n        props.element.getSettings(\"content_options\")\r\n      ),\r\n      paramsForUpdate: null\r\n    };\r\n    this.altrpSelectRef = React.createRef();\r\n    if (this.getContent(\"content_default_value\")) {\r\n      this.dispatchFieldValueToStore(this.getContent(\"content_default_value\"));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Чистит значение\r\n   */\r\n  clearValue() {\r\n    this.onChange(\"\");\r\n    this.dispatchFieldValueToStore(\"\", true);\r\n  }\r\n\r\n  /**\r\n   * Обработка нажатия клавиши\r\n   * @param {{}} e\r\n   */\r\n  handleEnter = e => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      const inputs = Array.from(document.querySelectorAll(\"input,select\"));\r\n      const index = inputs.indexOf(e.target);\r\n      if (index === undefined) return;\r\n      inputs[index + 1] && inputs[index + 1].focus();\r\n      const {\r\n        create_allowed,\r\n        create_label,\r\n        create_url\r\n      } = this.props.element.getSettings();\r\n      if (create_allowed && create_label && create_url) {\r\n        this.createItem(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Загрузка виджета\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  async _componentDidMount(prevProps, prevState) {\r\n    if (this.props.element.getSettings(\"content_options\")) {\r\n      let options = parseOptionsFromSettings(\r\n        this.props.element.getSettings(\"content_options\")\r\n      );\r\n\r\n      this.setState(state => ({ ...state, options }));\r\n    }\r\n\r\n    let value = this.state.value;\r\n\r\n    /**\r\n     * Если динамическое значение загрузилось,\r\n     * то используем this.getContent для получение этого динамического значения\r\n     * старые динамические данные\r\n     * */\r\n    if (\r\n      _.get(value, \"dynamic\") &&\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\r\n    ) {\r\n      value = this.getContent(\"content_default_value\");\r\n    }\r\n\r\n    /**\r\n     * Если модель обновилась при смене URL\r\n     */\r\n    if (\r\n      prevProps &&\r\n      !prevProps.currentModel.getProperty(\"altrpModelUpdated\") &&\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\r\n    ) {\r\n      value = this.getContent(\"content_default_value\");\r\n      this.setState(\r\n        state => ({ ...state, value, contentLoaded: true }),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\") &&\r\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\r\n      !this.state.contentLoaded\r\n    ) {\r\n      value = this.getContent(\"content_default_value\");\r\n      this.setState(\r\n        state => ({ ...state, value, contentLoaded: true }),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (this.state.value !== value) {\r\n      this.setState(\r\n        state => ({ ...state, value }),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получить url для запросов\r\n   */\r\n  getRoute() {\r\n    let url = this.props.element.getSettings(\"model_for_options\");\r\n\r\n    if (url.indexOf(\"/\") === -1) {\r\n      return `/ajax/models/${url}_options`;\r\n    }\r\n    if (url.indexOf(\"{{\") !== -1) {\r\n      url = replaceContentWithData(url);\r\n    }\r\n    return url;\r\n  }\r\n\r\n  /**\r\n   * Обновление виджета\r\n   */\r\n  async _componentDidUpdate(prevProps, prevState) {\r\n    const { content_options, model_for_options } = this.state.settings;\r\n\r\n    if (\r\n      prevProps &&\r\n      !prevProps.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\r\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\")\r\n    ) {\r\n      let value = this.getContent(\r\n        \"content_default_value\",\r\n        this.props.element.getSettings(\"select2_multiple\")\r\n      );\r\n      this.setState(\r\n        state => ({ ...state, value, contentLoaded: true }),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Если обновилась модель, то пробрасываем в стор новое значение (старый источник диамических данных)\r\n     */\r\n    if (\r\n      !_.isEqual(this.props.currentModel, prevProps.currentModel) &&\r\n      this.state.value &&\r\n      this.state.value.dynamic\r\n    ) {\r\n      this.dispatchFieldValueToStore(this.getContent(\"content_default_value\"));\r\n    }\r\n\r\n    /**\r\n     * Если обновилось хранилище данных формы, currentDataStorage или модель, то получаем новые опции c сервера\r\n     */\r\n    if (\r\n      this.props.formsStore !== prevProps.formsStore ||\r\n      this.props.currentModel !== prevProps.currentModel ||\r\n      this.props.currentDataStorage !== prevProps.currentDataStorage\r\n    ) {\r\n      this.updateOptions();\r\n    }\r\n    if (content_options && !model_for_options) {\r\n      let options = parseOptionsFromSettings(content_options);\r\n      if (!_.isEqual(options, this.state.options)) {\r\n        this.setState(state => ({ ...state, options }));\r\n      }\r\n    }\r\n    this.updateValue(prevProps);\r\n  }\r\n\r\n  /**\r\n   * Обновить значение если нужно\r\n   * @param {{}} prevProps\r\n   */\r\n  updateValue(prevProps) {\r\n\r\n    if (isEditor()) {\r\n      return;\r\n    }\r\n\r\n    let content_calculation = this.props.element.getSettings(\r\n      \"content_calculation\"\r\n    );\r\n    const altrpforms = this.props.formsStore;\r\n    const fieldName = this.props.element.getFieldId();\r\n    const formId = this.props.element.getFormId();\r\n\r\n    if (!content_calculation) {\r\n      /**\r\n       * Обновить значение, если formsStore изменилось из другого компонента\r\n       */\r\n      const path = `${formId}.${fieldName}`;\r\n      if (\r\n        this.props.formsStore !== prevProps.formsStore &&\r\n        _.get(altrpforms, path) !== this.state.value\r\n      ) {\r\n        this.setState(state => ({\r\n          ...state,\r\n          value: _.get(altrpforms, path)\r\n        }));\r\n      }\r\n      return;\r\n    }\r\n\r\n    const prevContext = {};\r\n    const altrpdata = this.props.currentDataStorage.getData();\r\n    const altrpmodel = this.props.currentModel.getData();\r\n    const altrpuser = this.props.currentUser.getData();\r\n    const altrppagestate = this.props.altrpPageState.getData();\r\n    const altrpresponses = this.props.altrpresponses.getData();\r\n    const altrpmeta = this.props.altrpMeta.getData();\r\n    const context = this.props.element.getCurrentModel().getData();\r\n\r\n    if (content_calculation.indexOf(\"altrpdata\") !== -1) {\r\n      context.altrpdata = altrpdata;\r\n      if (!altrpdata.currentDataStorageLoaded) {\r\n        prevContext.altrpdata = altrpdata;\r\n      } else {\r\n        prevContext.altrpdata = prevProps.currentDataStorage.getData();\r\n      }\r\n    }\r\n\r\n    if (content_calculation.indexOf(\"altrpforms\") !== -1) {\r\n      context.altrpforms = altrpforms;\r\n      /**\r\n       * Не производим вычисления, если изменилось текущее поле\r\n       */\r\n      if (`${formId}.${fieldName}` === altrpforms.changedField) {\r\n        prevContext.altrpforms = altrpforms;\r\n      } else {\r\n        prevContext.altrpforms = prevProps.formsStore;\r\n      }\r\n    }\r\n\r\n    if (content_calculation.indexOf(\"altrpmodel\") !== -1) {\r\n      context.altrpmodel = altrpmodel;\r\n      prevContext.altrpmodel = prevProps.currentModel.getData();\r\n    }\r\n\r\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\r\n      context.altrpuser = altrpuser;\r\n      prevContext.altrpuser = prevProps.currentUser.getData();\r\n    }\r\n\r\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\r\n      context.altrpuser = altrpuser;\r\n      prevContext.altrpuser = prevProps.currentUser.getData();\r\n    }\r\n\r\n    if (content_calculation.indexOf(\"altrppagestate\") !== -1) {\r\n      context.altrppagestate = altrppagestate;\r\n      prevContext.altrppagestate = prevProps.altrpPageState.getData();\r\n    }\r\n\r\n    if (content_calculation.indexOf(\"altrpmeta\") !== -1) {\r\n      context.altrpmeta = altrpmeta;\r\n      prevContext.altrpmeta = prevProps.altrpMeta.getData();\r\n    }\r\n\r\n    if (content_calculation.indexOf(\"altrpresponses\") !== -1) {\r\n      context.altrpresponses = altrpresponses;\r\n      prevContext.altrpresponses = prevProps.altrpresponses.getData();\r\n    }\r\n\r\n    if (content_calculation.indexOf(\"altrpstorage\") !== -1) {\r\n      context.altrpstorage = getDataFromLocalStorage(\"altrpstorage\", {});\r\n    }\r\n\r\n    if (\r\n      _.isEqual(prevProps.currentDataStorage, this.props.currentDataStorage) &&\r\n      _.isEqual(prevProps.currentUser, this.props.currentUser) &&\r\n      _.isEqual(prevProps.formsStore, this.props.formsStore) &&\r\n      _.isEqual(prevProps.altrpPageState, this.props.altrpPageState) &&\r\n      _.isEqual(prevProps.altrpMeta, this.props.altrpMeta) &&\r\n      _.isEqual(prevProps.altrpresponses, this.props.altrpresponses) &&\r\n      _.isEqual(prevProps.currentModel, this.props.currentModel)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !_.isEqual(prevProps.formsStore, this.props.formsStore) &&\r\n      `${formId}.${fieldName}` === altrpforms.changedField\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    let value = \"\";\r\n\r\n    try {\r\n      content_calculation = content_calculation\r\n        .replace(/}}/g, \"')\")\r\n        .replace(/{{/g, \"_.get(context, '\");\r\n      value = eval(content_calculation);\r\n      if (value === this.state.value) {\r\n        return;\r\n      }\r\n      this.setState(\r\n        state => ({ ...state, value }),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n    } catch (e) {\r\n      console.error(\r\n        \"Evaluate error in Input: '\" + e.message + \"'\",\r\n        this.props.element.getId()\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновляет опции для селекта при обновлении данных, полей формы\r\n   */\r\n  async updateOptions() {\r\n    {\r\n      let formId = this.props.element.getFormId();\r\n      let paramsForUpdate = this.props.element.getSettings(\"params_for_update\");\r\n      let formData = _.get(this.props.formsStore, [formId], {});\r\n      paramsForUpdate = parseParamsFromString(\r\n        paramsForUpdate,\r\n        new AltrpModel(formData)\r\n      );\r\n      /**\r\n       * Сохраняем параметры запроса, и если надо обновляем опции\r\n       */\r\n      let options = [...this.state.options];\r\n\r\n      if (!_.isEqual(paramsForUpdate, this.state.paramsForUpdate)) {\r\n        if (!_.isEmpty(paramsForUpdate)) {\r\n          if (this.props.element.getSettings(\"params_as_filters\", false)) {\r\n            paramsForUpdate = JSON.stringify(paramsForUpdate);\r\n            options = await new Resource({\r\n              route: this.getRoute()\r\n            }).getQueried({ filters: paramsForUpdate });\r\n          } else {\r\n            options = await new Resource({ route: this.getRoute() }).getQueried(\r\n              paramsForUpdate\r\n            );\r\n          }\r\n          options = !_.isArray(options) ? options.data : options;\r\n          options = _.isArray(options) ? options : [];\r\n        } else if (this.state.paramsForUpdate) {\r\n          options = await new Resource({ route: this.getRoute() }).getAll();\r\n          options = !_.isArray(options) ? options.data : options;\r\n          options = _.isArray(options) ? options : [];\r\n        }\r\n\r\n        this.setState(state => ({\r\n          ...state,\r\n          paramsForUpdate,\r\n          options\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Изменение значения в виджете\r\n   * @param e\r\n   * @param  editor для получения изменений из CKEditor\r\n   */\r\n  onChange(e, editor = null) {\r\n    let value = \"\";\r\n    let valueToDispatch;\r\n\r\n    if (e && e.target) {\r\n      value = e.target.value;\r\n    }\r\n\r\n    if (e && e.value) {\r\n      value = e.value;\r\n    }\r\n\r\n    if (_.get(editor, \"getData\")) {\r\n      value = `<div class=\"ck ck-content\" style=\"width:100%\">${editor.getData()}</div>`;\r\n    }\r\n\r\n    if (_.isArray(e)) {\r\n      value = _.cloneDeep(e);\r\n    }\r\n\r\n    if (\r\n      this.props.element.getSettings(\"content_options_nullable\") &&\r\n      e &&\r\n      e.value === \"<null>\"\r\n    ) {\r\n      value = null;\r\n    }\r\n\r\n    this.setState(\r\n      state => ({\r\n        ...state,\r\n        value\r\n      }),\r\n      () => {\r\n        /**\r\n         * Обновляем хранилище только если не текстовое поле\r\n         */\r\n\r\n        const change_actions = this.props.element.getSettings(\"change_actions\");\r\n        const change_change_end = this.props.element.getSettings(\r\n          \"change_change_end\"\r\n        );\r\n        const change_change_end_delay = this.props.element.getSettings(\r\n          \"change_change_end_delay\"\r\n        );\r\n\r\n        if (change_actions && !change_change_end && !isEditor()) {\r\n          this.debounceDispatch(\r\n            valueToDispatch !== undefined ? valueToDispatch : value\r\n          );\r\n        }\r\n        if (change_actions && change_change_end && !isEditor()) {\r\n          this.timeInput && clearTimeout(this.timeInput);\r\n          this.timeInput = setTimeout(() => {\r\n            this.debounceDispatch(\r\n              valueToDispatch !== undefined ? valueToDispatch : value\r\n            );\r\n          }, change_change_end_delay);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  debounceDispatch = _.debounce(\r\n    value => this.dispatchFieldValueToStore(value, true),\r\n    150\r\n  );\r\n\r\n  /**\r\n   * получить опции\r\n   */\r\n  getOptions() {\r\n    let options = [...this.state.options];\r\n    const optionsDynamicSetting = this.props.element.getDynamicSetting(\r\n      \"content_options\"\r\n    );\r\n\r\n    if (optionsDynamicSetting) {\r\n      options = convertData(optionsDynamicSetting, options);\r\n    }\r\n\r\n    if (!this.props.element.getSettings(\"sort_default\")) {\r\n      options = _.sortBy(options, o => o && (o.label ? o.label.toString() : o));\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  /**\r\n   * Для действие по фокусу\r\n   * @param e\r\n   * @return {Promise<void>}\r\n   */\r\n\r\n  onFocus = async e => {\r\n    const focus_actions = this.props.element.getSettings(\"focus_actions\");\r\n\r\n    if (focus_actions && !isEditor()) {\r\n      const actionsManager = (\r\n        await import(\r\n          /* webpackChunkName: 'ActionsManager' */\r\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n        )\r\n      ).default;\r\n      await actionsManager.callAllWidgetActions(\r\n        this.props.element.getIdForAction(),\r\n        \"focus\",\r\n        focus_actions,\r\n        this.props.element\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Потеря фокуса для оптимизации\r\n   * @param  e\r\n   * @param  editor для получения изменений из CKEditor\r\n   */\r\n\r\n  onBlur = async (e, editor = null) => {\r\n    this.dispatchFieldValueToStore(e.target.value, true);\r\n\r\n    if (_.get(editor, \"getData\")) {\r\n      this.dispatchFieldValueToStore(editor.getData(), true);\r\n    }\r\n\r\n    if (this.props.element.getSettings(\"actions\", []) && !isEditor()) {\r\n      const actionsManager = (\r\n        await import(\r\n          /* webpackChunkName: 'ActionsManager' */\r\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n        )\r\n      ).default;\r\n      await actionsManager.callAllWidgetActions(\r\n        this.props.element.getIdForAction(),\r\n        \"blur\",\r\n        this.props.element.getSettings(\"actions\", []),\r\n        this.props.element\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Передадим значение в хранилище формы\r\n   * @param {*} value\r\n   * @param {boolean} userInput true - имзенилось пользователем\r\n   */\r\n  dispatchFieldValueToStore = async (value, userInput = false) => {\r\n    let formId = this.props.element.getFormId();\r\n    let fieldName = this.props.element.getFieldId();\r\n\r\n    if (fieldName.indexOf(\"{{\") !== -1) {\r\n      fieldName = replaceContentWithData(fieldName);\r\n    }\r\n\r\n    if (_.isObject(this.props.appStore) && fieldName && formId) {\r\n      this.props.appStore.dispatch(\r\n        changeFormFieldValue(fieldName, value, formId, userInput)\r\n      );\r\n\r\n      if (userInput) {\r\n        const change_actions = this.props.element.getSettings(\"change_actions\");\r\n\r\n        if (change_actions && !isEditor()) {\r\n          const actionsManager = (\r\n            await import(\r\n              /* webpackChunkName: 'ActionsManager' */\r\n              \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n            )\r\n          ).default;\r\n          await actionsManager.callAllWidgetActions(\r\n            this.props.element.getIdForAction(),\r\n            \"change\",\r\n            change_actions,\r\n            this.props.element\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Обработка добавления опции по ajax\r\n   * @param {SyntheticKeyboardEvent} e\r\n   */\r\n  createItem = async e => {\r\n    const keyCode = e.keyCode;\r\n    const { value: inputValue } = e.target;\r\n\r\n    if (keyCode !== 13 || !inputValue) {\r\n      return;\r\n    }\r\n\r\n    const {\r\n      create_url,\r\n      create_label,\r\n      create_data,\r\n      select2_multiple\r\n    } = this.props.element.getSettings();\r\n\r\n    if (!create_label && !create_url) {\r\n      return;\r\n    }\r\n\r\n    const currentModel = this.props.element.getCurrentModel();\r\n    let data = parseParamsFromString(create_data, currentModel, true);\r\n    data[create_label] = inputValue;\r\n    let url = parseURLTemplate(create_url, currentModel.getData());\r\n    this.setState(state => ({ ...state, isDisabled: true }));\r\n\r\n    try {\r\n      const resource = new Resource({\r\n        route: url\r\n      });\r\n      let res = await resource.post(data);\r\n\r\n      if (res.success && _.get(res, \"data.id\")) {\r\n        let newOption = {\r\n          label: inputValue,\r\n          value: _.get(res, \"data.id\")\r\n        };\r\n\r\n        this.setState(\r\n          state => ({ ...state, isDisabled: false }),\r\n          () => {\r\n            let options = [...this.state.options];\r\n            options.unshift(newOption);\r\n            let value = this.state.value;\r\n            if (select2_multiple) {\r\n              value = value ? [...value] : [];\r\n              value.push(_.get(res, \"data.id\"));\r\n            } else {\r\n              value = _.get(res, \"data.id\");\r\n            }\r\n\r\n            this.setState(\r\n              state => ({ ...state, options, value }),\r\n              () => {\r\n                const selectStateManager = _.get(\r\n                  this,\r\n                  \"altrpSelectRef.current.selectRef.current\"\r\n                );\r\n\r\n                if (selectStateManager) {\r\n                  selectStateManager.setState({\r\n                    menuIsOpen: false,\r\n                    inputValue: \"\"\r\n                  });\r\n                }\r\n              }\r\n            );\r\n          }\r\n        );\r\n      }\r\n      this.setState(state => ({ ...state, isDisabled: false }));\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.setState(state => ({ ...state, isDisabled: false }));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Взовращает имя для атрибута name\r\n   * @return {string}\r\n   */\r\n  getName() {\r\n    return `${this.props.element.getFormId()}[${this.props.element.getFieldId()}]`;\r\n  }\r\n\r\n  render() {\r\n    let label = null;\r\n    const settings = this.props.element.getSettings();\r\n    const {\r\n      content_readonly,\r\n      select2_multiple: isMultiple,\r\n      label_icon\r\n    } = settings;\r\n\r\n    let value = this.state.value;\r\n\r\n    if (\r\n      _.get(value, \"dynamic\") &&\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\r\n    ) {\r\n      value = this.getContent(\"content_default_value\");\r\n    }\r\n\r\n    /**\r\n     * Пока динамический контент загружается (Еесли это динамический контент),\r\n     * нужно вывести пустую строку\r\n     */\r\n\r\n    if (value && value.dynamic) {\r\n      value = \"\";\r\n    }\r\n\r\n    let classLabel = \"\";\r\n    let styleLabel = {};\r\n    const content_label_position_type = this.props.element.getResponsiveSetting(\r\n      \"content_label_position_type\"\r\n    );\r\n\r\n    switch (content_label_position_type) {\r\n      case \"top\":\r\n        styleLabel = {\r\n          marginBottom: this.state.settings.label_style_spacing\r\n            ? this.state.settings.label_style_spacing.size +\r\n            this.state.settings.label_style_spacing.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n      case \"bottom\":\r\n        styleLabel = {\r\n          marginTop: this.state.settings.label_style_spacing\r\n            ? this.state.settings.label_style_spacing.size +\r\n            this.state.settings.label_style_spacing.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n      case \"left\":\r\n        styleLabel = {\r\n          marginRight: this.state.settings.label_style_spacing\r\n            ? this.state.settings.label_style_spacing.size +\r\n            this.state.settings.label_style_spacing.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"altrp-field-label-container-left\";\r\n        break;\r\n      case \"absolute\":\r\n        styleLabel = {\r\n          position: \"absolute\",\r\n          zIndex: 2\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n    }\r\n\r\n    if (this.state.settings.content_label) {\r\n      label = (\r\n        <div\r\n          className={\"altrp-field-label-container \" + classLabel}\r\n          style={styleLabel}\r\n        >\r\n          <label\r\n            className={`altrp-field-label ${this.state.settings.content_required\r\n              ? \"altrp-field-label--required\"\r\n              : \"\"\r\n              }`}\r\n          >\r\n            {this.state.settings.content_label}\r\n          </label>\r\n          {label_icon && label_icon.assetType && (\r\n            <span className=\"altrp-label-icon\">\r\n              {renderAssetIcon(label_icon)}\r\n            </span>\r\n          )}\r\n        </div>\r\n      );\r\n    } else {\r\n      label = null;\r\n    }\r\n\r\n    let autocomplete = \"off\";\r\n    if (this.state.settings.content_autocomplete) {\r\n      autocomplete = \"on\";\r\n    } else {\r\n      autocomplete = \"off\";\r\n    }\r\n\r\n    const isClearable = this.state.settings.content_clearable;\r\n\r\n    const input = (\r\n      <div className=\"altrp-input-wrapper\">\r\n        <AltrpInput\r\n          type=\"text\"\r\n          name={this.getName()}\r\n          value={value || \"\"}\r\n          element={this.props.element}\r\n          readOnly={content_readonly}\r\n          autoComplete={autocomplete}\r\n          placeholder={this.state.settings.content_placeholder}\r\n          className={\r\n            \"altrp-field \" + this.state.settings.position_css_classes\r\n          }\r\n          settings={this.props.element.getSettings()}\r\n          onKeyDown={this.handleEnter}\r\n          onChange={this.onChange}\r\n          onBlur={this.onBlur}\r\n          onFocus={this.onFocus}\r\n          id={this.state.settings.position_css_id}\r\n        />\r\n        {isClearable && (\r\n          <button\r\n            className=\"input-clear-btn\"\r\n            onClick={() => this.setState({ value: this.defaultValue })}\r\n          >\r\n            ✖\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <AltrpFieldContainer\r\n        settings={settings}\r\n        className=\"altrp-field-container \"\r\n      >\r\n        {content_label_position_type === \"top\" ? label : \"\"}\r\n        {content_label_position_type === \"left\" ? label : \"\"}\r\n        {content_label_position_type === \"right\" ? label : \"\"}\r\n        {content_label_position_type === \"absolute\" ? label : \"\"}\r\n        {/* .altrp-field-label-container */}\r\n        {input}\r\n        {content_label_position_type === \"bottom\" ? label : \"\"}\r\n      </AltrpFieldContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputTextWidget;\r\n"],"sourceRoot":""}