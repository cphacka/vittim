{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/editor/src/js/components/altrp-popper/AltrpPopper.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DropbarComponent.js","webpack:///./resources/modules/editor/src/js/components/altrp-dropbar/AltrpDropbar.js","webpack:///./resources/modules/editor/src/js/components/widgets/DropbarWidget.js","webpack:///./resources/modules/front-app/src/js/helpers/react.js"],"names":["AltrpModel","data","this","cloneDeep","clone","isEmpty","name","defaultValue","get","has","value","getData","set","unset","window","AltrpPopper","props","object","useRef","useState","settings","updateSettings","setUpdateSettings","getTargetRef","setGetTargetRef","prevUpdateToken","usePrevious","updateToken","body","document","editor","useMemo","isEditor","getElementById","contentWindow","placement","variantPlace","indexOf","console","log","usePopper","target","current","modifiers","options","offset","styles","attributes","forceUpdate","update","useEffect","Event","bubbles","cancelable","Object","keys","length","JSON","stringify","children","portal","ReactDOM","React","ref","style","popper","styled","div","styledString","TemplateLoader","altrpHelpers","state","show","undefined","bind","leaveHide","enterShow","show_delay_dropbar_options","size","hide_delay_dropbar_options","setTimeout","setState","e","currentTarget","showDelay","prevProps","prevState","snapshot","mainClass","className","type","type_dropbar_section","content_dropbar_section","getContent","id","template_dropbar_section","onMouseEnter","mode_dropbar_options","onMouseLeave","onClick","position_dropbar_options","offset_dropbar_options","width","width_dropbar_options","DropbarComponent","element","getSettings","elemenentId","dangerouslySetInnerHTML","__html","onLoad","Math","random","templateId","Component","getComponentByElementId","getHTMLElementById","isSSR","parseURLTemplate","printElements","renderAssetIcon","scrollToElement","globalDefaults","push","pending","component","elementDecorator","baseRender","render","default","unregisterWidgetActions","getId","persist","preventDefault","getResponsiveSetting","stopPropagation","actionsManager","callAllWidgetActions","getIdForAction","getForms","forEach","form","submit","getModelId","res","success","redirect_to_prev_page","redirect_after","history","back","alert","message","error","href","replace","location","origin","pathname","elementId","mainScrollbars","toggleTrigger","includes","IDs","split","elementsToPrint","trim","getStylesHTMLElement","stylesElement","_","head","buttonText","customClasses","background_image","buttonMedia","dropbarDelay","showIcon","url","classes","isDisabled","buttonTemplate","join","AltrpDropbar","isClassComponent","prototype","isReactComponent"],"mappings":"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","file":"DropbarWidget.05398c536b86bd466e5e.bundle.js","sourcesContent":["/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","import React, {useEffect, useRef, useState, useMemo} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {usePopper} from \"react-popper\";\r\nimport {isEditor} from \"../../../../../front-app/src/js/helpers\";\r\nimport { usePrevious } from \"../../../../../front-app/src/js/helpers/react\";\r\n\r\nexport default function AltrpPopper(props) {\r\n  const object = useRef();\r\n  const [updateSettings, setUpdateSettings] = useState(props.settings.updateSettings || {});\r\n  const [getTargetRef, setGetTargetRef] = useState(false);\r\n  const prevUpdateToken = usePrevious(props.updateToken);\r\n\r\n  let body = document.body;\r\n\r\n  if(!props.editor) {\r\n    body = useMemo(() => {\r\n      return isEditor() ?\r\n        document.getElementById(\"editorContent\").contentWindow.document.body\r\n        :\r\n        document.body\r\n    });\r\n  }\r\n\r\n  let placement = props.settings.placement;\r\n  const variantPlace = [\r\n    \"bottom-start\",\r\n    \"bottom\",\r\n    \"bottom-end\",\r\n    \"top-start\",\r\n    \"top\",\r\n    \"top-end\",\r\n    \"left-start\",\r\n    \"left\",\r\n    \"left-end\",\r\n    \"right-start\",\r\n    \"right\",\r\n    \"right-end\"\r\n  ];\r\n\r\n  if(variantPlace.indexOf(placement) === -1) {\r\n    console.log(placement)\r\n    placement = variantPlace[0]\r\n  }\r\n  const {styles, attributes, forceUpdate, update} = usePopper(props.target.current, object.current, {\r\n    placement,\r\n    modifiers: [\r\n      {\r\n        name: \"offset\",\r\n        options: {\r\n          offset: props.settings.offset\r\n        }\r\n      },\r\n    ]\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(props.updateToken !== prevUpdateToken) {\r\n      forceUpdate();\r\n      const event = new Event(\"resize\", {bubbles : true, cancelable : true});\r\n      if(isEditor()) {\r\n        // altrpEditorContent.editorWindow.current.dispatchEvent(event)\r\n        update();\r\n      } else {\r\n        console.log();\r\n        // window.dispatchEvent(event)\r\n        update();\r\n      }\r\n    }\r\n\r\n    if (Object.keys(updateSettings).length !== 0) {\r\n      if (JSON.stringify(updateSettings) !== JSON.stringify(props.settings.updateSettings)) {\r\n        setUpdateSettings(props.settings.updateSettings);\r\n        forceUpdate()\r\n      }\r\n    }\r\n\r\n    if(!getTargetRef && props.target.current) {\r\n      console.log('aann')\r\n      setGetTargetRef(true)\r\n    }\r\n\r\n\r\n  }, [props.children, placement, props.target, props.updateToken]);\r\n\r\n  if(props.portal) {\r\n    return ReactDOM.createPortal((\r\n      React.cloneElement(props.children, {\r\n        ref: object,\r\n        style: styles.popper,\r\n        ...attributes.popper,\r\n      })\r\n    ),\r\n      body\r\n    )\r\n  }\r\n  return React.cloneElement(props.children, {\r\n    ref: object,\r\n    style: styles.popper,\r\n    ...attributes.popper,\r\n  })\r\n}","import {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\n\n\n\nexport default styled.div`\n  ${({settings}) => {\n  const styles = [\n    \"&.altrp-dropbar-btn-containter\",\n      [\"width\", \"width_dropbar_options\", \"slider\"],\n\n      [\"padding\", \"padding_dropbar_content_style\", \"dimensions\"],\n      [\"background-color\", \"background_dropbar_content_style\", \"color\"],\n      [\"border-style\", \"border_style_dropbar_content_style\"],\n      [\"border-width\", \"border_width_dropbar_content_style\", \"dimensions\"],\n      [\"border-color\", \"border_color_dropbar_content_style\", \"color\"],\n      [\"border-radius\", \"border_radius_dropbar_content_style\", \"dimensions\"],\n      [\"box-shadow\", \"box_shadow_dropbar_content_style\", \"shadow\"],\n    \"}\",\n\n    \"altrp-dropbar-btn-content\",\n      [\"color\", \"text_color_dropbar_content_style\", \"color\"],\n      [\"\", \"typographic_text_dropbar_content_style\", \"typographic\"],\n    \"}\",\n\n    \"&:hover.altrp-dropbar-btn-containter\",\n      [\"background-color\", \"background_dropbar_content_style\", \"color\", \":hover\"],\n      [\"border-style\", \"border_style_dropbar_content_style\", \"\", \":hover\"],\n      [\"border-width\", \"border_width_dropbar_content_style\", \"dimensions\", \":hover\"],\n      [\"border-color\", \"border_color_dropbar_content_style\", \"color\", \":hover\"],\n      [\"border-radius\", \"border_radius_dropbar_content_style\", \"dimensions\", \":hover\"],\n      [\"box-shadow\", \"box_shadow_dropbar_content_style\", \"shadow\", \":hover\"],\n    \"}\",\n\n    \"&:hover .altrp-dropbar-btn-content\",\n      [\"color\", \"text_color_dropbar_content_style\", \"color\", \":hover\"],\n      [\"\", \"typographic_text_dropbar_content_style\", \"typographic\", \":hover\"],\n    \"}\"\n  ];\n  return styledString(styles, settings)\n}}\n`\n","import React, {Component} from \"react\";\nimport AltrpPopper from \"../altrp-popper/AltrpPopper\";\nconst {\n  TemplateLoader,\n} = window.altrpHelpers;\n\nimport DropbarComponent from \"../widgets/styled-components/DropbarComponent\";\n\nclass Dropbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n      updateToken: undefined\n    };\n\n    this.show = this.show.bind(this);\n    this.leaveHide = this.leaveHide.bind(this);\n    this.enterShow = this.enterShow.bind(this);\n\n    this.children = React.createRef();\n  };\n\n  show() {\n    if(this.props.settings.show_delay_dropbar_options.size || this.props.settings.hide_delay_dropbar_options.size) {\n      if(!this.state.show) {\n        setTimeout(() => {\n          this.setState((state) => ({ show: !state.show }));\n        }, this.props.settings.show_delay_dropbar_options.size);\n      } else {\n        setTimeout(() => {\n          this.setState((state) => ({ show: !state.show }));\n        }, this.props.settings.hide_delay_dropbar_options.size);\n      }\n    } else {\n      this.setState((state) => ({ show: !state.show }));\n    };\n  };\n\n  leaveHide() {\n\n    if(this.props.settings.hide_delay_dropbar_options.size) {\n      setTimeout(() => {\n        this.setState({ show: false });\n      }, this.props.settings.hide_delay_dropbar_options.size)\n    } else {\n      this.setState({ show: false });\n    };\n  };\n\n  enterShow(e) {\n    let current = e.currentTarget;\n    if(this.props.showDelay.size && !this.state.show) {\n      setTimeout(() => {\n        this.setState({ show: true });\n      }, this.props.showDelay.size);\n    } else {\n      this.setState((state) => ({ show: !state.show }));\n    };\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.state.show !== prevState.show) {\n    }\n  }\n\n  render() {\n    const children = React.Children.only(this.props.children);\n\n    let mainClass = \"altrp-dropbar-\" +\n      this.props.className;\n    let type = this.props.settings.type_dropbar_section || \"text\";\n    let content_dropbar_section = this.props.getContent('content_dropbar_section');\n\n    const id = this.props.settings.template_dropbar_section;\n\n\n    return (\n      <div className={\"altrp-dropbar altrp-dropbar-\" + mainClass}>\n        <span className={\"altrp-dropbar-children-wrapper \" + mainClass + \"-wrapper\"}\n              onMouseEnter={this.props.settings.mode_dropbar_options === \"hover\" ? this.enterShow : null}\n              onMouseLeave={this.props.settings.mode_dropbar_options === \"hover\" ? this.leaveHide : null}\n        >\n          {\n            React.cloneElement(children,\n              {\n                ref: this.children,\n                onClick: this.props.settings.mode_dropbar_options === \"click\" ? this.show : null,\n                // onMouseEnter: this.props.settings.mode_dropbar_options === \"hover\" ? this.enterShow : null,\n                // onMouseLeave: this.props.settings.mode_dropbar_options === \"hover\" ? this.leaveHide : null\n              }\n            )\n          }\n\n          <AltrpPopper\n            target={this.children}\n            portal={true}\n            updateToken={this.state.updateToken}\n            settings={{\n              placement: this.props.settings.position_dropbar_options,\n              offset: [0, this.props.settings.offset_dropbar_options.size],\n              updateSettings: {\n                width: this.props.settings.width_dropbar_options\n              }\n            }}\n          >\n            <DropbarComponent settings={this.props.element.getSettings()}\n                              className={\"altrp-dropbar-container \" +\n                              (` ${this.props.elemenentId}-altrp-dropbar `) +\n                              mainClass +\n                              \"-containter\" +\n                              (this.state.show ? \" altrp-dropbar-container-show\" : \" altrp-dropbar-container-hide\")}\n            >\n              {\n                type === \"text\" ? (\n                  React.createElement(\"div\",\n                    {\n                      className: \"altrp-dropbar-content \" + mainClass + \"-content\",\n                      dangerouslySetInnerHTML: {\n                        __html: content_dropbar_section || ''\n                      },\n                    }\n                  )\n                ) : (\n                  <TemplateLoader\n                    onLoad={() => {\n                      this.setState({ updateToken: Math.random() })\n                    }}\n                    templateId={id}\n                  />\n                )\n              }\n            </DropbarComponent>\n          </AltrpPopper>\n        </span>\n      </div>\n    );\n  };\n}\n\nexport default Dropbar\n","import React, {Component, Suspense} from \"react\";\nconst {\n  getComponentByElementId,\n  getHTMLElementById,\n  isEditor,\n  isSSR,\n  parseURLTemplate, printElements,\n  renderAssetIcon, scrollToElement\n} = window.altrpHelpers;\nimport AltrpDropbar from \"../altrp-dropbar/AltrpDropbar\";\n\n(window.globalDefaults = window.globalDefaults || []).push(`\n  .altrp-btn-wrapper_dropbar.altrp-btn-wrapper {\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n\n    & img {\n      max-width: 100%;\n    }\n  }\n\n  .altrp-btn-wrapper_dropbar .altrp-btn {\n    width: auto;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 6px;\n    flex-direction: row;\n    background-color: #343B4C;\n    color: #FFFFFF;\n    padding-top: 20px;\n    padding-right: 25px;\n    padding-bottom: 20px;\n    padding-left: 25px\n\n    &_gray {\n      background-color: #8E94AA;\n      color: #fff;\n    }\n\n    &__icon {\n      transform: scale(0.6);\n    }\n\n    &-icon {\n      display: flex;\n      justify-content: center;\n    }\n\n    & svg {\n      height: 25px;\n      width: 25px;\n    }\n  }\n\n  .altrp-dropbar {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: auto;\n  }\n\n  .altrp-dropbar-children-wrapper {\n    display: flex;\n    position: relative;\n  }\n\n  .altrp-btn-dropbar {\n    width: 100%;\n  }\n\n  .altrp-dropbar-container {\n    position: absolute;\n    color: #666;\n    padding: 30px;\n    background-color: #f1f3f5;\n  }\n\n  .altrp-dropbar-content {\n    user-select: text;\n  }\n\n  .altrp-dropbar-container-hide {\n    visibility: hidden;\n  }\n\n  .altrp-dropbar-variant-bottom-center .altrp-dropbar-children-wrapper {\n    position: static;\n    justify-content: center;\n  }\n\n  .altrp-dropbar-variant-top-center .altrp-dropbar-children-wrapper {\n    position: static;\n    justify-content: center;\n  }\n\n  .altrp-dropbar-variant-left-center .altrp-dropbar-children-wrapper {\n    align-items: center;\n  }\n\n  .altrp-dropbar-variant-right-center .altrp-dropbar-children-wrapper {\n    align-items: center;\n  }\n\n  .altrp-dropbar-container {\n    z-index: 9999;\n  }\n`);\n\n\nclass DropbarWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      settings: props.element.getSettings(),\n      pending: false\n    };\n    props.element.component = this;\n    if (window.elementDecorator) {\n      window.elementDecorator(this);\n    }\n    if(props.baseRender){\n      this.render = props.baseRender(this);\n    }\n    this.onClick = this.onClick.bind(this);\n  }\n\n  /**\n   * Компонент удаляется со страницы\n   */\n  async _componentWillUnmount() {\n    const actionsManager = (\n      await import(\n        \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\n        )\n    ).default;\n    actionsManager.unregisterWidgetActions(this.props.element.getId());\n  }\n\n  /**\n   * Клик по кнопке\n   * @param e\n   * @return {Promise<void>}\n   */\n  async onClick(e) {\n    e.persist();\n    if (isEditor()) {\n      e.preventDefault();\n    } else if (this.props.element.getResponsiveSetting(\"actions\", null, []).length) {\n      e.preventDefault();\n      e.stopPropagation();\n      const actionsManager = (\n        await import(\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\n          )\n      ).default;\n      await actionsManager.callAllWidgetActions(\n        this.props.element.getIdForAction(),\n        'click',\n        this.props.element.getSettings(\"actions\", []),\n        this.props.element\n      );\n    }\n    if (this.props.element.getForms().length) {\n      this.setState(state => ({ ...state, pending: true }));\n      this.props.element.getForms().forEach(\n        /**\n         * @param {AltrpForm} form\n         */ async form => {\n          try {\n            let res = await form.submit(\n              this.getModelId(),\n              this.props.element.getResponsiveSetting(\"form_confirm\")\n            );\n            if (res.success) {\n              let {\n                redirect_to_prev_page,\n                redirect_after\n              } = this.state.settings;\n              if (redirect_to_prev_page) {\n                return history.back();\n              }\n              if (redirect_after) {\n                redirect_after = parseURLTemplate(redirect_after, res.data);\n                return this.props.history.push(redirect_after);\n              }\n\n              if (this.props.element.getResponsiveSetting(\"text_after\", null,\"\")) {\n                alert(this.props.element.getResponsiveSetting(\"text_after\", null, \"\"));\n              }\n            } else if (res.message) {\n              alert(res.message);\n            }\n            this.setState(state => ({ ...state, pending: false }));\n          } catch (e) {\n            console.error(e);\n            this.setState(state => ({ ...state, pending: false }));\n          }\n        }\n      );\n    }\n    // else      if (\n    //   this.props.element.getSettings(\"popup_trigger_type\") &&\n    //   this.props.element.getSettings(\"popup_id\")\n    // ) {\n    //   this.props.appStore.dispatch(\n    //     togglePopup(this.props.element.getSettings(\"popup_id\"))\n    //   );\n    //   /**\n    //    * Проверим надо ли по ID скроллить к элементу\n    //    */\n    // }\n    else if (\n      e.target.href &&\n      e.target.href\n        .replace(window.location.origin + window.location.pathname, \"\")\n        .indexOf(\"#\") === 0\n    ) {\n      let elementId = e.target.href\n        .replace(window.location.origin + window.location.pathname, \"\")\n        .replace(\"#\", \"\");\n      const element = getHTMLElementById(elementId);\n      if (element) {\n        e.preventDefault();\n        scrollToElement(mainScrollbars, element);\n      }\n    } else if (this.props.element.getResponsiveSetting(\"hide_elements_trigger\")) {\n      this.props.toggleTrigger(\n        this.props.element.getResponsiveSetting(\"hide_elements_trigger\")\n      );\n    } else if (\n      this.props.element\n        .getResponsiveSetting(\"other_action_type\", null,[])\n        .includes(\"print_elements\")\n    ) {\n      let IDs = this.props.element.getResponsiveSetting(\"print_elements_ids\", null,\"\");\n      IDs = IDs.split(\",\");\n      let elementsToPrint = [];\n      IDs.forEach(elementId => {\n        if (!elementId || !elementId.trim()) {\n          return;\n        }\n        getHTMLElementById(elementId.trim()) &&\n        elementsToPrint.push(getHTMLElementById(elementId));\n        if (getComponentByElementId(elementId.trim())?.getStylesHTMLElement) {\n          let stylesElement = getComponentByElementId(\n            elementId.trim()\n          ).getStylesHTMLElement();\n          if (stylesElement) {\n            elementsToPrint.push(stylesElement);\n          }\n        }\n      });\n      if (_.get(window, \"stylesModule.stylesContainer.current\")) {\n        elementsToPrint.push(\n          _.get(window, \"stylesModule.stylesContainer.current\")\n        );\n      }\n      elementsToPrint.push(document.head);\n      printElements(elementsToPrint);\n    }\n  }\n\n  render() {\n    const buttonText = this.props.element.getResponsiveSetting(\"button_text\", \"\", \"\");\n    const id = this.props.element.getResponsiveSetting(\"position_css_id\", \"\", \"\")\n    const customClasses = this.props.element.getResponsiveSetting(\"position_css_classes\", \"\", null);\n    const background_image = this.props.element.getResponsiveSetting(\n      \"background_image\",\n      null,\n      {}\n    );\n    const buttonMedia = this.props.element.getResponsiveSetting(\"button_icon\", \"\", {});\n    const dropbarDelay = this.props.element.getResponsiveSetting(\"show_delay_dropbar_options\");\n\n    const showIcon = buttonMedia.url;\n\n    if (this.state.pending) {\n      classes.push(\"altrp-disabled\");\n    }\n\n    const classes = [\"altrp-btn\", \"dropbar\"];\n\n    if(customClasses) {\n      classes.push(customClasses)\n    }\n\n    if (background_image.url) {\n      classes.push(\"altrp-background-image\");\n    }\n    if(this.isDisabled()){\n      classes.push('state-disabled');\n    }\n\n    const buttonTemplate = (\n      <button\n        onClick={this.onClick}\n        className={_.join(classes, \" \")}\n        id={id}\n      >\n        {buttonText}\n        {\n          showIcon ? (\n            ! isSSR() && <span className=\"altrp-btn-icon\">\n          {renderAssetIcon(buttonMedia)}{\" \"}\n          </span>\n          ) : \"\"\n        }\n      </button>\n    );\n    return <div className=\"altrp-btn-wrapper_dropbar altrp-btn-wrapper\">\n      <AltrpDropbar\n        elemenentId={this.props.element.getId()}\n        settings={this.props.element.getSettings()}\n        className=\"btn\"\n        element={this.props.element}\n        getContent={this.getContent}\n        showDelay={dropbarDelay}\n      >\n        {buttonTemplate}\n      </AltrpDropbar>\n    </div>\n  }\n}\n\n\nexport default DropbarWidget;\n","import {useEffect, useRef} from \"react\";\r\n\r\nexport function isClassComponent(component) {\r\n  return (\r\n      typeof component === 'function' &&\r\n      !!component.prototype.isReactComponent\r\n  )\r\n}\r\n\r\nexport function isFunctionComponent(component) {\r\n  return (\r\n      typeof component === 'function' &&\r\n      String(component).includes('return React.createElement')\r\n  )\r\n}\r\n\r\nexport function isReactComponent(component) {\r\n  return (\r\n      isClassComponent(component) ||\r\n      isFunctionComponent(component)\r\n  )\r\n}\r\n\r\nexport function isElement(element) {\r\n  return React.isValidElement(element);\r\n}\r\n\r\nexport function isDOMTypeElement(element) {\r\n  return isElement(element) && typeof element.type === 'string';\r\n}\r\n\r\nexport function isCompositeTypeElement(element) {\r\n  return isElement(element) && typeof element.type === 'function';\r\n}\r\n\r\nexport function usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n}"],"sourceRoot":""}