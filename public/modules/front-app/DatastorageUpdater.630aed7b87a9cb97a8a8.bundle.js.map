{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/get.js","webpack:///./node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/front-app/src/js/classes/modules/DatastorageUpdater.js","webpack:///./resources/modules/front-app/src/js/store/current-data-storage/actions.js","webpack:///./node_modules/dot-prop-immutable/lib/index.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_arrayWithHoles","isArray","_assertThisInitialized","self","ReferenceError","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","_get","property","receiver","Reflect","get","base","object","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","_getPrototypeOf","o","setPrototypeOf","__proto__","_inherits","subClass","superClass","create","constructor","_iterableToArray","iter","Symbol","iterator","from","_nonIterableRest","_possibleConstructorReturn","_slicedToArray","arrayWithHoles","_i","_s","_e","_arr","_n","_d","next","done","push","err","unsupportedIterableToArray","nonIterableRest","_toArray","_toConsumableArray","arrayLikeToArray","iterableToArray","_typeof","_unsupportedIterableToArray","minLen","n","toString","slice","name","test","AltrpModel","data","this","cloneDeep","clone","isEmpty","defaultValue","has","getData","set","unset","window","altrpHelpers","Resource","isJSON","mbParseJSON","replaceContentWithData","DataStorageUpdater","onStoreUpdate","formsStore","appStore","getState","_","isEqual","getProperty","setProperty","onFormsUpdate","subscribe","dataSources","initialUpdate","map","ds","Datasource","currentUser","route","getAll","dispatch","changeCurrentUser","filter","dataSource","parameters","find","param","paramValue","indexOf","params","getParams","currentRouterMatch","subscribeToFormsUpdate","required","groupedDataSources","forEach","currentDataStorageLoading","groupPriority","requests","getWebUrl","defaultParams","needUpdateFromForms","each","paramName","replace","res","preloadedData","altrpPreloadedDatasources","getAlias","getType","id","getQueried","Promise","then","console","error","changeCurrentDataStorage","log","performance","now","all","currentDataStorageLoaded","unsetProperty","clearCurrentDataStorage","findIndex","sortBy","data_source","priority","updating","oldParams","undefined","pendingParameters","dataStorageUpdater","CHANGE_CURRENT_DATASOURCE","CLEAR_CURRENT_DATASOURCE","SET_CURRENT_DATASOURCE_LOADED","SET_CURRENT_DATASOURCE_LOADING","dataStorageName","type","prop","propToArray","setPropImmutableRec","head","getArrayIndex","assign","Math","max","Error","parseInt","split","reduce","ret","el","index","list","last","prev","pop","module","exports","delete","deletePropImmutableRec","concat","toggle","curVal","Boolean","merge","val"],"mappings":"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","file":"DatastorageUpdater.630aed7b87a9cb97a8a8.bundle.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","import {\r\n  changeCurrentDataStorage,\r\n  clearCurrentDataStorage,\r\n  currentDataStorageLoaded, currentDataStorageLoading\r\n} from \"../../store/current-data-storage/actions\";\r\nimport {changeCurrentUser} from \"../../store/current-user/actions\";\r\nimport Datasource from \"../Datasource\";\r\nimport {getDataByPath} from \"../../helpers\";\r\nconst { Resource, isJSON, mbParseJSON, replaceContentWithData} = window.altrpHelpers;\r\n\r\n/**\r\n * @class DataStorageUpdater\r\n */\r\nclass DataStorageUpdater extends AltrpModel {\r\n\r\n  constructor(data) {\r\n    super(data);\r\n    this.setProperty('dataSourcesFormsDependent', []);\r\n    this.setProperty('formsStore', appStore.getState().formsStore);\r\n    appStore.subscribe(this.onStoreUpdate)\r\n  }\r\n\r\n  /**\r\n   *  обновление currentDataStorage\r\n   *  @param {Datasource[]} dataSources\r\n   *  @param {boolean} initialUpdate\r\n   */\r\n  async updateCurrent(dataSources = null, initialUpdate = true) {\r\n    dataSources = dataSources.map(ds => {\r\n      if(ds instanceof Datasource){\r\n        return ds;\r\n      }\r\n      return new Datasource(ds)\r\n    });\r\n    if(appStore.getState().currentUser.isEmpty()){\r\n      let currentUser = await new Resource({ route: \"/ajax/current-user\" }).getAll();\r\n      currentUser = currentUser.data;\r\n      appStore.dispatch(changeCurrentUser(currentUser));\r\n    }\r\n    if(!initialUpdate && !_.get(dataSources, 'length')){\r\n      dataSources = this.getProperty('currentDataSources');\r\n    }\r\n    if(! dataSources){\r\n      dataSources = [];\r\n    }\r\n    if(initialUpdate){\r\n      this.setProperty('currentDataSources', dataSources);\r\n      this.setProperty('updated', false);\r\n      dataSources = dataSources.filter(dataSource => dataSource.getProperty('autoload'));\r\n    }\r\n\r\n    /**\r\n     * Фильтруем проверяя на наличие обязательных параметров\r\n     */\r\n    dataSources = dataSources.filter(dataSource => {\r\n      let parameters = dataSource.getProperty('parameters');\r\n      if(! isJSON(parameters)){\r\n        return true;\r\n      }\r\n      parameters = mbParseJSON(parameters, []);\r\n      /**\r\n       * Находим хотя бы один обязательный параметр, который не имеет значения\r\n       */\r\n\r\n      return ! (parameters && parameters.find(param=>{\r\n        if (param.paramValue.toString().indexOf('altrpforms.') !== -1) {\r\n          let params = dataSource.getParams(window.currentRouterMatch.data.params, 'altrpforms.');\r\n\r\n          initialUpdate && this.subscribeToFormsUpdate(dataSource, params);\r\n        } else {\r\n          return false;\r\n        }\r\n        if(! param.required){\r\n          return false;\r\n        }\r\n        let value = param.paramValue || '';\r\n        if(value.indexOf('{{') !== -1){\r\n          value = replaceContentWithData(value);\r\n        }\r\n        return ! value;\r\n      }));\r\n    });\r\n    // dataSources = _.sortBy(dataSources, ['data.priority']);\r\n    /**\r\n     * @member {Datasource} dataSource\r\n     */\r\n    const groupedDataSources = {};\r\n    dataSources.forEach(dataSource => {\r\n      groupedDataSources[dataSource.getProperty('priority')] = groupedDataSources[dataSource.getProperty('priority')] || [];\r\n      groupedDataSources[dataSource.getProperty('priority')].push(dataSource);\r\n    });\r\n    initialUpdate && appStore.dispatch(currentDataStorageLoading());\r\n    for (let groupPriority in groupedDataSources){\r\n      if(! groupedDataSources.hasOwnProperty(groupPriority)){\r\n        continue;\r\n      }\r\n      initialUpdate && appStore.dispatch(currentDataStorageLoading());\r\n      let requests = groupedDataSources[groupPriority].map(async dataSource => {\r\n        if (dataSource.getWebUrl()) {\r\n          let params = dataSource.getParams(window.currentRouterMatch.params, 'altrpforms.');\r\n          let defaultParams = _.cloneDeep(params);\r\n          let needUpdateFromForms = false;\r\n          _.each(params, (paramValue, paramName) => {\r\n            if (paramValue.toString().indexOf('altrpforms.') === 0) {\r\n              params[paramName] = _.get(appStore.getState().formsStore, paramValue.toString().replace('altrpforms.', ''), '');\r\n              needUpdateFromForms = true;\r\n            }\r\n          });\r\n          /**\r\n           * Если нужно взять параметры из формы, то подписываемся на изменения полeй формы\r\n           * и сохраняем параметры, с которыми уже получили данные\r\n           */\r\n          if (needUpdateFromForms) {\r\n            initialUpdate && this.subscribeToFormsUpdate(dataSource, _.cloneDeep(defaultParams));\r\n          }\r\n          let res = {};\r\n          try {\r\n            const preloadedData = _.get(window.altrpPreloadedDatasources, dataSource.getAlias());\r\n            if(preloadedData){\r\n              res = preloadedData;\r\n              _.unset(window.altrpPreloadedDatasources, dataSource.getAlias());\r\n            } else\r\n              if (dataSource.getType() === 'show') {\r\n              let id = _.get(params, 'id', _.get(this.props, 'match.params.id'));\r\n              if (id) {\r\n                res = await (new Resource({ route: dataSource.getWebUrl() })).get(id);\r\n              }\r\n            } else if (!_.isEmpty(params)) {\r\n              res = await (new Resource({ route: dataSource.getWebUrl() })).getQueried(params);\r\n              dataSource.params = _.cloneDeep(params);\r\n            } else {\r\n              res = await (new Resource({ route: dataSource.getWebUrl() })).getAll();\r\n            }\r\n          } catch (err) {\r\n            if(err instanceof Promise){\r\n              err = await err.then();\r\n            }\r\n            console.error(err);\r\n          }\r\n          res = _.get(res, 'data', res);\r\n          dataSources = dataSources.filter(ds => ds !== dataSource);\r\n          if(! dataSources.length){\r\n            this.setProperty('updated', true);\r\n          }\r\n          appStore.dispatch(changeCurrentDataStorage(dataSource.getAlias(), res));\r\n          return res;\r\n        }\r\n      });\r\n      console.log('Update Datasource Start: ',performance.now());\r\n      let responses = await Promise.all(requests);\r\n      console.log('Update Datasource End: ',performance.now());\r\n      initialUpdate && appStore.dispatch(currentDataStorageLoaded());\r\n    }\r\n    if(_.isEmpty(groupedDataSources)){\r\n      this.setProperty('updated', true);\r\n    }\r\n    if(! dataSources.length){\r\n      appStore.dispatch(currentDataStorageLoaded());\r\n    }\r\n\r\n  }\r\n  /**\r\n   * Обнуляем текущее хранилище dataStorage\r\n   */\r\n  clearCurrent() {\r\n    this.unsetProperty('currentDataSources');\r\n    this.setProperty('dataSourcesFormsDependent', []);\r\n    appStore.dispatch(clearCurrentDataStorage())\r\n  }\r\n  /**\r\n    * подписывает какой либо источник данных на обновление от формы\r\n   * @param {Datasource} dataSource\r\n   * @param {{}} params\r\n   */\r\n  subscribeToFormsUpdate(dataSource, params) {\r\n    let dataSources = this.getProperty('dataSourcesFormsDependent');\r\n    // if(dataSources.indexOf(dataSource) === -1){\r\n    //   dataSources.push(dataSource);\r\n    // }\r\n    if (_.findIndex(dataSources, ds => {\r\n      return ds.dataSource === dataSource;\r\n    }) === -1) {\r\n      dataSources.push({\r\n        dataSource,\r\n        params\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Вызывается, когда обновляется redux-хранилище\r\n   */\r\n  onStoreUpdate = async () => {\r\n    /**\r\n     * Проверяем обновились ли формы\r\n     * @type {formsStore}\r\n     */\r\n    let formsStore = appStore.getState().formsStore;\r\n    if (! _.isEqual(this.getProperty('formsStore'), formsStore) && this.getProperty('updated')) {\r\n      this.setProperty('formsStore', formsStore);\r\n      await this.onFormsUpdate();\r\n    }\r\n  };\r\n  /**\r\n   * Вызывается, когда обновляется поле формы для того,\r\n   * чтобы сделать новый запрос по тем dataSource,\r\n   * которые зависят от полей формы\r\n   */\r\n  async onFormsUpdate() {\r\n    let dataSources = this.getProperty('dataSourcesFormsDependent', []);\r\n\r\n    /**\r\n     * Фильтруем, проверяя на наличие обязательных параметров\r\n     */\r\n    dataSources = dataSources.filter(ds => {\r\n      const {dataSource} = ds;\r\n      let parameters = dataSource.getProperty('parameters');\r\n      if(! isJSON(parameters)){\r\n        return true;\r\n      }\r\n      parameters = mbParseJSON(parameters, []);\r\n      /**\r\n       * Находим хотя бы один обзяательный параметр, который имеет пустое значения\r\n       */\r\n      return ! parameters.find(param=>{\r\n        if(! param.required){\r\n          return false;\r\n        }\r\n        let value = param.paramValue || '';\r\n        if(value.indexOf('{{') !== -1){\r\n          value = replaceContentWithData(value);\r\n        }\r\n        return ! value;\r\n      });\r\n    });\r\n    dataSources = _.sortBy(dataSources, data_source => data_source.priority);\r\n    let formsStore = appStore.getState().formsStore;\r\n    for (let ds of dataSources) {\r\n      let { dataSource, updating } = ds;\r\n      let oldParams = _.cloneDeep(dataSource.params);\r\n      /**\r\n       * @member {Datasource} dataSource\r\n       */\r\n      let params = dataSource.getParams(window.currentRouterMatch.params, 'altrpforms.');\r\n      _.forEach(params, (paramValue, paramName) => {\r\n        if (paramValue.toString().indexOf('altrpforms.') === 0) {\r\n          params[paramName] = _.get(formsStore, paramValue.replace('altrpforms.', ''));\r\n          // if(_.isArray(params[paramName])){\r\n          //   params[paramName] = JSON.stringify(params[paramName]);\r\n          // }\r\n        }\r\n      });\r\n      if(updating){\r\n        // console.error(params);\r\n        // console.error(ds);\r\n      }\r\n      if (! _.isEqual(params, oldParams) && ! updating) {\r\n        dataSource.params = _.cloneDeep(params);\r\n        ds.updating = true;\r\n        let res = {};\r\n        try{\r\n          res = await (new Resource({ route: dataSource.getWebUrl() })).getQueried(params);\r\n          res = _.get(res, 'data', res);\r\n          appStore.dispatch(changeCurrentDataStorage(dataSource.getAlias(), res));\r\n        } catch (err) {\r\n          if(err instanceof Promise){\r\n            err = await err.then();\r\n            err = mbParseJSON(err);\r\n          }\r\n          console.error(err);\r\n        } finally {\r\n          /**\r\n           * В случае, если во время запроса возникла необходимость обновления с новыми параметрами,\r\n           * сделаем новый запрос\r\n           */\r\n          if((ds.pendingParameters !== undefined) && ! _.isEqual(ds.pendingParameters, params)){\r\n            try{\r\n              res = await (new Resource({ route: dataSource.getWebUrl() })).getQueried(ds.pendingParameters);\r\n              res = _.get(res, 'data', res);\r\n              appStore.dispatch(changeCurrentDataStorage(dataSource.getAlias(), res));\r\n              dataSource.params = _.cloneDeep(ds.pendingParameters);\r\n            } catch (err) {\r\n              if(err instanceof Promise){\r\n                err = await err.then();\r\n                err = mbParseJSON(err);\r\n              }\r\n              console.error(err);\r\n            } finally {\r\n              _.unset(ds, 'pendingParameters');\r\n            }\r\n          }\r\n          ds.updating = false;\r\n        }\r\n        /**\r\n         * В случае, если во время запроса возникла необходимость обновления с новыми параметрами,\r\n         * сохраним эти параметры\r\n         */\r\n      } else if((! _.isEqual(params, oldParams)) && updating){\r\n        ds.pendingParameters = _.cloneDeep(params);\r\n      }\r\n    }\r\n  }\r\n}\r\nwindow.dataStorageUpdater = window.dataStorageUpdater || new DataStorageUpdater();\r\nexport default window.dataStorageUpdater\r\n","export const CHANGE_CURRENT_DATASOURCE = 'CHANGE_CURRENT_DATASOURCE';\r\nexport const CLEAR_CURRENT_DATASOURCE = 'CLEAR_CURRENT_DATASOURCE';\r\nexport const SET_CURRENT_DATASOURCE_LOADED = 'SET_CURRENT_DATASOURCE_LOADED';\r\nexport const SET_CURRENT_DATASOURCE_LOADING = 'SET_CURRENT_DATASOURCE_LOADING';\r\n\r\n/**\r\n *\r\n * @param {string}dataStorageName\r\n * @param {{}} data\r\n * @return {{}} -\r\n *   {\r\n *     type: {string},\r\n *     dataStorage: {},\r\n *     dataStorageName: {string},\r\n *   }\r\n */\r\nexport function changeCurrentDataStorage(dataStorageName, data = {}) {\r\n  return {\r\n    type: CHANGE_CURRENT_DATASOURCE,\r\n    data,\r\n    dataStorageName\r\n  };\r\n}\r\n\r\n/**\r\n * Перед загрузкой новых данных, старые удаляем\r\n * @return {{}} - type: string\r\n */\r\nexport function clearCurrentDataStorage() {\r\n  return {\r\n    type: CLEAR_CURRENT_DATASOURCE,\r\n  };\r\n}\r\n\r\n/**\r\n * После загрузки сообщаем, что данный обновились, для вызовы _componentDidMount в компонентах элементов\r\n * @return {{type: string}}\r\n */\r\nexport function currentDataStorageLoaded(){\r\n  return {\r\n    type: SET_CURRENT_DATASOURCE_LOADED,\r\n  };\r\n}\r\n/**\r\n * После загрузки сообщаем, что данный обновились, для вызовы _componentDidMount в компонентах элементов\r\n * @return {{type: string}}\r\n */\r\nexport function currentDataStorageLoading(){\r\n  return {\r\n    type: SET_CURRENT_DATASOURCE_LOADING,\r\n  };\r\n}\r\n\r\n","/**\n * Set a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to be set.\n * @param value The value to set.\n */\nfunction set(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst setPropImmutableRec = (obj, prop, value, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (prop.length > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\t\t\tclone[head] = setPropImmutableRec(obj[head] !== undefined ? obj[head] : {}, prop, value, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\treturn typeof value === 'function' ? value(obj) : value;\n\t};\n\n\treturn setPropImmutableRec(obj, prop, value, 0);\n}\n\n/**\n * Get a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to value that should be returned.\n * @param [value] The default value that should be returned when the target doesn't exist.\n */\nfunction get(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tfor (var i = 0; i < prop.length; i++) {\n\t\tif (obj === null || typeof obj !== 'object') {\n\t\t\treturn value;\n\t\t}\n\t\tlet head = prop[i];\n\t\tif (Array.isArray(obj) && head === '$end') {\n\t\t\thead = obj.length - 1;\n\t\t}\n\t\tobj = obj[head];\n\t}\n\n\tif (typeof obj === 'undefined') {\n\t\treturn value;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Delete a property by a dot path.\n * If target container is an object, the property is deleted.\n * If target container is an array, the index is deleted.\n * If target container is undefined, nothing is deleted.\n * @param obj The object to evaluate.\n * @param prop The path to the property or index that should be deleted.\n */\nfunction _delete(obj, prop) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst deletePropImmutableRec = (obj, prop, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (obj === null || typeof obj !== 'object' ||\n\t\t\t!Array.isArray(obj) && obj[head] === undefined) {\n\n\t\t\treturn obj;\n\t\t}\n\n\t\tif (prop.length - 1 > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\n\t\t\tclone[head] = deletePropImmutableRec(obj[head], prop, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\thead = getArrayIndex(head, obj);\n\t\t\tclone = [].concat(obj.slice(0, head), obj.slice(head + 1));\n\t\t} else {\n\t\t\tclone = Object.assign({}, obj);\n\t\t\tdelete clone[head];\n\t\t}\n\n\t\treturn clone;\n\t};\n\n\treturn deletePropImmutableRec(obj, prop, 0);\n}\n\n/**\n * Toggles a value.  The target value is evaluated using Boolean(currentValue).  The result will always be a JSON boolean.\n * Be careful with strings as target value, as \"true\" and \"false\" will toggle to false, but \"0\" will toggle to true.\n * Here is what Javascript considers false:  0, -0, null, false, NaN, undefined, and the empty string (\"\")\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n */\nfunction toggle(obj, prop) {\n\tconst curVal = get(obj, prop);\n\treturn set(obj, prop, !Boolean(curVal));\n}\n\n/**\n * Merges a value.  The target value must be an object, array, null, or undefined.\n * If target is an object, Object.assign({}, target, param) is used.\n * If target an array, target.concat(param) is used.\n * If target is null or undefined, the value is simply set.\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n * @param val The value to merge into the target value.\n */\nfunction merge(obj, prop, val) {\n\tconst curVal = get(obj, prop);\n\tif (typeof curVal === 'object') {\n\t\tif (Array.isArray(curVal)) {\n\t\t\treturn set(obj, prop, curVal.concat(val));\n\t\t} else if (curVal === null) {\n\t\t\treturn set(obj, prop, val);\n\t\t}\n\t\telse {\n\t\t\tlet merged = Object.assign({}, curVal, val);\n\t\t\treturn set(obj, prop, merged);\n\t\t}\n\t} else if (typeof curVal === 'undefined') {\n\t\treturn set(obj, prop, val);\n\t}\n\telse {\n\t\treturn obj;\n\t}\n}\n\nfunction getArrayIndex(head, obj) {\n\tif (head === '$end') {\n\t\thead = Math.max(obj.length - 1, 0);\n\t}\n\tif (!/^\\+?\\d+$/.test(head)) {\n\t\tthrow new Error(`Array index '${head}' has to be an integer`);\n\t}\n\treturn parseInt(head);\n}\n\nfunction propToArray(prop) {\n\treturn prop.split('.').reduce((ret, el, index, list) => {\n\t\tconst last = index > 0 && list[index - 1];\n\t\tif (last && /(?:^|[^\\\\])\\\\$/.test(last)) {\n\t\t\tconst prev = ret.pop();\n\t\t\tret.push(prev.slice(0, -1) + '.' + el);\n\t\t} else {\n\t\t\tret.push(el);\n\t\t}\n\t\treturn ret;\n\t}, []);\n}\n\nmodule.exports = {\n\tset,\n\tget,\n\tdelete: _delete,\n\ttoggle,\n\tmerge\n};\n"],"sourceRoot":""}