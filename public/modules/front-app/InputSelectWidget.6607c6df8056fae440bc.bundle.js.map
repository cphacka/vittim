{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/editor/src/js/components/widgets/InputMultiSelectWidget.js","webpack:///./resources/modules/editor/src/js/components/widgets/InputSelectWidget.js","webpack:///./resources/modules/front-app/src/js/store/forms-data-storage/actions.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_assertThisInitialized","self","ReferenceError","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","_iterableToArray","iter","Symbol","iterator","from","_possibleConstructorReturn","call","_setPrototypeOf","p","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","_toConsumableArray","isArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","_typeof","_unsupportedIterableToArray","minLen","n","toString","name","test","AltrpModel","data","this","cloneDeep","clone","isEmpty","defaultValue","get","has","getData","set","unset","window","altrpHelpers","convertData","isEditor","parseOptionsFromSettings","parseParamsFromString","replaceContentWithData","renderAssetIcon","renderAsset","Resource","getDataByPath","getDataFromLocalStorage","Button","altrpLibs","Blueprint","MenuItem","MultiSelect","BlueprintSelect","globalDefaults","push","AltrpFieldContainer","styled","div","settings","content_label_position_type","InputMultiSelectWidget","props","timeInput","onQueryChange","s","searchActions","element","getSettings","_","searchOnPending","actionsManager","default","getCurrentModel","setProperty","callAllWidgetActions","getIdForAction","console","error","onChange","e","target","setState","state","dispatchFieldValueToStore","handleTagRemove","item","idx","getValue","splice","map","v","userInput","formId","getFormId","fieldName","getFieldId","indexOf","isObject","appStore","dispatch","changeFormFieldValue","change_actions","optionsUpdated","getState","formsStore","options","find","label","onClick","createNewItemFromQuery","title","createNewItemRenderer","query","active","handleClick","getResponsiveSetting","option","toLowerCase","text","replace","icon","shouldDismissPopover","handleClear","onItemSelect","bind","component","elementDecorator","getContentDefaultValue","paramsForUpdate","popoverProps","usePortal","position","minimal","portalClassName","getId","widgetDisabled","portalContainer","EditorFrame","contentWindow","document","body","altrpSelectRef","React","createRef","getContent","isString","split","prevProps","prevState","model_for_options","route","getRoute","getAll","currentModel","getProperty","contentLoaded","currentDataStorage","url","content_options","updateOptions","updateValue","content_calculation","altrpforms","prevContext","altrpdata","altrpmodel","altrpuser","currentUser","altrppagestate","altrpPageState","altrpresponses","altrpmeta","altrpMeta","context","currentDataStorageLoaded","changedField","altrpstorage","isEqual","eval","message","path","formData","JSON","stringify","getQueried","filters","currentValue","create_url","params","resource","post","res","label_path","id","value_path","unshift","concat","optionsDynamicSetting","getDynamicSetting","sortBy","reverse","filter","getOptions","item1","item2","label_icon","classLabel","styleLabel","marginBottom","label_style_spacing","size","unit","marginTop","marginRight","zIndex","content_label","className","style","content_required","assetType","input","placeholder","content_readonly","no_results_text","itemsOptions","position_css_classes","position_css_id","selectedItems","clearButton","undefined","inputProps","itemsEqual","disabled","itemRenderer","modifiers","matchesPredicate","itemPredicate","items","noResults","getName","tagInputProps","onRemove","rightElement","tagRenderer","tagRender","Component","Select","InputSelectWidget","content_type","renderRightIcon","right_icon","renderLeftIcon","left_icon","valueMustArray","targetClassName","inputRef","dynamic","isNaN","getCurrentLabel","fullWidth","onOpening","inputWidth","current","offsetWidth","log","width","elementRef","rightIcon","CHANGE_FORM_FIELD_VALUE","CLEAR_FORM_FIELD_VALUE","type"],"mappings":"2FAAe,SAASA,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,E,oECPM,SAASE,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,E,oECLM,SAASE,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,E,oECZM,SAASQ,EAAgBC,GAItC,OAHAD,EAAkBL,OAAOO,eAAiBP,OAAOQ,eAAiB,SAAyBF,GACzF,OAAOA,EAAEG,WAAaT,OAAOQ,eAAeF,KAEvBA,G,mHCHV,SAASI,EAAUC,EAAUC,GAC1C,GAA0B,mBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIC,UAAU,sDAGtBF,EAASG,UAAYd,OAAOe,OAAOH,GAAcA,EAAWE,UAAW,CACrEE,YAAa,CACXjB,MAAOY,EACPP,UAAU,EACVD,cAAc,KAGdS,IAAY,OAAeD,EAAUC,K,mCCb5B,SAASK,EAAiBC,GACvC,GAAsB,oBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAO1B,MAAM6B,KAAKH,G,8HCCvG,SAASI,EAA2B5B,EAAM6B,GACvD,OAAIA,GAA2B,YAAlB,OAAQA,IAAsC,mBAATA,GAI3C,OAAsB7B,GAHpB6B,I,mCCJI,SAASC,EAAgBlB,EAAGmB,GAMzC,OALAD,EAAkBxB,OAAOO,gBAAkB,SAAyBD,EAAGmB,GAErE,OADAnB,EAAEG,UAAYgB,EACPnB,IAGcA,EAAGmB,G,oECNb,SAASC,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGf7B,OAAO8B,OAAO9B,OAAO+B,iBAAiBJ,EAAS,CACpDC,IAAK,CACH7B,MAAOC,OAAO8B,OAAOF,O,yICHZ,SAASI,EAAmB7C,GACzC,OCJa,SAA4BA,GACzC,GAAIK,MAAMyC,QAAQ9C,GAAM,OAAO,EAAA+C,EAAA,GAAiB/C,GDGzC,CAAkBA,KAAQ,EAAAgD,EAAA,GAAgBhD,KAAQ,EAAAiD,EAAA,GAA2BjD,IELvE,WACb,MAAM,IAAI0B,UAAU,wIFIwE,K,mCGL/E,SAASwB,EAAQxC,GAa9B,OATEwC,EADoB,mBAAXlB,QAAoD,iBAApBA,OAAOC,SACtC,SAAiBvB,GACzB,cAAcA,GAGN,SAAiBA,GACzB,OAAOA,GAAyB,mBAAXsB,QAAyBtB,EAAImB,cAAgBG,QAAUtB,IAAQsB,OAAOL,UAAY,gBAAkBjB,IAI9GA,G,mHCZF,SAASyC,EAA4BhC,EAAGiC,GACrD,GAAKjC,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAO,OAAiBA,EAAGiC,GACtD,IAAIC,EAAIxC,OAAOc,UAAU2B,SAASlB,KAAKjB,GAAGuB,MAAM,GAAI,GAEpD,MADU,WAANW,GAAkBlC,EAAEU,cAAawB,EAAIlC,EAAEU,YAAY0B,MAC7C,QAANF,GAAqB,QAANA,EAAoBhD,MAAM6B,KAAKf,GACxC,cAANkC,GAAqB,2CAA2CG,KAAKH,IAAW,OAAiBlC,EAAGiC,QAAxG,K,mLCKIK,E,WACJ,aAAuB,IAAXC,EAAW,uDAAJ,IAAI,eACrBC,KAAKD,KAAOE,IAAUF,G,sCAQxB,WAAsB,IAAdG,IAAc,yDACpB,OAAGA,EACMD,IAAUD,KAAKD,MAEjBC,KAAKD,O,qBAMd,WACE,OAAOI,IAAQH,KAAKD,Q,yBAQtB,SAAYH,GAAyB,IAAnBQ,EAAmB,uDAAJ,GAC/B,OAAOC,IAAIL,KAAKD,KAAMH,EAAMQ,K,yBAQ9B,SAAYR,GACV,OAAOU,IAAIN,KAAKD,KAAMH,K,yBAQxB,SAAYA,GAAkB,IAAZ3C,EAAY,uDAAJ,GAIxB,OAHGA,aAAiB6C,IAClB7C,EAAQA,EAAMsD,SAAQ,IAEjBC,IAAIR,KAAKD,KAAMH,EAAM3C,K,2BAO9B,SAAc2C,GACZ,OAAOa,IAAMT,KAAKD,KAAMH,O,KAG5Bc,OAAOZ,WAAaA,EACpB,O,+1FC3EA,yBAWIY,OAAOC,aAVTC,YADF,qBACEA,YACAC,SAFF,qBAEEA,SACAC,yBAHF,qBAGEA,yBACAC,sBAJF,qBAIEA,sBACAC,uBALF,qBAKEA,uBACAC,gBANF,qBAMEA,gBACAC,YAPF,qBAOEA,YACAC,SARF,qBAQEA,SACAC,cATF,qBASEA,cACAC,wBAVF,qBAUEA,wBAKIC,OAASZ,OAAOa,UAAUC,UAAUF,OACpCG,SAAWf,OAAOa,UAAUC,UAAUC,SACtCC,YAAchB,OAAOa,UAAUI,gBAAgBD,aAEpDhB,OAAOkB,eAAiBlB,OAAOkB,gBAAkB,IAAIC,KAArD,gwQAgXD,IAAMC,oBAAsBC,OAAOC,IAAV,mIACrB,YACF,OADiD,EAA7CC,SAAWC,6BAEb,IAAK,OACH,MAAO,gBAET,IAAK,QACH,MAAO,oEAGX,MAAO,MAIHC,uB,iPAGJ,gCAAYC,GAAO,mHACjB,mBAAMA,IAHRC,UAAY,KAEO,EAyInBC,cAzImB,oKAyIH,WAAOC,GAAP,0IACRC,EAAgB,EAAKJ,MAAMK,QAAQC,YAAY,cAClDC,EAAExC,QAAQqC,GAFC,qDAKX,EAAKI,gBALM,wDAQd,EAAKA,iBAAkB,EART,kBAYJ,wLAZI,cAWNC,EAXM,OAgBVC,QACF,EAAKV,MAAMK,QAAQM,kBAAkBC,YAAY,eAAgBT,GAjBrD,UAkBNM,EAAeI,qBACnB,EAAKb,MAAMK,QAAQS,iBACnB,SACAV,EACA,EAAKJ,MAAMK,SAtBD,0DAyBZU,QAAQC,MAAR,MAzBY,yBA2BZ,EAAKR,iBAAkB,EA3BX,6EAzIG,wDA+YnBS,SAAW,SAACC,GAAM,MACZrG,EAAQ,GAEK,EAAKmF,MAAMK,QAAQC,cACpCzF,GAAQqG,SAAA,UAAAA,EAAGC,cAAH,eAAWtG,QAAS,GAExBqG,GAAKA,EAAErG,QACTA,EAAQqG,EAAErG,OAGR0F,EAAExD,QAAQmE,KACZrG,EAAQ0F,EAAE1C,UAAUqD,IAGpB,EAAKlB,MAAMK,QAAQC,YAAY,6BAC/BY,GACY,WAAZA,EAAErG,QAEFA,EAAQ,MAGV,EAAKuG,UACH,SAAAC,GAAK,sCACAA,GADA,IAEHxG,aAEF,WAEE,EAAKyG,0BAC+CzG,GAClD,OA7aW,EAybnB0G,gBAAkB,SAACC,EAAMC,GACvB,IAAI5G,EAAQ,EAAK6G,YACjB7G,GAAQ,2EAAIA,IACN8G,OAAOF,EAAK,GAClB5G,EAAQA,EAAM+G,KAAI,SAAAC,GAAC,OAAEA,EAAEhH,SACvB,EAAKyG,0BAA0BzG,GAAO,IA9brB,EA2iBnByG,0BA3iBmB,oKA2iBS,WAAOzG,GAAP,4JAAciH,EAAd,gCACtBC,EAAS,EAAK/B,MAAMK,QAAQ2B,aAEC,KAD7BC,EAAY,EAAKjC,MAAMK,QAAQ6B,cACrBC,QAAQ,QACpBF,EAAYrD,uBAAuBqD,MAEjC1B,EAAE6B,SAAS,EAAKpC,MAAMqC,WAAaJ,GAAaF,GAN1B,oBAOxB,EAAK/B,MAAMqC,SAASC,UAClBC,uFAAqBN,EAAWpH,EAAOkH,EAAQD,KAE7CA,EAVoB,sBAWhBU,EAAiB,EAAKxC,MAAMK,QAAQC,YAAY,oBAE/B7B,WAbD,kCAeZ,wLAfY,eAcdgC,EAdc,OAmBlBC,QAnBkB,UAoBdD,EAAeI,qBACnB,EAAKb,MAAMK,QAAQS,iBACnB,SACA0B,EACA,EAAKxC,MAAMK,SAxBO,4CA3iBT,wDA2lBnBqB,SAAW,WACT,IAAI7G,EACAkH,EAAS,EAAK/B,MAAMK,QAAQ2B,YAC5BC,EAAY,EAAKjC,MAAMK,QAAQ6B,aAEnC,GAAIzD,WACF5D,EAAQ,EAAKwG,MAAMxG,UACd,CACL,GAAG,EAAKmF,MAAMK,QAAQC,YAAY,uBAA0B,EAAKe,MAAMoB,eACrE,MAAO,GAET5H,EAAQ0F,EAAEtC,IAAIoE,SAASK,WAAWC,WAA1B,UAAyCZ,GAAU,IAC3DlH,EAAQ0F,EAAEtC,IAAIpD,EAAOoH,EAAW,IAE9BpH,IAAU0F,EAAExD,QAAQlC,KACtBA,EAAQ,CAACA,IAENA,IACHA,EAAQ,IAEV,IAAI+H,GAAU,2EAAI,EAAKvB,MAAMuB,SAU7B,OATQ/H,EAAM+G,KAAI,SAAAC,GAIhB,OAHae,EAAQC,MAAK,SAAAzH,GACxB,OAAOA,EAAEP,OAASgH,MAGX,CAAChH,MAAOgH,EAAGiB,MAAOjB,OArnBZ,EAyoBnBkB,SAzoBmB,kJAyoBT,sJACJ,EAAK/C,MAAMK,QAAQC,YAAY,gBAAiB,KAAQ7B,WADpD,gCAGE,wLAHF,cAEAgC,EAFA,OAOJC,QAPI,SAQAD,EAAeI,qBACnB,EAAKb,MAAMK,QAAQS,iBACnB,QACA,EAAKd,MAAMK,QAAQC,YAAY,gBAAiB,IAChD,EAAKN,MAAMK,SAZP,2CAzoBS,EA8pBnB2C,uBAAyB,SAACC,GACxB,MAAO,CAACH,MAAOG,EAAOpI,MAAOoI,IA/pBZ,EAyqBnBC,sBAAwB,SAACC,EACAC,EACAC,GAIvB,IAAOhD,EAAW,EAAKL,MAAhBK,QAEP,IAAKA,EAAQiD,qBAAqB,UAChC,OAAO,KAGT,GADkB,EAAKjC,MAAhBuB,QACKC,MAAK,SAAAU,GACf,IAAIT,GAASS,EAAOT,OAAS,IAAM,GAGnC,OAFAA,EAAQA,EAAMU,eACdL,GAASA,GAAS,IAAM,MACPL,KAEjB,OAAO,KAET,IAAIW,EAAOpD,EAAQiD,qBAAqB,gBAAkB,GAG1D,OAFAG,EAAOA,EAAKC,QAAQ,gBAAiBP,GACrCM,EAAO7E,uBAAuB6E,EAAMpD,EAAQM,kBAAkBxC,WAE5D,oBAACkB,SAAD,CACEsE,KAAK,MACLF,KAAMA,EACNL,OAAQA,EACRL,QAASM,EACTO,sBAAsB,KAtsBT,EAquBnBC,YAAc,WACZ,EAAKvC,0BAA0B,IAAI,IApuBnC,EAAKwC,aAAe,EAAKA,aAAaC,MAAlB,oFACpB/D,EAAMK,QAAQ2D,WAAd,mFACI1F,OAAO2F,kBACT3F,OAAO2F,kBAAP,oFAEF,EAAKjG,aACH,EAAKkG,0BAA4B,GAC9B3D,EAAExD,QAAQ,EAAKiB,gBAClB,EAAKA,aAAe,IAEtB,EAAKqD,MAAQ,CACXxB,SAAU,cAAF,GAAMG,EAAMK,QAAQC,eAC5BzF,MAAO,EAAKmD,aACZ4E,QAASlE,yBACPsB,EAAMK,QAAQC,YAAY,oBAE5B6D,gBAAiB,MAEnB,EAAKC,aAAe,CAClBC,WAAW,EACXC,SAAU,SACVC,QAASvE,EAAMK,QAAQiD,qBAAqB,WAE5CkB,gBAAiB,sDAAF,OAAwD,EAAKxE,MAAMK,QAAQoE,QAA3E,YAAsF,EAAKpD,MAAMqD,eAAiB,qBAAuB,IACxJC,gBAAiBrG,OAAOsG,YAActG,OAAOsG,YAAYC,cAAcC,SAASC,KAAOD,SAASC,MAG7FtG,WAGL,EAAKuG,eAAiBC,MAAMC,YACxB,EAAKhB,0BACP,EAAK5C,0BAA0B,EAAK4C,0BAlCrB,E,yIAuCnB,WACE,IAAIrJ,EAAQ+C,KAAKuH,WAAW,yBAAyB,GAIrD,OAHG5E,EAAE6E,SAASvK,KAAkC,IAAxBA,EAAMsH,QAAQ,OACpCtH,EAAQA,EAAMwK,MAAM,MAEfxK,I,wBAOT,WACE,IAAIA,EAAQ,GACZ+C,KAAKqD,SAASpG,GACd+C,KAAK0D,0BAA0BzG,GAAO,K,wMASxC,WAAyByK,EAAWC,GAApC,oJACM3H,KAAKoC,MAAMK,QAAQC,YAAY,mBADrC,gBAEQsC,EAAUlE,yBACZd,KAAKoC,MAAMK,QAAQC,YAAY,oBAGjC1C,KAAKwD,UAAS,SAAAC,GAAK,sCAASA,GAAT,IAAgBuB,eANvC,2BAQIhF,KAAKyD,MAAMxB,SAAS2F,kBARxB,iCAUwB,IAAIzG,SAAS,CAAC0G,MAAO7H,KAAK8H,aAAaC,SAV/D,OAUQ/C,EAVR,OAWIA,EAAWrC,EAAExD,QAAQ6F,GAA0BA,EAAfA,EAAQjF,KACxCiF,EAAUrC,EAAExD,QAAQ6F,GAAWA,EAAU,GACzChF,KAAKwD,UAAS,SAAAC,GAAK,sCAASA,GAAT,IAAgBuB,UAASH,gBAAgB,OAbhE,WAeM5H,EAAQ+C,KAAKyD,MAAMxG,OAOrByK,GACEA,EAAUM,aAAaC,YAAY,uBACrCjI,KAAKoC,MAAM4F,aAAaC,YAAY,qBAxBxC,wBA0BIhL,EAAQ+C,KAAKsG,yBACbtG,KAAKwD,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBxG,QAAOiL,eAAe,OAC3C,WACE,EAAKxE,0BAA0BzG,MA9BvC,+BAoCI+C,KAAKoC,MAAM4F,aAAaC,YAAY,uBACpCjI,KAAKoC,MAAM+F,mBAAmBF,YAAY,6BACzCjI,KAAKyD,MAAMyE,cAtChB,wBAwCIjL,EAAQ+C,KAAKsG,yBACbtG,KAAKwD,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBxG,QAAOiL,eAAe,OAC3C,WACE,EAAKxE,0BAA0BzG,MA5CvC,2BAiDM+C,KAAKyD,MAAMxG,QAAUA,GACvB+C,KAAKwD,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBxG,aACrB,WACE,EAAKyG,0BAA0BzG,MArDvC,iD,wFA8DA,WACE,IAAImL,EAAMpI,KAAKoC,MAAMK,QAAQC,YAAY,qBAEzC,OAA0B,IAAtB0F,EAAI7D,QAAQ,KACd,uBAAuB6D,EAAvB,cAEyB,IAAvBA,EAAI7D,QAAQ,QACd6D,EAAMpH,uBAAuBoH,IAExBA,K,0MAoCT,WAA0BV,EAAWC,GAArC,wJAC+C3H,KAAKyD,MAAMxB,UAAjDoG,gBADT,EAC0BT,kBAEtBF,IACCA,EAAUS,mBAAmBF,YAAY,6BAC1CjI,KAAKoC,MAAM+F,mBAAmBF,YAAY,8BAEtChL,EAAQ+C,KAAKsG,yBACjBtG,KAAKwD,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBxG,QAAOiL,eAAe,OAC3C,WACE,EAAKxE,0BAA0BzG,QAKnC+C,KAAKoC,MAAMK,QAAQC,YAAY,qBAhBnC,oBAoBQ1C,KAAKyD,MAAMxB,SAAS2F,oBACpBF,EAAUjF,QAAQC,YAAY,qBArBtC,wBAwBUkF,EAAoBF,EAAUjF,QAAQC,YACxC,qBAzBR,SA2B0B,IAAIvB,SAAS,CAAC0G,MAAO7H,KAAK8H,aAAaC,SA3BjE,OA2BU/C,EA3BV,OA4BMA,EAAWrC,EAAExD,QAAQ6F,GAA0BA,EAAfA,EAAQjF,KACxCiF,EAAUrC,EAAExD,QAAQ6F,GAAWA,EAAU,GACzChF,KAAKwD,UAAS,SAAAC,GAAK,sCAASA,GAAT,IAAgBuB,UAAS4C,yBA9BlD,QAsCI5H,KAAKoC,MAAM2C,aAAe2C,EAAU3C,YACpC/E,KAAKoC,MAAM4F,eAAiBN,EAAUM,cACtChI,KAAKoC,MAAM+F,qBAAuBT,EAAUS,oBAE5CnI,KAAKsI,gBAQPtI,KAAKuI,YAAYb,GAlDnB,iD,4FAyDA,SAAAa,YAAYb,WAAW,gBACrB,IAAI7G,WAAJ,CAGA,IAAI2H,oBAAsBxI,KAAKoC,MAAMK,QAAQC,YAC3C,uBAEI+F,WAAazI,KAAKoC,MAAM2C,WACxBV,UAAYrE,KAAKoC,MAAMK,QAAQ6B,aAC/BH,OAASnE,KAAKoC,MAAMK,QAAQ2B,YAClC,GAAKoE,oBAAL,CAiBA,IAAME,YAAc,GAEdC,UAAY3I,KAAKoC,MAAM+F,mBAAmB5H,UAC1CqI,WAAa5I,KAAKoC,MAAM4F,aAAazH,UACrCsI,UAAY7I,KAAKoC,MAAM0G,YAAYvI,UACnCwI,eAAiB/I,KAAKoC,MAAM4G,eAAezI,UAC3C0I,eAAiBjJ,KAAKoC,MAAM6G,eAAe1I,UAC3C2I,UAAYlJ,KAAKoC,MAAM+G,UAAU5I,UACjC6I,QAAUpJ,KAAKoC,MAAMK,QAAQM,kBAAkBxC,UAiDrD,IAhDkD,IAA9CiI,oBAAoBjE,QAAQ,eAC9B6E,QAAQT,UAAYA,UACfA,UAAUU,yBAGbX,YAAYC,UAAYjB,UAAUS,mBAAmB5H,UAFrDmI,YAAYC,UAAYA,YAKuB,IAA/CH,oBAAoBjE,QAAQ,gBAC9B6E,QAAQX,WAAaA,WAIjB,UAAGtE,OAAH,YAAaE,aAAgBoE,WAAWa,aAC1CZ,YAAYD,WAAaA,WAEzBC,YAAYD,WAAaf,UAAU3C,aAGY,IAA/CyD,oBAAoBjE,QAAQ,gBAC9B6E,QAAQR,WAAaA,WACrBF,YAAYE,WAAalB,UAAUM,aAAazH,YAEA,IAA9CiI,oBAAoBjE,QAAQ,eAC9B6E,QAAQP,UAAYA,UACpBH,YAAYG,UAAYnB,UAAUoB,YAAYvI,YAEE,IAA9CiI,oBAAoBjE,QAAQ,eAC9B6E,QAAQP,UAAYA,UACpBH,YAAYG,UAAYnB,UAAUoB,YAAYvI,YAEO,IAAnDiI,oBAAoBjE,QAAQ,oBAC9B6E,QAAQL,eAAiBA,eACzBL,YAAYK,eAAiBrB,UAAUsB,eAAezI,YAEN,IAA9CiI,oBAAoBjE,QAAQ,eAC9B6E,QAAQF,UAAYA,UACpBR,YAAYQ,UAAYxB,UAAUyB,UAAU5I,YAES,IAAnDiI,oBAAoBjE,QAAQ,oBAC9B6E,QAAQH,eAAiBA,eACzBP,YAAYO,eAAiBvB,UAAUuB,eAAe1I,YAGH,IAAjDiI,oBAAoBjE,QAAQ,kBAC9B6E,QAAQG,aAAelI,wBAAwB,eAAgB,OAI/DsB,EAAE6G,QAAQ9B,UAAUS,mBAAoBnI,KAAKoC,MAAM+F,qBACnDxF,EAAE6G,QAAQ9B,UAAUoB,YAAa9I,KAAKoC,MAAM0G,cAC5CnG,EAAE6G,QAAQ9B,UAAU3C,WAAY/E,KAAKoC,MAAM2C,aAC3CpC,EAAE6G,QAAQ9B,UAAUsB,eAAgBhJ,KAAKoC,MAAM4G,iBAC/CrG,EAAE6G,QAAQ9B,UAAUyB,UAAWnJ,KAAKoC,MAAM+G,YAC1CxG,EAAE6G,QAAQ9B,UAAUuB,eAAgBjJ,KAAKoC,MAAM6G,iBAC/CtG,EAAE6G,QAAQ9B,UAAUM,aAAchI,KAAKoC,MAAM4F,iBAK5CrF,EAAE6G,QAAQ9B,UAAU3C,WAAY/E,KAAKoC,MAAM2C,aAC5C,UAAGZ,OAAH,YAAaE,aAAgBoE,WAAWa,cAF1C,CAMA,IAAIrM,MAAQ,GACZ,IAKE,GAJAuL,oBAAsBA,oBACnB1C,QAAQ,MAAO,MACfA,QAAQ,MAAO,oBAClB7I,MAAQwM,KAAKjB,qBACTvL,QAAU+C,KAAKyD,MAAMxG,MACvB,OAEF+C,KAAKwD,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBxG,iBACrB,WACE,OAAKyG,0BAA0BzG,UAGnC,MAAOqG,GACPH,QAAQC,MACN,6BAA+BE,EAAEoG,QAAU,IAC3C1J,KAAKoC,MAAMK,QAAQoE,eA7GvB,CAIE,IAAM8C,KAAO,GAAH,OAAMxF,OAAN,YAAgBE,WAExBrE,KAAKoC,MAAM2C,aAAe2C,UAAU3C,YACpCpC,EAAEtC,IAAIoI,WAAYkB,QAAU3J,KAAKyD,MAAMxG,OAEvC+C,KAAKwD,UAAS,SAAAC,GAAK,sCACdA,GADc,IAEjBxG,MAAO0F,EAAEtC,IAAIoI,WAAYkB,e,8LA0GjC,2JAEQxF,EAASnE,KAAKoC,MAAMK,QAAQ2B,YAC5BmC,EAAkBvG,KAAKoC,MAAMK,QAAQC,YAAY,qBACjDkH,EAAWjH,EAAEtC,IAAIL,KAAKoC,MAAM2C,WAAY,CAACZ,GAAS,IACtDoC,EAAkBxF,sBAChBwF,EACA,IAAIzG,mDAAW8J,IAKb5E,GAZR,2EAYsBhF,KAAKyD,MAAMuB,SACxBrC,EAAE6G,QAAQjD,EAAiBvG,KAAKyD,MAAM8C,iBAb/C,oBAcW5D,EAAExC,QAAQoG,GAdrB,qBAeYvG,KAAKoC,MAAMK,QAAQC,YAAY,qBAAqB,GAfhE,wBAgBU6D,EAAkBsD,KAAKC,UAAUvD,GAhB3C,UAiB0B,IAAIpF,SAAS,CAC3B0G,MAAO7H,KAAK8H,aACXiC,WAAW,CAACC,QAASzD,IAnBlC,QAiBUvB,EAjBV,gDAqB0B,IAAI7D,SAAS,CAAC0G,MAAO7H,KAAK8H,aAAaiC,WACrDxD,GAtBZ,QAqBUvB,EArBV,eAyBQA,EAAWrC,EAAExD,QAAQ6F,GAA0BA,EAAfA,EAAQjF,KACxCiF,EAAUrC,EAAExD,QAAQ6F,GAAWA,EAAU,GA1BjD,4BA2BiBhF,KAAKyD,MAAM8C,gBA3B5B,kCA4BwB,IAAIpF,SAAS,CAAC0G,MAAO7H,KAAK8H,aAAaC,SA5B/D,QA4BQ/C,EA5BR,OA6BQA,EAAWrC,EAAExD,QAAQ6F,GAA0BA,EAAfA,EAAQjF,KACxCiF,EAAUrC,EAAExD,QAAQ6F,GAAWA,EAAU,GA9BjD,QAgCMhF,KAAKwD,UAAS,SAAAC,GAAK,sCACdA,GADc,IAEjB8C,kBACAvB,eAnCR,iD,sPAoGA,WAAmB/H,GAAnB,2KACQgN,EAAejK,KAAK8D,WACtB7G,EAAMA,QACRA,EAAQA,EAAMA,OAEV+H,GALR,2EAKsBhF,KAAKyD,MAAMuB,SACzBvC,EAAUzC,KAAKoC,MAAMK,QACtBuC,EAAQC,MAAK,SAAAU,GAAM,OAAIA,EAAO1I,OAASA,KAP9C,oBAQUiN,EAAazH,EAAQiD,qBAAqB,eAC5CjD,EAAQiD,qBAAqB,YAAawE,EATlD,wBAUMlK,KAAKwD,UAAS,SAAAC,GAAK,sCAASA,GAAT,IAAgBqD,gBAAgB,OAEnDqD,GADIA,EAAS1H,EAAQiD,qBAAqB,kBAAoB,IAC9CI,QAAQ,qBAAsB7I,GAC9CkN,EAASpJ,sBAAsBoJ,EAAQ1H,EAAQM,mBAAmB,GAC5DqH,EAAW,IAAIjJ,SAAS,CAAC0G,MAAOqC,IAd5C,oBAgBwBE,EAASC,KAAKF,GAhBtC,SAgBYG,EAhBZ,QAiBgBvK,OACNuK,EAAMA,EAAIvK,OAENwK,EAAa9H,EAAQiD,qBAAqB,iBAE9C4E,EAAIpF,MAAQvC,EAAEtC,IAAIiK,EAAKC,EAAYD,EAAIE,MAEnCC,EAAahI,EAAQiD,qBAAqB,iBAE9C4E,EAAIrN,MAAQ0F,EAAEtC,IAAIiK,EAAKG,EAAYH,EAAIE,KAEzCxF,EAAQ0F,QAAQJ,GA5BxB,mDA8BQnH,QAAQC,MAAR,MA9BR,yBAgCQpD,KAAKwD,UAAS,SAAAC,GAAK,sCAASA,GAAT,IAAgBqD,gBAAgB,OAhC3D,6CAmCM9B,EAAQ0F,QAAQ,EAAU,IAnChC,QAuCO1F,EAAQC,MAAK,SAAAzH,GAAC,OAAEA,EAAEP,OAASA,KAEpBgN,EAAahF,MAAK,SAAAhB,GAAC,OAAIA,EAAEhH,OAASA,OAC5CA,EAAQgN,EAAaU,OAAO,CAAC1N,WAF7BA,EAAQgN,EAIVhN,EAAQA,EAAM+G,KAAI,SAAAC,GAAC,OAAIA,EAAEhH,SACzB+C,KAAKwD,UAAS,SAAAC,GAAK,sCACZA,GADY,IAEfuB,UACA/H,aAEF,WAIE,EAAKyG,0BACHzG,GACA,MAxDR,iE,kFAiEA,WACE,IAAI+H,GAAU,2EAAIhF,KAAKyD,MAAMuB,SACvB4F,EAAwB5K,KAAKoC,MAAMK,QAAQoI,kBAC/C,mBAEIxC,EAAkBrI,KAAKoC,MAAMK,QAAQiD,qBAAqB,mBAC1DkC,EAAoB5H,KAAKoC,MAAMK,QAAQiD,qBAAqB,qBAC/D/C,EAAE6E,SAASa,IACyB,IAAlCA,EAAgB9D,QAAQ,QACtBqD,IACL5C,EAAU5D,cAAciH,EAAgBvC,QAAQ,KAAM,IAAIA,QAAQ,KAAM,KAClEnD,EAAExD,QAAQ6F,KACdA,EAAU,KAGV4F,IACF5F,EAAUpE,YAAYgK,EAAuB5F,IAE1ChF,KAAKoC,MAAMK,QAAQC,YAAY,kBAClCsC,EAAUrC,EAAEmI,OAAO9F,GAAS,SAAAxH,GAAC,OAAIA,IAAMA,EAAE0H,MAAQ1H,EAAE0H,MAAMvF,WAAanC,MACZ,SAAtDwC,KAAKoC,MAAMK,QAAQC,YAAY,qBACjCsC,EAAUrC,EAAEoI,QAAQ/F,KAGxB,IAAI/H,EAAQ+C,KAAK8D,WAIjB,OAHUkB,EAAQgG,QAAO,SAAAxN,GACvB,OAASP,EAAMgI,MAAK,SAAAhB,GAAC,OAAIA,EAAEhH,OAASO,EAAEP,c,qBA6C1C,WACE,gBAAU+C,KAAKoC,MAAMK,QAAQ2B,YAA7B,YAA4CpE,KAAKoC,MAAMK,QAAQ6B,aAA/D,O,+BAGF,SAAkBuB,GAChB,OAAOA,EAAKC,QAAQ,8BAA+B,U,6BA4CrD,WAAkB,MACV7I,EAAQ+C,KAAK8D,WAEnB,OAAO,WADS9D,KAAKiL,cAAgB,IACtBhG,MAAK,SAAAU,GAAM,OAAIA,EAAO1I,OAASA,YAAvC,eAA+CiI,QAAS,K,uBAkFjE,SAAUjI,GACR,OAAOA,EAAMiI,OAAS,K,wBASxB,SAAWgG,EAAOC,GAChB,OAAOD,aAAA,EAAAA,EAAOjO,SAASkO,aAAhB,EAAgBA,EAAOlO,S,oBAShC,WACE,IACIiI,EADEzC,EAAUzC,KAAKoC,MAAMK,QAErBR,EAAWjC,KAAKoC,MAAMK,QAAQC,cAElC0I,EACEnJ,EADFmJ,WAGEC,EAAa,GACbC,EAAa,GACXpJ,EAA8BlC,KAAKoC,MAAMK,QAAQiD,qBACrD,gCACG,MACL,OAAQxD,GACN,IAAK,MACHoJ,EAAa,CACXC,aAAcvL,KAAKyD,MAAMxB,SAASuJ,oBAC9BxL,KAAKyD,MAAMxB,SAASuJ,oBAAoBC,KAC1CzL,KAAKyD,MAAMxB,SAASuJ,oBAAoBE,KACtC,OAENL,EAAa,GACb,MACF,IAAK,SACHC,EAAa,CACXK,UAAW3L,KAAKyD,MAAMxB,SAASuJ,oBAC3BxL,KAAKyD,MAAMxB,SAASuJ,oBAAoBC,KAC1CzL,KAAKyD,MAAMxB,SAASuJ,oBAAoBE,KACtC,OAENL,EAAa,GACb,MACF,IAAK,OACHC,EAAa,CACXM,YAAa5L,KAAKyD,MAAMxB,SAASuJ,oBAC7BxL,KAAKyD,MAAMxB,SAASuJ,oBAAoBC,KAC1CzL,KAAKyD,MAAMxB,SAASuJ,oBAAoBE,KACtC,OAENL,EAAa,mCAGb,MACF,IAAK,WACHC,EAAa,CACX5E,SAAU,WACVmF,OAAQ,GAEVR,EAAa,GAGjB,IAAMS,EAAgB9L,KAAKuH,WAAW,iBAEpCrC,EADE4G,EAEA,2BACEC,UAAW,+BAAiCV,EAC5CW,MAAOV,GAEP,6BACES,UAAS,4BAAuB/L,KAAKyD,MAAMxB,SAASgK,iBAChD,8BACA,KAGHH,GAEFV,GAAcA,EAAWc,WACxB,4BAAMH,UAAU,oBACb9K,gBAAgBmK,KAMjB,KAGV,IAOIe,EAPEC,EAAc3J,EAAQiD,qBAAqB,uBAC3C2G,EAAmB5J,EAAQiD,qBAAqB,oBAChD4G,EAAkB7J,EAAQiD,qBAAqB,mBAOjD6G,EAAevM,KAAKiL,aAClBuB,EAAuB/J,EAAQiD,qBAAqB,uBAAwB,GAAI,IAChF+G,EAAkBzM,KAAKuH,WAAW,mBAClCmF,EAAgB1M,KAAK8D,WACrB6I,EACJD,EAAcnQ,OAAS,EAAI,oBAAC+E,OAAD,CAAQyE,KAAK,QAAQY,SAAS,EAAMoF,UAAU,cAAc5G,QAASnF,KAAKiG,mBAAkB2G,EA8CzH,OA7CAT,EACE,oBAACzK,YAAD,CACE0K,YAAaA,EACbS,WAde,GAefvK,cAAetC,KAAKsC,cACpBwK,WAAY9M,KAAK8M,WACjBC,SAAUV,EACV7F,aAAcxG,KAAKwG,aACnBpB,uBAAwB3C,EAAQiD,qBAAqB,UAAY1F,KAAKoF,uBAAyB,KAC/FE,sBAAuBtF,KAAKsF,sBAC5B0H,aAAc,SAACpJ,EAAD,GAA2C,IAAnC6B,EAAmC,EAAnCA,YAAawH,EAAsB,EAAtBA,UACjC,OADuD,EAAX1H,MACvC0H,EAAUC,iBAGR,oBAACzL,SAAD,CACLoE,KAAMjC,EAAKsB,MACXlI,IAAK4G,EAAK3G,MACV8P,SAAUE,EAAUF,UAAYnJ,EAAKmJ,SACrC5H,QAASM,IANF,MASX0H,cAAe,SAAC5H,EAAO3B,GAAS,MAC9B,YAAcgJ,IAAVrH,GAAwC,IAAjBA,EAAMhJ,QAG1B,WAAGqH,SAAA,UAAAA,EAAMsB,aAAN,eAAaU,gBAAiB,IAAKrB,QAAQgB,EAAMK,gBAAkB,GAE/EwH,MAAOb,EAEPc,UAAW,oBAAC5L,SAAD,CAAUsL,UAAU,EAAMlH,KAAMyG,IAC3C1M,KAAMI,KAAKsN,UACXpH,aAAclG,KAAKkG,aACnBwG,cAAeA,EACfa,cAAe,CACbC,SAAUxN,KAAK2D,gBACf8J,aAAcd,GAGhBnC,GAAIiC,EACJiB,YAAa1N,KAAK2N,UAClB5B,UAAS,UAAKS,EAAL,YAA6BxM,KAAKyD,MAAMqD,eAAiB,qBAAuB,MAM3F,oBAAChF,oBAAD,CACEG,SAAUA,EACV8J,UAAW,0BAEsB,QAAhC7J,EAAwCgD,EAAQ,GAChB,SAAhChD,EAAyCgD,EAAQ,GACjB,UAAhChD,EAA0CgD,EAAQ,GAClB,aAAhChD,EAA6CgD,EAAQ,GAErDiH,EACgC,WAAhCjK,EAA2CgD,EAAQ,Q,wBA/3BvB0I,WAq4BrC,oD,+1FCtxCA,yBAWIlN,OAAOC,aAVTC,YADF,qBACEA,YACAC,SAFF,qBAEEA,SACAC,yBAHF,qBAGEA,yBACAC,sBAJF,qBAIEA,sBACAC,uBALF,qBAKEA,uBACAC,gBANF,qBAMEA,gBACAC,YAPF,qBAOEA,YACAE,cARF,qBAQEA,cACAD,SATF,qBASEA,SACAE,wBAVF,qBAUEA,wBAIIC,OAASZ,OAAOa,UAAUC,UAAUF,OACpCG,SAAWf,OAAOa,UAAUC,UAAUC,SACtCoM,OAASnN,OAAOa,UAAUI,gBAAgBkM,QAE/CnN,OAAOkB,eAAiBlB,OAAOkB,gBAAkB,IAAIC,KAArD,y2QA2XD,IAAMC,oBAAsBC,OAAOC,IAAV,uLACrB,YACF,OADiD,EAA7CC,SAAWC,6BAEb,IAAK,OACH,MAAO,iBAET,IAAK,QACH,MAAO,oEAGX,MAAO,MAQH4L,kB,uOAGJ,2BAAY1L,GAAO,8GACjB,mBAAMA,IAHRC,UAAY,KAEO,EA4YnBgB,SAAW,SAACC,GACV,IAAIrG,EAAQ,GAEK,EAAKmF,MAAMK,QAAQC,cACpCzF,EAAQqG,EAAEC,OAAOtG,MAEbqG,GAAKA,EAAErG,QACTA,EAAQqG,EAAErG,OAGR0F,EAAExD,QAAQmE,KACZrG,EAAQ0F,EAAE1C,UAAUqD,IAGtB,EAAKE,UACH,SAAAC,GAAK,sCACAA,GADA,IAEHxG,aAEF,YAKW,IAFP,CAAC,OAAQ,QAAS,QAAS,MAAO,SAAU,YAAYsH,QACtD,EAAKd,MAAMxB,SAAS8L,eAGtB,EAAKrK,0BAC+CzG,GAClD,OAxaS,EAiiBnByG,0BAjiBmB,oKAiiBS,WAAOzG,GAAP,4JAAciH,EAAd,gCACtBC,EAAS,EAAK/B,MAAMK,QAAQ2B,aAEC,KAD7BC,EAAY,EAAKjC,MAAMK,QAAQ6B,cACrBC,QAAQ,QACpBF,EAAYrD,uBAAuBqD,MAEjC1B,EAAE6B,SAAS,EAAKpC,MAAMqC,WAAaJ,GAAaF,GAN1B,oBAOxB,EAAK/B,MAAMqC,SAASC,UAClBC,sFAAqBN,EAAWpH,EAAOkH,EAAQD,KAE7CA,EAVoB,sBAWhBU,EAAiB,EAAKxC,MAAMK,QAAQC,YAAY,oBAE/B7B,WAbD,kCAeZ,wLAfY,eAcdgC,EAdc,OAmBlBC,QAnBkB,UAoBdD,EAAeI,qBACnB,EAAKb,MAAMK,QAAQS,iBACnB,SACA0B,EACA,EAAKxC,MAAMK,SAxBO,4CAjiBT,wDAilBnBqB,SAAW,WACT,IAAI7G,EACAkH,EAAS,EAAK/B,MAAMK,QAAQ2B,YAC5BC,EAAY,EAAKjC,MAAMK,QAAQ6B,aASnC,OARIzD,WACF5D,EAAQ,EAAKwG,MAAMxG,OAGnBA,EAAQ0F,EAAEtC,IAAIoE,SAASK,WAAWC,WAA1B,UAAyCZ,GAAU,IAC3DlH,EAAQ0F,EAAEtC,IAAIpD,EAAOoH,EAAW,KAG3BpH,GA7lBU,EA8mBnB+Q,gBAAkB,WAChB,IAAMC,EAAa,EAAK7L,MAAMK,QAAQiD,qBAAqB,cAC3D,OAAG/C,EAAExC,QAAQ8N,GACJ,aAEF,4BAAMlC,UAAU,gDACpB7K,YAAY+M,KApnBE,EA2nBnBC,eAAiB,WACf,IAAMC,EAAY,EAAK/L,MAAMK,QAAQiD,qBAAqB,aAC1D,OAAG/C,EAAExC,QAAQgO,GACJ,KAEF,4BAAMpC,UAAU,+CACpB7K,YAAYiN,KAjoBE,EAwoBnBhJ,SAxoBmB,kJAwoBT,sJACJ,EAAK/C,MAAMK,QAAQC,YAAY,gBAAiB,KAAQ7B,WADpD,gCAGE,wLAHF,cAEAgC,EAFA,OAOJC,QAPI,SAQAD,EAAeI,qBACnB,EAAKb,MAAMK,QAAQS,iBACnB,QACA,EAAKd,MAAMK,QAAQC,YAAY,gBAAiB,IAChD,EAAKN,MAAMK,SAZP,2CAxoBS,EA6pBnB2C,uBAAyB,SAACC,GACxB,MAAM,CAACH,MAAOG,EAAMpI,MAAOoI,IA9pBV,EAwqBnBC,sBAAwB,SAAEC,EACHC,EACAC,GAIrB,IAAOhD,EAAW,EAAKL,MAAhBK,QAIP,IAAKA,EAAQiD,qBAAqB,UAChC,OAAO,KAGT,GADkB,EAAKjC,MAAhBuB,QACKC,MAAK,SAAAU,GACf,IAAIT,GAASS,EAAOT,OAAS,IAAM,GAGnC,OAFAA,EAAQA,EAAMU,eACdL,GAASA,GAAS,IAAM,MACPL,KAEjB,OAAO,KAET,IAAIW,EAAOpD,EAAQiD,qBAAqB,gBAAkB,GAG1D,OAFAG,EAAOA,EAAKC,QAAQ,gBAAiBP,GACrCM,EAAO7E,uBAAuB6E,EAAMpD,EAAQM,kBAAkBxC,WAE5D,oBAACkB,SAAD,CACEsE,KAAK,MACLF,KAAMA,EACNL,OAAQA,EACRL,QAASM,EACTO,sBAAsB,KAvsBT,EA0sBnB1D,cA1sBmB,oKA0sBH,WAAOC,GAAP,0IACRC,EAAgB,EAAKJ,MAAMK,QAAQC,YAAY,cAClDC,EAAExC,QAAQqC,GAFC,qDAKX,EAAKI,gBALM,wDAQd,EAAKA,iBAAkB,EART,kBAYJ,wLAZI,cAWNC,EAXM,OAgBVC,QACF,EAAKV,MAAMK,QAAQM,kBAAkBC,YAAY,eAAgBT,GAjBrD,UAkBNM,EAAeI,qBACnB,EAAKb,MAAMK,QAAQS,iBACnB,SACAV,EACA,EAAKJ,MAAMK,SAtBD,0DAyBZU,QAAQC,MAAR,MAzBY,yBA2BZ,EAAKR,iBAAkB,EA3BX,6EA1sBG,sDAEjBR,EAAMK,QAAQ2D,WAAd,mFACI1F,OAAO2F,kBACT3F,OAAO2F,kBAAP,oFAEF,EAAKjG,aACH,EAAKmH,WAAW,2BACf,EAAK6G,iBAAmB,GAAK,IAC5B,EAAKA,mBAAqBzL,EAAExD,QAAQ,EAAKiB,gBAC3C,EAAKA,aAAe,IAEtB,EAAKqD,MAAQ,CACXxB,SAAU,cAAF,GAAMG,EAAMK,QAAQC,eAC5BzF,MAAO,EAAKmD,aACZ4E,QAASlE,yBACPsB,EAAMK,QAAQC,YAAY,oBAE5B6D,gBAAiB,MAGnB,EAAKC,aAAe,CAClBC,WAAW,EACX4H,gBAAiB,uBACjB3H,SAAU,SACVC,QAASvE,EAAMK,QAAQiD,qBAAqB,WAE5CkB,gBAAiB,sDAAF,OAAwD,EAAKxE,MAAMK,QAAQoE,QAA3E,YAAsF,EAAKpD,MAAMqD,eAAiB,qBAAuB,IACxJC,gBAAiBrG,OAAOsG,YAActG,OAAOsG,YAAYC,cAAcC,SAASC,KAAOD,SAASC,MAE7FtG,WAGL,EAAKuG,eAAiBC,MAAMC,YACxB,EAAKC,WAAW,0BAClB,EAAK7D,0BAA0B,EAAK6D,WAAW,0BAGjD,EAAK+G,SAAWjH,MAAMC,YAtCL,E,4HA6CnB,WACE,OAAO,I,wBAMT,WAEEtH,KAAKqD,SADO,IAEZrD,KAAK0D,0BAFO,IAE0B,K,wMASxC,WAAyBgE,EAAWC,GAApC,oJACM3H,KAAKoC,MAAMK,QAAQC,YAAY,mBADrC,gBAEQsC,EAAUlE,yBACZd,KAAKoC,MAAMK,QAAQC,YAAY,oBAGjC1C,KAAKwD,UAAS,SAAAC,GAAK,sCAASA,GAAT,IAAgBuB,eANvC,4BAQI,CAAC,gBAAgBT,QAAQvE,KAAKoC,MAAMK,QAAQ6K,YAAc,GAC1DtN,KAAKyD,MAAMxB,SAAS2F,mBATxB,iCAWwB,IAAIzG,SAAS,CAAC0G,MAAO7H,KAAK8H,aAAaC,SAX/D,OAWQ/C,EAXR,OAYIA,EAAWrC,EAAExD,QAAQ6F,GAA0BA,EAAfA,EAAQjF,KACxCiF,EAAUrC,EAAExD,QAAQ6F,GAAWA,EAAU,GACzChF,KAAKwD,UAAS,SAAAC,GAAK,sCAASA,GAAT,IAAgBuB,eAdvC,WAgBM/H,EAAQ+C,KAAKyD,MAAMxG,MAQrB0F,EAAEtC,IAAIpD,EAAO,YACb+C,KAAKoC,MAAM4F,aAAaC,YAAY,uBAEpChL,EAAQ+C,KAAKuH,WAAW,2BAOxBG,GACCA,EAAUM,aAAaC,YAAY,uBACpCjI,KAAKoC,MAAM4F,aAAaC,YAAY,qBApCxC,wBAsCIhL,EAAQ+C,KAAKuH,WAAW,yBACxBvH,KAAKwD,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBxG,QAAOiL,eAAe,OAC3C,WACE,EAAKxE,0BAA0BzG,MA1CvC,+BAgDI+C,KAAKoC,MAAM4F,aAAaC,YAAY,uBACpCjI,KAAKoC,MAAM+F,mBAAmBF,YAAY,6BACzCjI,KAAKyD,MAAMyE,cAlDhB,wBAoDIjL,EAAQ+C,KAAKuH,WAAW,yBACxBvH,KAAKwD,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBxG,QAAOiL,eAAe,OAC3C,WACE,EAAKxE,0BAA0BzG,MAxDvC,2BA6DM+C,KAAKyD,MAAMxG,QAAUA,GACvB+C,KAAKwD,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBxG,aACrB,WACE,EAAKyG,0BAA0BzG,MAjEvC,iD,wFA0EA,WACE,IAAImL,EAAMpI,KAAKoC,MAAMK,QAAQC,YAAY,qBAEzC,OAA0B,IAAtB0F,EAAI7D,QAAQ,KACd,uBAAuB6D,EAAvB,cAEyB,IAAvBA,EAAI7D,QAAQ,QACd6D,EAAMpH,uBAAuBoH,IAExBA,K,0MAMT,WAA0BV,EAAWC,GAArC,wJAC+C3H,KAAKyD,MAAMxB,UAAjDoG,gBADT,EAC0BT,kBAEtBF,IACCA,EAAUS,mBAAmBF,YAAY,6BAC1CjI,KAAKoC,MAAM+F,mBAAmBF,YAAY,8BAEtChL,EAAQ+C,KAAKuH,WACf,wBACAvH,KAAKoC,MAAMK,QAAQC,YAAY,qBAEjC1C,KAAKwD,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBxG,QAAOiL,eAAe,OAC3C,WACE,EAAKxE,0BAA0BzG,OAKF,iBAAjC+C,KAAKoC,MAAMK,QAAQ6K,YACnBtN,KAAKoC,MAAMK,QAAQC,YAAY,qBApBnC,oBAwBQ1C,KAAKyD,MAAMxB,SAAS2F,oBACpBF,EAAUjF,QAAQC,YAAY,qBAzBtC,wBA4BUkF,EAAoBF,EAAUjF,QAAQC,YACxC,qBA7BR,SA+B0B,IAAIvB,SAAS,CAAC0G,MAAO7H,KAAK8H,aAAaC,SA/BjE,OA+BU/C,EA/BV,OAgCMA,EAAWrC,EAAExD,QAAQ6F,GAA0BA,EAAfA,EAAQjF,KACxCiF,EAAUrC,EAAExD,QAAQ6F,GAAWA,EAAU,GACzChF,KAAKwD,UAAS,SAAAC,GAAK,sCAASA,GAAT,IAAgBuB,UAAS4C,yBAlClD,SAyCKjF,EAAE6G,QAAQxJ,KAAKoC,MAAM4F,aAAcN,EAAUM,eAC9ChI,KAAKyD,MAAMxG,OACX+C,KAAKyD,MAAMxG,MAAMsR,SAEjBvO,KAAK0D,0BAA0B1D,KAAKuH,WAAW,0BAO/CvH,KAAKoC,MAAM2C,aAAe2C,EAAU3C,YACpC/E,KAAKoC,MAAM4F,eAAiBN,EAAUM,cACtChI,KAAKoC,MAAM+F,qBAAuBT,EAAUS,oBAE5CnI,KAAKsI,gBAQPtI,KAAKuI,YAAYb,GAhEnB,iD,4FAuEA,SAAAa,YAAYb,WAAW,gBACrB,IAAI7G,WAAJ,CAGA,IAAI2H,oBAAsBxI,KAAKoC,MAAMK,QAAQC,YAC3C,uBAEI+F,WAAazI,KAAKoC,MAAM2C,WACxBV,UAAYrE,KAAKoC,MAAMK,QAAQ6B,aAC/BH,OAASnE,KAAKoC,MAAMK,QAAQ2B,YAClC,GAAKoE,oBAAL,CAiBA,IAAME,YAAc,GAEdC,UAAY3I,KAAKoC,MAAM+F,mBAAmB5H,UAC1CqI,WAAa5I,KAAKoC,MAAM4F,aAAazH,UACrCsI,UAAY7I,KAAKoC,MAAM0G,YAAYvI,UACnCwI,eAAiB/I,KAAKoC,MAAM4G,eAAezI,UAC3C0I,eAAiBjJ,KAAKoC,MAAM6G,eAAe1I,UAC3C2I,UAAYlJ,KAAKoC,MAAM+G,UAAU5I,UACjC6I,QAAUpJ,KAAKoC,MAAMK,QAAQM,kBAAkBxC,UAiDrD,IAhDkD,IAA9CiI,oBAAoBjE,QAAQ,eAC9B6E,QAAQT,UAAYA,UACfA,UAAUU,yBAGbX,YAAYC,UAAYjB,UAAUS,mBAAmB5H,UAFrDmI,YAAYC,UAAYA,YAKuB,IAA/CH,oBAAoBjE,QAAQ,gBAC9B6E,QAAQX,WAAaA,WAIjB,UAAGtE,OAAH,YAAaE,aAAgBoE,WAAWa,aAC1CZ,YAAYD,WAAaA,WAEzBC,YAAYD,WAAaf,UAAU3C,aAGY,IAA/CyD,oBAAoBjE,QAAQ,gBAC9B6E,QAAQR,WAAaA,WACrBF,YAAYE,WAAalB,UAAUM,aAAazH,YAEA,IAA9CiI,oBAAoBjE,QAAQ,eAC9B6E,QAAQP,UAAYA,UACpBH,YAAYG,UAAYnB,UAAUoB,YAAYvI,YAEE,IAA9CiI,oBAAoBjE,QAAQ,eAC9B6E,QAAQP,UAAYA,UACpBH,YAAYG,UAAYnB,UAAUoB,YAAYvI,YAEO,IAAnDiI,oBAAoBjE,QAAQ,oBAC9B6E,QAAQL,eAAiBA,eACzBL,YAAYK,eAAiBrB,UAAUsB,eAAezI,YAEN,IAA9CiI,oBAAoBjE,QAAQ,eAC9B6E,QAAQF,UAAYA,UACpBR,YAAYQ,UAAYxB,UAAUyB,UAAU5I,YAES,IAAnDiI,oBAAoBjE,QAAQ,oBAC9B6E,QAAQH,eAAiBA,eACzBP,YAAYO,eAAiBvB,UAAUuB,eAAe1I,YAGH,IAAjDiI,oBAAoBjE,QAAQ,kBAC9B6E,QAAQG,aAAelI,wBAAwB,eAAgB,OAI/DsB,EAAE6G,QAAQ9B,UAAUS,mBAAoBnI,KAAKoC,MAAM+F,qBACnDxF,EAAE6G,QAAQ9B,UAAUoB,YAAa9I,KAAKoC,MAAM0G,cAC5CnG,EAAE6G,QAAQ9B,UAAU3C,WAAY/E,KAAKoC,MAAM2C,aAC3CpC,EAAE6G,QAAQ9B,UAAUsB,eAAgBhJ,KAAKoC,MAAM4G,iBAC/CrG,EAAE6G,QAAQ9B,UAAUyB,UAAWnJ,KAAKoC,MAAM+G,YAC1CxG,EAAE6G,QAAQ9B,UAAUuB,eAAgBjJ,KAAKoC,MAAM6G,iBAC/CtG,EAAE6G,QAAQ9B,UAAUM,aAAchI,KAAKoC,MAAM4F,iBAK5CrF,EAAE6G,QAAQ9B,UAAU3C,WAAY/E,KAAKoC,MAAM2C,aAC5C,UAAGZ,OAAH,YAAaE,aAAgBoE,WAAWa,cAF1C,CAMA,IAAIrM,MAAQ,GACZ,IAKE,GAJAuL,oBAAsBA,oBACnB1C,QAAQ,MAAO,MACfA,QAAQ,MAAO,oBAClB7I,MAAQwM,KAAKjB,qBACTvL,QAAU+C,KAAKyD,MAAMxG,MACvB,OAEF+C,KAAKwD,UACH,SAAAC,GAAK,sCAASA,GAAT,IAAgBxG,iBACrB,WACE,OAAKyG,0BAA0BzG,UAGnC,MAAOqG,GACPH,QAAQC,MACN,6BAA+BE,EAAEoG,QAAU,IAC3C1J,KAAKoC,MAAMK,QAAQoE,eA7GvB,CAIE,IAAM8C,KAAO,GAAH,OAAMxF,OAAN,YAAgBE,WAExBrE,KAAKoC,MAAM2C,aAAe2C,UAAU3C,YACpCpC,EAAEtC,IAAIoI,WAAYkB,QAAU3J,KAAKyD,MAAMxG,OAEvC+C,KAAKwD,UAAS,SAAAC,GAAK,sCACdA,GADc,IAEjBxG,MAAO0F,EAAEtC,IAAIoI,WAAYkB,e,8LA0GjC,2JAEQxF,EAASnE,KAAKoC,MAAMK,QAAQ2B,YAC5BmC,EAAkBvG,KAAKoC,MAAMK,QAAQC,YAAY,qBACjDkH,EAAWjH,EAAEtC,IAAIL,KAAKoC,MAAM2C,WAAY,CAACZ,GAAS,IACtDoC,EAAkBxF,sBAChBwF,EACA,IAAIzG,mDAAW8J,IAKb5E,GAZR,4EAYsBhF,KAAKyD,MAAMuB,SACxBrC,EAAE6G,QAAQjD,EAAiBvG,KAAKyD,MAAM8C,iBAb/C,oBAcW5D,EAAExC,QAAQoG,GAdrB,qBAeYvG,KAAKoC,MAAMK,QAAQC,YAAY,qBAAqB,GAfhE,wBAgBU6D,EAAkBsD,KAAKC,UAAUvD,GAhB3C,UAiB0B,IAAIpF,SAAS,CAC3B0G,MAAO7H,KAAK8H,aACXiC,WAAW,CAACC,QAASzD,IAnBlC,QAiBUvB,EAjBV,gDAqB0B,IAAI7D,SAAS,CAAC0G,MAAO7H,KAAK8H,aAAaiC,WACrDxD,GAtBZ,QAqBUvB,EArBV,eAyBQA,EAAWrC,EAAExD,QAAQ6F,GAA0BA,EAAfA,EAAQjF,KACxCiF,EAAUrC,EAAExD,QAAQ6F,GAAWA,EAAU,GA1BjD,4BA2BiBhF,KAAKyD,MAAM8C,gBA3B5B,kCA4BwB,IAAIpF,SAAS,CAAC0G,MAAO7H,KAAK8H,aAAaC,SA5B/D,QA4BQ/C,EA5BR,OA6BQA,EAAWrC,EAAExD,QAAQ6F,GAA0BA,EAAfA,EAAQjF,KACxCiF,EAAUrC,EAAExD,QAAQ6F,GAAWA,EAAU,GA9BjD,QAgCMhF,KAAKwD,UAAS,SAAAC,GAAK,sCACdA,GADc,IAEjB8C,kBACAvB,eAnCR,iD,sPAgFA,WAAmB/H,GAAnB,8KACsB2P,IAAhB3P,EAAMA,OAAyBuR,MAAMvR,EAAMA,SAC7CA,EAAQA,EAAMA,QAGF,IAAXA,IACDA,EAAQ,MAGJ+H,EAAUhF,KAAKiL,aACfxI,EAAUzC,KAAKoC,MAAMK,QACtBuC,EAAQC,MAAK,SAAAU,GAAM,OAAIA,EAAO1I,OAASA,KAX9C,oBAYUiN,EAAazH,EAAQiD,qBAAqB,eAC7CjD,EAAQiD,qBAAqB,YAAawE,EAbjD,wBAcMlK,KAAKwD,UAAS,SAAAC,GAAK,sCAAQA,GAAR,IAAeqD,gBAAgB,OAElDqD,GADIA,EAAS1H,EAAQiD,qBAAqB,kBAAoB,IAC9CI,QAAQ,qBAAsB7I,GAC9CkN,EAASpJ,sBAAsBoJ,EAAQ1H,EAAQM,mBAAmB,GAC5DqH,EAAW,IAAIjJ,SAAS,CAAC0G,MAAOqC,IAlB5C,oBAoBwBE,EAASC,KAAKF,GApBtC,SAoBYG,EApBZ,QAqBevK,OACLuK,EAAMA,EAAIvK,OAENwK,EAAa9H,EAAQiD,qBAAqB,iBAE9C4E,EAAIpF,MAAQvC,EAAEtC,IAAIiK,EAAKC,EAAYD,EAAIE,MAEnCC,EAAahI,EAAQiD,qBAAqB,iBAE9C4E,EAAIrN,MAAQ0F,EAAEtC,IAAIiK,EAAKG,EAAYH,EAAIE,KAEzCxF,EAAQ0F,QAAQJ,GAhCxB,4EAoCQtK,KAAKwD,UAAS,SAAAC,GAAK,sCAAQA,GAAR,IAAeqD,gBAAgB,OApC1D,6CAuCM9B,EAAQ0F,QAAQ,EAAU,IAvChC,QAyCI1K,KAAKwD,UAAS,SAAAC,GAAK,sCACZA,GADY,IAEfuB,eA3CR,QA8CEhF,KAAKwD,UAAS,SAAAC,GAAK,sCACZA,GADY,IAEfxG,aAEF,WAIE,EAAKyG,0BACHzG,GACA,MAxDR,iE,kFAiEA,WACE,IAAI+H,EAAUhF,KAAKyD,MAAMuB,QAEnB4F,EAAwB5K,KAAKoC,MAAMK,QAAQoI,kBAC/C,mBAEIxC,EAAkBrI,KAAKoC,MAAMK,QAAQiD,qBAAqB,mBAC1DkC,EAAoB5H,KAAKoC,MAAMK,QAAQiD,qBAAqB,qBAkClE,OAjCG/C,EAAE6E,SAASa,IACyB,IAAlCA,EAAgB9D,QAAQ,QACtBqD,IACL5C,EAAU5D,cAAciH,EAAgBvC,QAAQ,KAAM,IAAIA,QAAQ,KAAM,KAClEnD,EAAExD,QAAQ6F,KACdA,EAAU,KAIZA,EADE4F,EACQhK,YAAYgK,EAAuB5F,IAEnC,4EAAIA,GAEXhF,KAAKoC,MAAMK,QAAQC,YAAY,kBAClCsC,EAAUrC,EAAEmI,OAAO9F,GAAS,SAAAxH,GAAC,OAAIA,IAAMA,EAAE0H,MAAQ1H,EAAE0H,MAAMvF,WAAanC,MACb,SAAtDwC,KAAKoC,MAAMK,QAAQC,YAAY,qBAChCsC,EAAUrC,EAAEoI,QAAQ/F,KAGrBhF,KAAKoC,MAAMK,QAAQiD,qBAAqB,6BACzCV,EAAQ0F,QAAQ,CACdxF,MAAOlF,KAAKoC,MAAMK,QAAQiD,qBAAqB,wBAA0B,GACzEzI,MAAO,KAIR+C,KAAKoC,MAAMK,QAAQiD,qBAAqB,WAAa1F,KAAKyD,MAAMxG,QACjE+H,EAAU,CAAC,CACT/H,OAAQ,EACRiI,MAAOlF,KAAKoC,MAAMK,QAAQiD,qBAAqB,eAAgB,GAAI,YAF9D,oFAGDV,KAGDA,I,qBA2CT,WACE,gBAAUhF,KAAKoC,MAAMK,QAAQ2B,YAA7B,YAA4CpE,KAAKoC,MAAMK,QAAQ6B,aAA/D,O,+BAGF,SAAkBuB,GAChB,OAAOA,EAAKC,QAAQ,8BAA+B,U,6BA0BrD,WAAkB,MACV7I,EAAQ+C,KAAK8D,WAGnB,OAAO,WADS9D,KAAKiL,cAAgB,IACtBhG,MAAK,SAAAU,GAAM,OAAIA,EAAO1I,OAASA,YAAvC,eAA+CiI,QAAS,K,oBAiIjE,WAAS,IAGHA,EAHG,OAEDzC,EAAUzC,KAAKoC,MAAMK,QAErBR,EAAWjC,KAAKoC,MAAMK,QAAQC,cAChCzF,EAAQ+C,KAAKyO,kBAGfrD,EACEnJ,EADFmJ,WAGIsD,EAAYjM,EAAQC,YAAY,gBAAiB,EACvD1C,KAAKwG,aAAamI,UAAY,SAACrL,GAC7B,GAAGoL,EAAW,CACZ,IAAME,EAAa,EAAKN,SAASO,QAAQC,YAEzC3L,QAAQ4L,IAAIH,EAAYtL,GACxBA,EAAE0I,MAAMgD,MAAR,UAAmBJ,EAAnB,WACQtL,EAAE0I,MAAMgD,QAChB1L,EAAE0I,MAAMgD,MAAQ,KAIpB,IAAI3D,EAAa,GACbC,EAAa,GACXpJ,EAA8BlC,KAAKoC,MAAMK,QAAQiD,qBACrD,gCACG,MACL,OAAQxD,GACN,IAAK,MACHoJ,EAAa,CACXC,aAAcvL,KAAKyD,MAAMxB,SAASuJ,oBAC9BxL,KAAKyD,MAAMxB,SAASuJ,oBAAoBC,KAC1CzL,KAAKyD,MAAMxB,SAASuJ,oBAAoBE,KACtC,OAENL,EAAa,GACb,MACF,IAAK,SACHC,EAAa,CACXK,UAAW3L,KAAKyD,MAAMxB,SAASuJ,oBAC3BxL,KAAKyD,MAAMxB,SAASuJ,oBAAoBC,KAC1CzL,KAAKyD,MAAMxB,SAASuJ,oBAAoBE,KACtC,OAENL,EAAa,GACb,MACF,IAAK,OACHC,EAAa,CACXM,YAAa5L,KAAKyD,MAAMxB,SAASuJ,oBAC7BxL,KAAKyD,MAAMxB,SAASuJ,oBAAoBC,KAC1CzL,KAAKyD,MAAMxB,SAASuJ,oBAAoBE,KACtC,OAENL,EAAa,mCAGb,MACF,IAAK,WACHC,EAAa,CACX5E,SAAU,WACVmF,OAAQ,GAEVR,EAAa,GAGjB,IAAMS,EAAgB9L,KAAKuH,WAAW,iBAEpCrC,EADE4G,EAEA,2BACEC,UAAW,+BAAiCV,EAC5CW,MAAOV,GAEP,6BACES,UAAS,4BAAuB/L,KAAKyD,MAAMxB,SAASgK,iBAChD,8BACA,KAGHH,GAEFV,GAAcA,EAAWc,WACxB,4BAAMH,UAAU,oBACb9K,gBAAgBmK,KAMjB,KAGV,IASIe,EATEC,EAAc3J,EAAQiD,qBAAqB,uBAC3C2G,EAAmB5J,EAAQiD,qBAAqB,oBAChD4G,EAAkB7J,EAAQiD,qBAAqB,mBAE/CmH,EAAa,CACjBT,cACAL,UAAWtJ,EAAQiD,qBAAqB,eAAiB,eAAiB,IAKxE6G,EAAevM,KAAKiL,aAClBuB,EAAuB/J,EAAQiD,qBAAqB,uBAAwB,GAAI,IAChF+G,EAAkBzM,KAAKuH,WAAW,mBAgDxC,OA7CA4E,EACI,oBAAC0B,OAAD,CACEhB,WAAYA,EACZE,SAAUV,EACV7F,aAAcxG,KAAKwG,aACnBpB,uBAAwB3C,EAAQiD,qBAAqB,UAAY1F,KAAKoF,uBAAyB,KAC/FE,sBAAuBtF,KAAKsF,sBAC5B0H,aAAc,SAACpJ,EAAD,GAA2C,IAAnC6B,EAAmC,EAAnCA,YAAawH,EAAsB,EAAtBA,UACjC,OADuD,EAAX1H,MACvC0H,EAAUC,iBAGR,oBAACzL,SAAD,CACLoE,KAAMjC,EAAKsB,MACXlI,IAAK4G,EAAK3G,MACVuI,OAAQ5B,EAAK3G,QAAU,EAAK6G,WAC5BiJ,SAAUE,EAAUF,UAAYnJ,EAAKmJ,SACrC5H,QAASM,IAPF,MAUX0H,cAAe,SAAC5H,EAAO3B,GAAS,MAC9B,YAAcgJ,IAAVrH,GAAwC,IAAjBA,EAAMhJ,QAG1B,WAAGqH,SAAA,UAAAA,EAAMsB,aAAN,eAAaU,gBAAiB,IAAKrB,QAAQgB,aAA9C,EAA8CA,EAAOK,gBAAkB,GAEhFtD,cAAetC,KAAKsC,cACpB8K,MAAOb,EAEPc,UAAW,oBAAC5L,SAAD,CAAUsL,UAAU,EAAMlH,KAAMyG,IAC3C1M,KAAMI,KAAKsN,UACXpH,aAAc,SAAAtC,GAAI,OAAI,EAAKsC,aAAatC,IACxC4G,GAAIiC,EACJV,UAAS,UAAKS,EAAL,YAA6BxM,KAAKyD,MAAMqD,eAAiB,qBAAuB,KAEzF,oBAACxF,OAAD,CACEuE,KAAM5I,EACNgS,WAAYjP,KAAKsO,SACjBvB,SAAUV,EACVlH,QAASnF,KAAKmF,QACdY,KAAM/F,KAAKkO,iBACXgB,UAAWlP,KAAKgO,qBAMtB,oBAAClM,oBAAD,CACEG,SAAUA,EACV8J,UAAW,0BAEsB,QAAhC7J,EAAwCgD,EAAQ,GAChB,SAAhChD,EAAyCgD,EAAQ,GACjB,UAAhChD,EAA0CgD,EAAQ,GAClB,aAAhChD,EAA6CgD,EAAQ,GAErDiH,EACgC,WAAhCjK,EAA2CgD,EAAQ,Q,mBA/4B5B0I,WAq5BhC,+C,oHCpzCO,IAAMuB,EAA0B,0BAC1BC,EAAyB,0BAU/B,SAASzK,EAAqBN,EAAWpH,EAAOkH,EAAQD,GAE7D,MAAO,CACLmL,KAAMF,EACN9K,YACApH,QACAkH,SACAmF,aAAcpF,EAAY,GAAH,OAAMC,EAAN,YAAgBE,GAAc","file":"InputSelectWidget.6607c6df8056fae440bc.bundle.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","const {\r\n  convertData,\r\n  isEditor,\r\n  parseOptionsFromSettings,\r\n  parseParamsFromString,\r\n  replaceContentWithData,\r\n  renderAssetIcon,\r\n  renderAsset,\r\n  Resource,\r\n  getDataByPath,\r\n  getDataFromLocalStorage\r\n} = window.altrpHelpers;\r\nimport {changeFormFieldValue} from \"../../../../../front-app/src/js/store/forms-data-storage/actions\";\r\nimport AltrpModel from \"../../classes/AltrpModel\";\r\n\r\nconst Button = window.altrpLibs.Blueprint.Button;\r\nconst MenuItem = window.altrpLibs.Blueprint.MenuItem;\r\nconst MultiSelect = window.altrpLibs.BlueprintSelect.MultiSelect;\r\n\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n\r\n.altrp-field {\r\n  border-style: solid;\r\n  width: 100%;\r\n}\r\n.altrp-field-file{\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n}\r\n.altrp-portal_input-select .bp3-menu{\r\n  max-height: 300px;\r\n  overflow: auto;\r\n}\r\n.altrp-widget_input-multi-select .bp3-icon_right{\r\n    margin:  0 0 0 7px;\r\n}\r\n.bp3-icon_text-widget img{\r\n  width: 16px;\r\n  height: 16px;\r\n  object-fit: contain;\r\n  pointer-events: none;\r\n}\r\n.bp3-icon_text-widget svg{\r\n  width: 16px;\r\n  height: 16px;\r\n  pointer-events: none;\r\n}\r\n.altrp-widget_input-multi-select.altrp-widget_input-multi-select .bp3-icon:first-child:last-child{\r\n   margin: 0;\r\n}\r\n.altrp-widget_input-multi-select .bp3-popover-wrapper{\r\n  display: flex;\r\n}\r\n.altrp-widget_input-multi-select .bp3-popover-target > div{\r\n  width: 100%;\r\n}\r\n.altrp-widget_input-multi-select .bp3-popover-target{\r\n  display: flex;\r\n  flex-grow: 1;\r\n}\r\n.altrp-widget_input-multi-select .bp3-popover-target .bp3-button{\r\n  justify-content: flex-end;\r\n}\r\n.altrp-widget_input-multi-select .bp3-popover-target .bp3-button .bp3-button-text{\r\n  flex-grow: 1;\r\n}\r\n.altrp-label-icon svg,\r\n.altrp-label-icon img {\r\n  width: 20px;\r\n}\r\n.altrp-label-icon svg{\r\n  height: 20px;\r\n}\r\n.altrp-field-file__field{\r\n  display: none;\r\n}\r\n.altrp-field-file__placeholder{\r\n  display: none;\r\n}\r\n.altrp-field-file_empty .altrp-field-file__placeholder{\r\n  display: block;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: rgb(52,59,76);\r\n  color: #fff;\r\n}\r\n.input-clear-btn {\r\n  background: transparent;\r\n  padding: 0;\r\n  position: absolute;\r\n  bottom: calc(50% - 7px);\r\n  right: 15px;\r\n  display: none;\r\n}\r\n.input-clear-btn:hover {\r\n  font-weight: bold;\r\n}\r\n.altrp-field:hover + .input-clear-btn, .input-clear-btn:hover {\r\n  display: block;\r\n}\r\n.altrp-input-wrapper, .altrp-field-select2 {\r\n  position: relative;\r\n  flex-grow: 1;\r\n}\r\n.altrp-field-label--required::after {\r\n  content: \"*\";\r\n  color: red;\r\n  font-size: inherit;\r\n  padding-left: 10px;\r\n}\r\n.altrp-field-label {\r\n  font-size: 16px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-field-select2__single-value, .altrp-field {\r\n  font-size: 16px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-field-select2__control, .altrp-field {\r\n  text-align: left;\r\n  padding-top: 2px;\r\n  padding-right: 2px;\r\n  padding-bottom: 2px;\r\n  padding-left: 2px;\r\n  border-width: 1px;\r\n}\r\n.altrp-field-select2__control:hover{\r\n  border-width: 1px;\r\n}\r\n.altrp-field-container {\r\n  margin: 0;\r\n}\r\n.altrp-field::placeholder, .altrp-field-select2__placeholder {\r\n  font-size: 13px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-image-select {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n.altrp-image-select img {\r\n  flex-grow: 1;\r\n  object-fit: contain;\r\n}\r\n.altrp-field {\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n.altrp-field.active {\r\n  border-color: lightcoral;\r\n}\r\n.altrp-field-label {\r\n  text-align: center;\r\n  display: block;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__single-value {\r\n  font-size: 14px;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__indicator-separator {\r\n  display: none;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__indicator {\r\n  align-items: center;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__control {\r\n  width: 100px;\r\n  min-height: 32px;\r\n  padding: 0;\r\n  border-radius: 0;\r\n  outline: none;\r\n  border-color: rgb(142,148,170);\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__control input {\r\n  border: none;\r\n}\r\n.altrp-field-select2 {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  pointer-events: none;\r\n}\r\n.altrp-field-select2__control {\r\n  webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  background-color: hsl(0,0%,100%);\r\n  border-color: hsl(0,0%,80%);\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  cursor: default;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex-wrap: wrap;\r\n  -ms-flex-wrap: wrap;\r\n  flex-wrap: wrap;\r\n  -webkit-box-pack: justify;\r\n  -webkit-justify-content: space-between;\r\n  -ms-flex-pack: justify;\r\n  justify-content: space-between;\r\n  min-height: 38px;\r\n  outline: 0 !important;\r\n  position: relative;\r\n  -webkit-transition: all 100ms;\r\n  transition: all 100ms;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__value-container {\r\n  -webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex: 1;\r\n  -ms-flex: 1;\r\n  flex: 1;\r\n  -webkit-flex-wrap: wrap;\r\n  -ms-flex-wrap: wrap;\r\n  flex-wrap: wrap;\r\n  padding: 2px 8px;\r\n  -webkit-overflow-scrolling: touch;\r\n  position: relative;\r\n  overflow: hidden;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__single-value {\r\n  color: hsl(0,0%,20%);\r\n  margin-left: 2px;\r\n  margin-right: 2px;\r\n  max-width: calc(100% - 8px);\r\n  overflow: hidden;\r\n  position: absolute;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  top: 50%;\r\n  -webkit-transform: translateY(-50%);\r\n  -ms-transform: translateY(-50%);\r\n  transform: translateY(-50%);\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicators {\r\n  -webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  -webkit-align-self: stretch;\r\n  -ms-flex-item-align: stretch;\r\n  align-self: stretch;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex-shrink: 0;\r\n  -ms-flex-negative: 0;\r\n  flex-shrink: 0;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicator-separator {\r\n  -webkit-align-self: stretch;\r\n  -ms-flex-item-align: stretch;\r\n  align-self: stretch;\r\n  background-color: hsl(0,0%,80%);\r\n  margin-bottom: 8px;\r\n  margin-top: 8px;\r\n  width: 1px;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicator {\r\n  color: hsl(0,0%,80%);\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  padding: 8px;\r\n  -webkit-transition: color 150ms;\r\n  transition: color 150ms;\r\n  box-sizing: border-box;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.tba-placeholder {\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n.altrp-field-subgroup {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n.altrp-field-option {\r\n  display: flex;\r\n  padding: 10px;\r\n}\r\n.altrp-field-option__label {\r\n  cursor: pointer;\r\n}\r\ntextarea.altrp-field {\r\n  display: block;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__placeholder {\r\n  white-space: nowrap;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__single-value {\r\n  font-size: 14px;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__indicator-separator {\r\n  display: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__indicator {\r\n  align-items: center;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__control {\r\n  width: 100%;\r\n  min-height: 19px;\r\n  padding: 0;\r\n  border-radius: 0;\r\n  outline: none;\r\n  border-color: rgb(142, 148, 170);\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__control input {\r\n  border: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__value-container {\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  line-height: 13px;\r\n}\r\n.altrp-field-required {\r\n  color: red;\r\n  font-size: 18px;\r\n  padding-left: 10px;\r\n}\r\n.altrp-field-container-label {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.altrp-field-label-container-left {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.altrp-field-label-container {\r\n  display: inline-flex;\r\n  align-items: center;\r\n}\r\n.altrp-field-select2__indicator.altrp-field-select2__dropdown-indicator {\r\n  padding: 0 8px;\r\n  max-height: 14px;\r\n  overflow: hidden;\r\n}\r\n.altrp-field-select2 .altrp-field-select2__value-container {\r\n  padding: 0px 8px;\r\n}\r\n.altrp-field-select2 .css-b8ldur-Input {\r\n  padding-bottom: 0px;\r\n  padding-top: 0px;\r\n  margin: 0 2px;\r\n}\r\n.altrp-field-select2 .altrp-field-select2__control {\r\n  min-height: 14px;\r\n}\r\n`)\r\n\r\nconst AltrpFieldContainer = styled.div`\r\n  ${({settings: {content_label_position_type}}) => {\r\n  switch (content_label_position_type) {\r\n    case \"left\": {\r\n      return \"display: flex\";\r\n    }\r\n    case \"right\": {\r\n      return \"display:flex;flex-direction:row-reverse;justify-content:flex-end;\";\r\n    }\r\n  }\r\n  return \"\";\r\n}}\r\n`;\r\n\r\nclass InputMultiSelectWidget extends Component {\r\n  timeInput = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onItemSelect = this.onItemSelect.bind(this)\r\n    props.element.component = this;\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    this.defaultValue =\r\n      this.getContentDefaultValue() || []\r\n    if (!_.isArray(this.defaultValue)) {\r\n      this.defaultValue = [];\r\n    }\r\n    this.state = {\r\n      settings: {...props.element.getSettings()},\r\n      value: this.defaultValue,\r\n      options: parseOptionsFromSettings(\r\n        props.element.getSettings(\"content_options\")\r\n      ),\r\n      paramsForUpdate: null,\r\n    };\r\n    this.popoverProps = {\r\n      usePortal: true,\r\n      position: 'bottom',\r\n      minimal: props.element.getResponsiveSetting('minimal'),\r\n      // isOpen:true ,\r\n      portalClassName: `altrp-portal altrp-portal_input-select altrp-portal${this.props.element.getId()} ${this.state.widgetDisabled ? 'pointer-event-none' : ''}`,\r\n      portalContainer: window.EditorFrame ? window.EditorFrame.contentWindow.document.body : document.body,\r\n    };\r\n\r\n    if(! isEditor()){\r\n      // this.popoverProps.boundary = '#front-app'\r\n    }\r\n    this.altrpSelectRef = React.createRef();\r\n    if (this.getContentDefaultValue()) {\r\n      this.dispatchFieldValueToStore(this.getContentDefaultValue());\r\n    }\r\n  }\r\n\r\n\r\n  getContentDefaultValue(){\r\n    let value = this.getContent(\"content_default_value\", true)\r\n    if(_.isString(value) && value.indexOf(',') !== -1){\r\n      value = value.split(',')\r\n    }\r\n    return value;\r\n  }\r\n\r\n\r\n  /**\r\n   * Чистит значение\r\n   */\r\n  clearValue() {\r\n    let value = [];\r\n    this.onChange(value);\r\n    this.dispatchFieldValueToStore(value, true);\r\n  }\r\n\r\n\r\n  /**\r\n   * Загрузка виджета\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  async _componentDidMount(prevProps, prevState) {\r\n    if (this.props.element.getSettings(\"content_options\")) {\r\n      let options = parseOptionsFromSettings(\r\n        this.props.element.getSettings(\"content_options\")\r\n      );\r\n\r\n      this.setState(state => ({...state, options}));\r\n    } else if (\r\n      this.state.settings.model_for_options\r\n    ) {\r\n      let options = await new Resource({route: this.getRoute()}).getAll();\r\n      options = !_.isArray(options) ? options.data : options;\r\n      options = _.isArray(options) ? options : [];\r\n      this.setState(state => ({...state, options, optionsUpdated: true}));\r\n    }\r\n    let value = this.state.value;\r\n\r\n\r\n    /**\r\n     * Если модель обновилась при смене URL\r\n     */\r\n    if (\r\n      prevProps &&\r\n      ! prevProps.currentModel.getProperty(\"altrpModelUpdated\") &&\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\r\n    ) {\r\n      value = this.getContentDefaultValue();\r\n      this.setState(\r\n        state => ({...state, value, contentLoaded: true}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    if (\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\") &&\r\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\r\n      !this.state.contentLoaded\r\n    ) {\r\n      value = this.getContentDefaultValue();\r\n      this.setState(\r\n        state => ({...state, value, contentLoaded: true}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    if (this.state.value !== value) {\r\n      this.setState(\r\n        state => ({...state, value}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получить url для запросов\r\n   */\r\n  getRoute() {\r\n    let url = this.props.element.getSettings(\"model_for_options\");\r\n\r\n    if (url.indexOf(\"/\") === -1) {\r\n      return `/ajax/models/${url}_options`;\r\n    }\r\n    if (url.indexOf(\"{{\") !== -1) {\r\n      url = replaceContentWithData(url);\r\n    }\r\n    return url;\r\n  }\r\n\r\n  onQueryChange = async (s)=>{\r\n    const searchActions = this.props.element.getSettings(\"s_actions\");\r\n    if(_.isEmpty(searchActions)){\r\n      return\r\n    }\r\n    if(this.searchOnPending){\r\n      return\r\n    }\r\n    this.searchOnPending = true;\r\n    try{\r\n\r\n      const actionsManager = (\r\n        await import(\r\n          /* webpackChunkName: 'ActionsManager' */\r\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n          )\r\n      ).default;\r\n      this.props.element.getCurrentModel().setProperty('altrp_search', s);\r\n      await actionsManager.callAllWidgetActions(\r\n        this.props.element.getIdForAction(),\r\n        \"search\",\r\n        searchActions,\r\n        this.props.element\r\n      );\r\n    } catch (e) {\r\n      console.error(e);\r\n    }finally{\r\n      this.searchOnPending = false;\r\n    }\r\n  }\r\n  /**\r\n   * Обновление виджета\r\n   */\r\n  async _componentDidUpdate(prevProps, prevState) {\r\n    const {content_options, model_for_options} = this.state.settings;\r\n    if (\r\n      prevProps &&\r\n      !prevProps.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\r\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\")\r\n    ) {\r\n      let value = this.getContentDefaultValue();\r\n      this.setState(\r\n        state => ({...state, value, contentLoaded: true}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n    }\r\n    if (\r\n      this.props.element.getSettings(\"model_for_options\")\r\n    ) {\r\n      if (\r\n        !(\r\n          this.state.settings.model_for_options ===\r\n          prevProps.element.getSettings(\"model_for_options\")\r\n        )\r\n      ) {\r\n        let model_for_options = prevProps.element.getSettings(\r\n          \"model_for_options\"\r\n        );\r\n        let options = await new Resource({route: this.getRoute()}).getAll();\r\n        options = !_.isArray(options) ? options.data : options;\r\n        options = _.isArray(options) ? options : [];\r\n        this.setState(state => ({...state, options, model_for_options}));\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Если обновилось хранилище данных формы, currentDataStorage или модель, то получаем новые опции c сервера\r\n     */\r\n    if (\r\n      this.props.formsStore !== prevProps.formsStore ||\r\n      this.props.currentModel !== prevProps.currentModel ||\r\n      this.props.currentDataStorage !== prevProps.currentDataStorage\r\n    ) {\r\n      this.updateOptions();\r\n    }\r\n    // if (content_options && !model_for_options) {\r\n    //   let options = parseOptionsFromSettings(content_options);\r\n    //   if (!_.isEqual(options, this.state.options)) {\r\n    //     this.setState(state => ({...state, options}));\r\n    //   }\r\n    // }\r\n    this.updateValue(prevProps);\r\n  }\r\n\r\n  /**\r\n   * Обновить значение если нужно\r\n   * @param {{}} prevProps\r\n   */\r\n  updateValue(prevProps) {\r\n    if (isEditor()) {\r\n      return;\r\n    }\r\n    let content_calculation = this.props.element.getSettings(\r\n      \"content_calculation\"\r\n    );\r\n    const altrpforms = this.props.formsStore;\r\n    const fieldName = this.props.element.getFieldId();\r\n    const formId = this.props.element.getFormId();\r\n    if (!content_calculation) {\r\n      /**\r\n       * Обновить значение, если formsStore изменилось из другого компонента\r\n       */\r\n      const path = `${formId}.${fieldName}`;\r\n      if (\r\n        this.props.formsStore !== prevProps.formsStore &&\r\n        _.get(altrpforms, path) !== this.state.value\r\n      ) {\r\n        this.setState(state => ({\r\n          ...state,\r\n          value: _.get(altrpforms, path)\r\n        }));\r\n      }\r\n      return;\r\n    }\r\n\r\n    const prevContext = {};\r\n\r\n    const altrpdata = this.props.currentDataStorage.getData();\r\n    const altrpmodel = this.props.currentModel.getData();\r\n    const altrpuser = this.props.currentUser.getData();\r\n    const altrppagestate = this.props.altrpPageState.getData();\r\n    const altrpresponses = this.props.altrpresponses.getData();\r\n    const altrpmeta = this.props.altrpMeta.getData();\r\n    const context = this.props.element.getCurrentModel().getData();\r\n    if (content_calculation.indexOf(\"altrpdata\") !== -1) {\r\n      context.altrpdata = altrpdata;\r\n      if (!altrpdata.currentDataStorageLoaded) {\r\n        prevContext.altrpdata = altrpdata;\r\n      } else {\r\n        prevContext.altrpdata = prevProps.currentDataStorage.getData();\r\n      }\r\n    }\r\n    if (content_calculation.indexOf(\"altrpforms\") !== -1) {\r\n      context.altrpforms = altrpforms;\r\n      /**\r\n       * Не производим вычисления, если изменилось текущее поле\r\n       */\r\n      if (`${formId}.${fieldName}` === altrpforms.changedField) {\r\n        prevContext.altrpforms = altrpforms;\r\n      } else {\r\n        prevContext.altrpforms = prevProps.formsStore;\r\n      }\r\n    }\r\n    if (content_calculation.indexOf(\"altrpmodel\") !== -1) {\r\n      context.altrpmodel = altrpmodel;\r\n      prevContext.altrpmodel = prevProps.currentModel.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\r\n      context.altrpuser = altrpuser;\r\n      prevContext.altrpuser = prevProps.currentUser.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\r\n      context.altrpuser = altrpuser;\r\n      prevContext.altrpuser = prevProps.currentUser.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrppagestate\") !== -1) {\r\n      context.altrppagestate = altrppagestate;\r\n      prevContext.altrppagestate = prevProps.altrpPageState.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpmeta\") !== -1) {\r\n      context.altrpmeta = altrpmeta;\r\n      prevContext.altrpmeta = prevProps.altrpMeta.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpresponses\") !== -1) {\r\n      context.altrpresponses = altrpresponses;\r\n      prevContext.altrpresponses = prevProps.altrpresponses.getData();\r\n    }\r\n\r\n    if (content_calculation.indexOf(\"altrpstorage\") !== -1) {\r\n      context.altrpstorage = getDataFromLocalStorage(\"altrpstorage\", {});\r\n    }\r\n\r\n    if (\r\n      _.isEqual(prevProps.currentDataStorage, this.props.currentDataStorage) &&\r\n      _.isEqual(prevProps.currentUser, this.props.currentUser) &&\r\n      _.isEqual(prevProps.formsStore, this.props.formsStore) &&\r\n      _.isEqual(prevProps.altrpPageState, this.props.altrpPageState) &&\r\n      _.isEqual(prevProps.altrpMeta, this.props.altrpMeta) &&\r\n      _.isEqual(prevProps.altrpresponses, this.props.altrpresponses) &&\r\n      _.isEqual(prevProps.currentModel, this.props.currentModel)\r\n    ) {\r\n      return;\r\n    }\r\n    if (\r\n      !_.isEqual(prevProps.formsStore, this.props.formsStore) &&\r\n      `${formId}.${fieldName}` === altrpforms.changedField\r\n    ) {\r\n      return;\r\n    }\r\n    let value = \"\";\r\n    try {\r\n      content_calculation = content_calculation\r\n        .replace(/}}/g, \"')\")\r\n        .replace(/{{/g, \"_.get(context, '\");\r\n      value = eval(content_calculation);\r\n      if (value === this.state.value) {\r\n        return;\r\n      }\r\n      this.setState(\r\n        state => ({...state, value}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n    } catch (e) {\r\n      console.error(\r\n        \"Evaluate error in Input: '\" + e.message + \"'\",\r\n        this.props.element.getId()\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновляет опции для селекта при обновлении данных, полей формы\r\n   */\r\n  async updateOptions() {\r\n    {\r\n      let formId = this.props.element.getFormId();\r\n      let paramsForUpdate = this.props.element.getSettings(\"params_for_update\");\r\n      let formData = _.get(this.props.formsStore, [formId], {});\r\n      paramsForUpdate = parseParamsFromString(\r\n        paramsForUpdate,\r\n        new AltrpModel(formData)\r\n      );\r\n      /**\r\n       * Сохраняем параметры запроса, и если надо обновляем опции\r\n       */\r\n      let options = [...this.state.options];\r\n      if (!_.isEqual(paramsForUpdate, this.state.paramsForUpdate)) {\r\n        if (!_.isEmpty(paramsForUpdate)) {\r\n          if (this.props.element.getSettings(\"params_as_filters\", false)) {\r\n            paramsForUpdate = JSON.stringify(paramsForUpdate);\r\n            options = await new Resource({\r\n              route: this.getRoute()\r\n            }).getQueried({filters: paramsForUpdate});\r\n          } else {\r\n            options = await new Resource({route: this.getRoute()}).getQueried(\r\n              paramsForUpdate\r\n            );\r\n          }\r\n          options = !_.isArray(options) ? options.data : options;\r\n          options = _.isArray(options) ? options : [];\r\n        } else if (this.state.paramsForUpdate) {\r\n          options = await new Resource({route: this.getRoute()}).getAll();\r\n          options = !_.isArray(options) ? options.data : options;\r\n          options = _.isArray(options) ? options : [];\r\n        }\r\n        this.setState(state => ({\r\n          ...state,\r\n          paramsForUpdate,\r\n          options\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Изменение значения в виджете\r\n   * @param e\r\n   */\r\n  onChange = (e) => {\r\n    let value = \"\";\r\n    let valueToDispatch;\r\n    const settings = this.props.element.getSettings();\r\n    value = e?.target?.value || [];\r\n\r\n    if (e && e.value) {\r\n      value = e.value;\r\n    }\r\n\r\n    if (_.isArray(e)) {\r\n      value = _.cloneDeep(e);\r\n    }\r\n    if (\r\n      this.props.element.getSettings(\"content_options_nullable\") &&\r\n      e &&\r\n      e.value === \"<null>\"\r\n    ) {\r\n      value = null;\r\n    }\r\n\r\n    this.setState(\r\n      state => ({\r\n        ...state,\r\n        value\r\n      }),\r\n      () => {\r\n\r\n        this.dispatchFieldValueToStore(\r\n          valueToDispatch !== undefined ? valueToDispatch : value,\r\n          true\r\n        );\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param item\r\n   * @param idx\r\n   */\r\n  handleTagRemove = (item, idx)=>{\r\n    let value = this.getValue()\r\n    value = [...value]\r\n    value.splice(idx, 1)\r\n    value = value.map(v=>v.value)\r\n    this.dispatchFieldValueToStore(value, true)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param value\r\n   * @returns {Promise<void>}\r\n   */\r\n  async onItemSelect(value) {\r\n    const currentValue = this.getValue();\r\n    if (value.value) {\r\n      value = value.value;\r\n    }\r\n    const options = [...this.state.options];\r\n    const element = this.props.element;\r\n    if (!options.find(option => option.value == value)) {\r\n      const create_url = element.getResponsiveSetting('create_url');\r\n      if (element.getResponsiveSetting('create') && create_url) {\r\n        this.setState(state => ({...state, widgetDisabled: true}))\r\n        let params = element.getResponsiveSetting('create_params') || '';\r\n        params = params.replace(/\\{\\{__query__\\}\\}/g, value);\r\n        params = parseParamsFromString(params, element.getCurrentModel(), true)\r\n        const resource = new Resource({route: create_url});\r\n        try {\r\n          let res = await resource.post(params)\r\n          if (res.data) {\r\n            res = res.data\r\n          }\r\n          const label_path = element.getResponsiveSetting('label_path')\r\n          if(label_path){\r\n            res.label = _.get(res, label_path, res.id);\r\n          }\r\n          const value_path = element.getResponsiveSetting('value_path')\r\n          if(value_path){\r\n            res.value = _.get(res, value_path, res.id);\r\n          }\r\n          options.unshift(res)\r\n        } catch (e) {\r\n          console.error(e);\r\n        } finally {\r\n          this.setState(state => ({...state, widgetDisabled: false}))\r\n        }\r\n      } else {\r\n        options.unshift(arguments[0])\r\n      }\r\n    }\r\n\r\n    if(! options.find(o=>o.value == value)){\r\n      value = currentValue\r\n    } else if(! currentValue.find(v => v.value == value)){\r\n      value = currentValue.concat({value})\r\n    }\r\n    value = value.map(v => v.value)\r\n    this.setState(state => ({\r\n        ...state,\r\n        options,\r\n        value\r\n      }),\r\n      () => {\r\n        /**\r\n         * Обновляем хранилище\r\n         */\r\n        this.dispatchFieldValueToStore(\r\n          value,\r\n          true\r\n        );\r\n      })\r\n  }\r\n\r\n\r\n  /**\r\n   * получить опции\r\n   */\r\n  getOptions() {\r\n    let options = [...this.state.options];\r\n    const optionsDynamicSetting = this.props.element.getDynamicSetting(\r\n      \"content_options\"\r\n    );\r\n    const content_options = this.props.element.getResponsiveSetting('content_options');\r\n    const model_for_options = this.props.element.getResponsiveSetting('model_for_options');\r\n    if(_.isString(content_options)\r\n      && content_options.indexOf('{{') === 0\r\n      && ! model_for_options){\r\n      options = getDataByPath(content_options.replace('{{', '').replace('}}', ''))\r\n      if( ! _.isArray(options)){\r\n        options = [];\r\n      }\r\n    }\r\n    if (optionsDynamicSetting) {\r\n      options = convertData(optionsDynamicSetting, options);\r\n    }\r\n    if (!this.props.element.getSettings(\"sort_default\")) {\r\n      options = _.sortBy(options, o => o && (o.label ? o.label.toString() : o));\r\n      if (this.props.element.getSettings(\"options_sorting\") === 'desc') {\r\n        options = _.reverse(options)\r\n      }\r\n    }\r\n    let value = this.getValue()\r\n    options = options.filter(o => {\r\n      return ! value.find(v => v.value == o.value)\r\n    })\r\n    return options;\r\n  }\r\n\r\n  /**\r\n   * Передадим значение в хранилище формы\r\n   * @param {*} value\r\n   * @param {boolean} userInput true - имзенилось пользователем\r\n   */\r\n  dispatchFieldValueToStore = async (value, userInput = false) => {\r\n    let formId = this.props.element.getFormId();\r\n    let fieldName = this.props.element.getFieldId();\r\n    if (fieldName.indexOf(\"{{\") !== -1) {\r\n      fieldName = replaceContentWithData(fieldName);\r\n    }\r\n    if (_.isObject(this.props.appStore) && fieldName && formId) {\r\n      this.props.appStore.dispatch(\r\n        changeFormFieldValue(fieldName, value, formId, userInput)\r\n      );\r\n      if (userInput) {\r\n        const change_actions = this.props.element.getSettings(\"change_actions\");\r\n\r\n        if (change_actions && !isEditor()) {\r\n          const actionsManager = (\r\n            await import(\r\n              /* webpackChunkName: 'ActionsManager' */\r\n              \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n              )\r\n          ).default;\r\n          await actionsManager.callAllWidgetActions(\r\n            this.props.element.getIdForAction(),\r\n            \"change\",\r\n            change_actions,\r\n            this.props.element\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Взовращает имя для атрибута name\r\n   * @return {string}\r\n   */\r\n  getName() {\r\n    return `${this.props.element.getFormId()}[${this.props.element.getFieldId()}]`;\r\n  }\r\n\r\n  escapeRegExpChars(text) {\r\n    return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @returns {[]}\r\n   */\r\n  getValue = () => {\r\n    let value;\r\n    let formId = this.props.element.getFormId();\r\n    let fieldName = this.props.element.getFieldId();\r\n\r\n    if (isEditor()) {\r\n      value = this.state.value;\r\n    } else {\r\n      if(this.props.element.getSettings('model_for_options') && ! this.state.optionsUpdated){\r\n        return [];\r\n      }\r\n      value = _.get(appStore.getState().formsStore, `${formId}`, '')\r\n      value = _.get(value, fieldName, '')\r\n    }\r\n    if (value && !_.isArray(value)) {\r\n      value = [value];\r\n    }\r\n    if (!value) {\r\n      value = [];\r\n    }\r\n    let options = [...this.state.options]\r\n    value = value.map(v => {\r\n      let option = options.find(o => {\r\n        return o.value == v;\r\n      })\r\n      if (! option) {\r\n        return {value: v, label: v}\r\n      }\r\n      return  option;\r\n    })\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * @return {*}\r\n   */\r\n  getCurrentLabel() {\r\n    const value = this.getValue()\r\n    const options = this.getOptions() || []\r\n    return options.find(option => option.value == value)?.label || ''\r\n  }\r\n\r\n  /**\r\n   * Обработка клика по кнопке\r\n   * @return {Promise<void>}\r\n   */\r\n  onClick = async () => {\r\n    if (this.props.element.getSettings(\"click_actions\", []) && !isEditor()) {\r\n      const actionsManager = (\r\n        await import(\r\n          /* webpackChunkName: 'ActionsManager' */\r\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n          )\r\n      ).default;\r\n      await actionsManager.callAllWidgetActions(\r\n        this.props.element.getIdForAction(),\r\n        \"click\",\r\n        this.props.element.getSettings(\"click_actions\", []),\r\n        this.props.element\r\n      );\r\n    }\r\n  }\r\n  /**\r\n   * Создаем элемент из поисковой строки\r\n   * @param title\r\n   * @return {{label, value}}\r\n   */\r\n  createNewItemFromQuery = (title) => {\r\n    return {label: title, value: title};\r\n  }\r\n  /**\r\n   * отрисовываем создание нового элемента\r\n   * @param query\r\n   * @param active\r\n   * @param handleClick\r\n   * @return {JSX.Element|null}\r\n   */\r\n\r\n  createNewItemRenderer = (query,\r\n                           active,\r\n                           handleClick) => {\r\n    /**\r\n     * @type {FrontElement}\r\n     */\r\n    const {element} = this.props;\r\n\r\n    if (!element.getResponsiveSetting('create')) {\r\n      return null;\r\n    }\r\n    const {options} = this.state;\r\n    if (options.find(option => {\r\n      let label = (option.label || '') + '';\r\n      label = label.toLowerCase();\r\n      query = (query || '') + '';\r\n      return query === label;\r\n    })) {\r\n      return null\r\n    }\r\n    let text = element.getResponsiveSetting('create_text') || ''\r\n    text = text.replace('{{__query__}}', query)\r\n    text = replaceContentWithData(text, element.getCurrentModel().getData())\r\n    return (\r\n      <MenuItem\r\n        icon=\"add\"\r\n        text={text}\r\n        active={active}\r\n        onClick={handleClick}\r\n        shouldDismissPopover={false}\r\n      />)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {\r\n   *   {\r\n   *     label: string\r\n   *     value: string\r\n   *   }\r\n   * }value\r\n   * @returns {string}\r\n   */\r\n  tagRender(value) {\r\n    return value.label || ''\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param item1\r\n   * @param item2\r\n   * @returns {boolean}\r\n   */\r\n  itemsEqual(item1, item2) {\r\n    return item1?.value == item2?.value\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  handleClear = ()=>{\r\n    this.dispatchFieldValueToStore([], true)\r\n  }\r\n  render() {\r\n    const element = this.props.element;\r\n    let label = null;\r\n    const settings = this.props.element.getSettings();\r\n    const {\r\n      label_icon\r\n    } = settings;\r\n\r\n    let classLabel = \"\";\r\n    let styleLabel = {};\r\n    const content_label_position_type = this.props.element.getResponsiveSetting(\r\n      \"content_label_position_type\"\r\n    ) || 'top';\r\n    switch (content_label_position_type) {\r\n      case \"top\":\r\n        styleLabel = {\r\n          marginBottom: this.state.settings.label_style_spacing\r\n            ? this.state.settings.label_style_spacing.size +\r\n            this.state.settings.label_style_spacing.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n      case \"bottom\":\r\n        styleLabel = {\r\n          marginTop: this.state.settings.label_style_spacing\r\n            ? this.state.settings.label_style_spacing.size +\r\n            this.state.settings.label_style_spacing.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n      case \"left\":\r\n        styleLabel = {\r\n          marginRight: this.state.settings.label_style_spacing\r\n            ? this.state.settings.label_style_spacing.size +\r\n            this.state.settings.label_style_spacing.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"altrp-field-label-container-left\";\r\n        // this.label.current.classList.add(\"hello\")\r\n\r\n        break;\r\n      case \"absolute\":\r\n        styleLabel = {\r\n          position: \"absolute\",\r\n          zIndex: 2\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n    }\r\n    const content_label = this.getContent('content_label')\r\n    if (content_label) {\r\n      label = (\r\n        <div\r\n          className={\"altrp-field-label-container \" + classLabel}\r\n          style={styleLabel}\r\n        >\r\n          <label\r\n            className={`altrp-field-label ${this.state.settings.content_required\r\n              ? \"altrp-field-label--required\"\r\n              : \"\"\r\n            }`}\r\n          >\r\n            {content_label}\r\n          </label>\r\n          {label_icon && label_icon.assetType && (\r\n            <span className=\"altrp-label-icon\">\r\n              {renderAssetIcon(label_icon)}\r\n            </span>\r\n          )}\r\n        </div>\r\n      );\r\n    } else {\r\n      label = null;\r\n    }\r\n\r\n    const placeholder = element.getResponsiveSetting('content_placeholder');\r\n    const content_readonly = element.getResponsiveSetting('content_readonly');\r\n    const no_results_text = element.getResponsiveSetting('no_results_text');\r\n\r\n    const inputProps = {\r\n    };\r\n\r\n    let input = null;\r\n\r\n    let itemsOptions = this.getOptions();\r\n    const position_css_classes = element.getResponsiveSetting('position_css_classes', '', '')\r\n    const position_css_id = this.getContent('position_css_id')\r\n    const selectedItems = this.getValue()\r\n    const clearButton =\r\n      selectedItems.length > 0 ? <Button icon=\"cross\" minimal={true} className=\"altrp-clear\" onClick={this.handleClear} /> : undefined;\r\n    input = (\r\n      <MultiSelect\r\n        placeholder={placeholder}\r\n        inputProps={inputProps}\r\n        onQueryChange={this.onQueryChange}\r\n        itemsEqual={this.itemsEqual}\r\n        disabled={content_readonly}\r\n        popoverProps={this.popoverProps}\r\n        createNewItemFromQuery={element.getResponsiveSetting('create') ? this.createNewItemFromQuery : null}\r\n        createNewItemRenderer={this.createNewItemRenderer}\r\n        itemRenderer={(item, {handleClick, modifiers, query}) => {\r\n          if (!modifiers.matchesPredicate) {\r\n            return null;\r\n          }\r\n          return <MenuItem\r\n            text={item.label}\r\n            key={item.value}\r\n            disabled={modifiers.disabled || item.disabled}\r\n            onClick={handleClick}\r\n          />\r\n        }}\r\n        itemPredicate={(query, item) => {\r\n          if (query === undefined || query.length === 0) {\r\n            return true\r\n          }\r\n          return `${item?.label?.toLowerCase() || ''}`.indexOf(query.toLowerCase()) >= 0;\r\n        }}\r\n        items={itemsOptions}\r\n        // itemRenderer={({label})=>label}\r\n        noResults={<MenuItem disabled={true} text={no_results_text}/>}\r\n        name={this.getName()}\r\n        onItemSelect={this.onItemSelect}\r\n        selectedItems={selectedItems}\r\n        tagInputProps={{\r\n          onRemove: this.handleTagRemove,\r\n          rightElement: clearButton,\r\n          // tagProps: getTagProps,\r\n        }}\r\n        id={position_css_id}\r\n        tagRenderer={this.tagRender}\r\n        className={`${position_css_classes} ${this.state.widgetDisabled ? 'pointer-event-none' : ''}`}\r\n      >\r\n      </MultiSelect>\r\n    );\r\n\r\n    return (\r\n      <AltrpFieldContainer\r\n        settings={settings}\r\n        className={\"altrp-field-container \"}\r\n      >\r\n        {content_label_position_type === \"top\" ? label : \"\"}\r\n        {content_label_position_type === \"left\" ? label : \"\"}\r\n        {content_label_position_type === \"right\" ? label : \"\"}\r\n        {content_label_position_type === \"absolute\" ? label : \"\"}\r\n        {/* .altrp-field-label-container */}\r\n        {input}\r\n        {content_label_position_type === \"bottom\" ? label : \"\"}\r\n      </AltrpFieldContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputMultiSelectWidget;\r\n","const {\n  convertData,\n  isEditor,\n  parseOptionsFromSettings,\n  parseParamsFromString,\n  replaceContentWithData,\n  renderAssetIcon,\n  renderAsset,\n  getDataByPath,\n  Resource,\n  getDataFromLocalStorage\n} = window.altrpHelpers;\nimport {changeFormFieldValue} from \"../../../../../front-app/src/js/store/forms-data-storage/actions\";\nimport AltrpModel from \"../../classes/AltrpModel\";\nconst Button = window.altrpLibs.Blueprint.Button;\nconst MenuItem = window.altrpLibs.Blueprint.MenuItem;\nconst Select = window.altrpLibs.BlueprintSelect.Select;\n\n(window.globalDefaults = window.globalDefaults || []).push(`\n.bp3-popover {\n  width: 100%;\n}\n\nul.bp3-menu {\n  min-width: initial;\n}\n\n.altrp-field {\n  border-style: solid;\n  width: 100%;\n}\n.altrp-field-file{\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n.altrp-portal_input-select .bp3-menu{\n  max-height: 300px;\n  overflow: auto;\n}\n.altrp-widget_input-select .bp3-icon_right{\n    margin:  0 0 0 7px;\n}\n.bp3-icon_text-widget img{\n  width: 16px;\n  height: 16px;\n  object-fit: contain;\n  pointer-events: none;\n}\n.bp3-icon_text-widget svg{\n  width: 16px;\n  height: 16px;\n  pointer-events: none;\n}\n.altrp-widget_input-select.altrp-widget_input-select .bp3-icon:first-child:last-child{\n   margin: 0;\n}\n.altrp-widget_input-select .bp3-popover-wrapper{\n  overflow: hidden;\n  display: flex;\n}\n.altrp-widget_input-select .bp3-popover-target > div{\n  width: 100%;\n}\n.altrp-widget_input-select .bp3-popover-target{\n  display: flex;\n  flex-grow: 1;\n}\n.altrp-widget_input-select .bp3-popover-target .bp3-button{\n  width: 100%;\n  justify-content: flex-end;\n  /*flex-direction: row-reverse;*/\n\n}\n.altrp-widget_input-select .bp3-popover-target .bp3-button .bp3-button-text{\n  flex-grow: 1;\n}\n.altrp-label-icon svg,\n.altrp-label-icon img {\n  width: 20px;\n}\n.altrp-label-icon svg{\n  height: 20px;\n}\n.altrp-field-file__field{\n  display: none;\n}\n.altrp-field-file__placeholder{\n  display: none;\n}\n.altrp-field-file_empty .altrp-field-file__placeholder{\n  display: block;\n  padding: 10px 20px;\n  border: none;\n  cursor: pointer;\n  background-color: rgb(52,59,76);\n  color: #fff;\n}\n.input-clear-btn {\n  background: transparent;\n  padding: 0;\n  position: absolute;\n  bottom: calc(50% - 7px);\n  right: 15px;\n  display: none;\n}\n.input-clear-btn:hover {\n  font-weight: bold;\n}\n.altrp-field:hover + .input-clear-btn, .input-clear-btn:hover {\n  display: block;\n}\n.altrp-input-wrapper, .altrp-field-select2 {\n  position: relative;\n  flex-grow: 1;\n}\n.altrp-field-label--required::after {\n  content: \"*\";\n  color: red;\n  font-size: inherit;\n  padding-left: 10px;\n}\n.altrp-field-label {\n  font-size: 16px;\n  font-family: \"Open Sans\";\n  line-height: 1.5;\n  letter-spacing: 0;\n}\n.altrp-field-select2__single-value, .altrp-field {\n  font-size: 16px;\n  font-family: \"Open Sans\";\n  line-height: 1.5;\n  letter-spacing: 0;\n}\n.altrp-field-select2__control, .altrp-field {\n  text-align: left;\n  padding-top: 2px;\n  padding-right: 2px;\n  padding-bottom: 2px;\n  padding-left: 2px;\n  border-width: 1px;\n}\n.altrp-field-select2__control:hover{\n  border-width: 1px;\n}\n.altrp-field-container {\n  margin: 0;\n}\n.altrp-field::placeholder, .altrp-field-select2__placeholder {\n  font-size: 13px;\n  font-family: \"Open Sans\";\n  line-height: 1.5;\n  letter-spacing: 0;\n}\n.altrp-image-select {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n.altrp-image-select img {\n  flex-grow: 1;\n  object-fit: contain;\n}\n.altrp-field {\n  overflow: hidden;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n.altrp-field.active {\n  border-color: lightcoral;\n}\n.altrp-field-label {\n  text-align: center;\n  display: block;\n}\n.altrp-pagination__select-size .altrp-field-select2__single-value {\n  font-size: 14px;\n}\n.altrp-pagination__select-size .altrp-field-select2__indicator-separator {\n  display: none;\n}\n.altrp-pagination__select-size .altrp-field-select2__indicator {\n  align-items: center;\n}\n.altrp-pagination__select-size .altrp-field-select2__control {\n  width: 100px;\n  min-height: 32px;\n  padding: 0;\n  border-radius: 0;\n  outline: none;\n  border-color: rgb(142,148,170);\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  box-shadow: none;\n}\n.altrp-pagination__select-size .altrp-field-select2__control input {\n  border: none;\n}\n.altrp-field-select2 {\n  position: relative;\n  box-sizing: border-box;\n  pointer-events: none;\n}\n.altrp-field-select2__control {\n  webkit-align-items: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  background-color: hsl(0,0%,100%);\n  border-color: hsl(0,0%,80%);\n  border-style: solid;\n  border-width: 1px;\n  cursor: default;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-wrap: wrap;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  -webkit-box-pack: justify;\n  -webkit-justify-content: space-between;\n  -ms-flex-pack: justify;\n  justify-content: space-between;\n  min-height: 38px;\n  outline: 0 !important;\n  position: relative;\n  -webkit-transition: all 100ms;\n  transition: all 100ms;\n  box-sizing: border-box;\n}\n.altrp-field-select2__value-container {\n  -webkit-align-items: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex: 1;\n  -ms-flex: 1;\n  flex: 1;\n  -webkit-flex-wrap: wrap;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  padding: 2px 8px;\n  -webkit-overflow-scrolling: touch;\n  position: relative;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n.altrp-field-select2__single-value {\n  color: hsl(0,0%,20%);\n  margin-left: 2px;\n  margin-right: 2px;\n  max-width: calc(100% - 8px);\n  overflow: hidden;\n  position: absolute;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  top: 50%;\n  -webkit-transform: translateY(-50%);\n  -ms-transform: translateY(-50%);\n  transform: translateY(-50%);\n  box-sizing: border-box;\n}\n.altrp-field-select2__indicators {\n  -webkit-align-items: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-align-self: stretch;\n  -ms-flex-item-align: stretch;\n  align-self: stretch;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-shrink: 0;\n  -ms-flex-negative: 0;\n  flex-shrink: 0;\n  box-sizing: border-box;\n}\n.altrp-field-select2__indicator-separator {\n  -webkit-align-self: stretch;\n  -ms-flex-item-align: stretch;\n  align-self: stretch;\n  background-color: hsl(0,0%,80%);\n  margin-bottom: 8px;\n  margin-top: 8px;\n  width: 1px;\n  box-sizing: border-box;\n}\n.altrp-field-select2__indicator {\n  color: hsl(0,0%,80%);\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  padding: 8px;\n  -webkit-transition: color 150ms;\n  transition: color 150ms;\n  box-sizing: border-box;\n  justify-content: center;\n  align-items: center;\n}\n.tba-placeholder {\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  font-weight: bold;\n}\n.altrp-field-subgroup {\n  display: flex;\n  flex-wrap: wrap;\n}\n.altrp-field-option {\n  display: flex;\n  padding: 10px;\n}\n.altrp-field-option__label {\n  cursor: pointer;\n}\ntextarea.altrp-field {\n  display: block;\n}\n.altrp-table__filter-select .altrp-field-select2__placeholder {\n  white-space: nowrap;\n}\n.altrp-table__filter-select .altrp-field-select2__single-value {\n  font-size: 14px;\n}\n.altrp-table__filter-select .altrp-field-select2__indicator-separator {\n  display: none;\n}\n.altrp-table__filter-select .altrp-field-select2__indicator {\n  align-items: center;\n}\n.altrp-table__filter-select .altrp-field-select2__control {\n  width: 100%;\n  min-height: 19px;\n  padding: 0;\n  border-radius: 0;\n  outline: none;\n  border-color: rgb(142, 148, 170);\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  box-shadow: none;\n}\n.altrp-table__filter-select .altrp-field-select2__control input {\n  border: none;\n}\n.altrp-table__filter-select .altrp-field-select2__value-container {\n  padding-top: 0;\n  padding-bottom: 0;\n  line-height: 13px;\n}\n.altrp-field-required {\n  color: red;\n  font-size: 18px;\n  padding-left: 10px;\n}\n.altrp-field-container-label {\n  display: flex;\n  flex-direction: row;\n}\n\n.altrp-field-label-container-left {\n  display: flex;\n  align-items: center;\n}\n\n.altrp-field-label-container {\n  display: inline-flex;\n  align-items: center;\n}\n.altrp-field-select2__indicator.altrp-field-select2__dropdown-indicator {\n  padding: 0 8px;\n  max-height: 14px;\n  overflow: hidden;\n}\n.altrp-field-select2 .altrp-field-select2__value-container {\n  padding: 0px 8px;\n}\n.altrp-field-select2 .css-b8ldur-Input {\n  padding-bottom: 0px;\n  padding-top: 0px;\n  margin: 0 2px;\n}\n.altrp-field-select2 .altrp-field-select2__control {\n  min-height: 14px;\n}\n`)\n\nconst AltrpFieldContainer = styled.div`\n  ${({settings: {content_label_position_type}}) => {\n  switch (content_label_position_type) {\n    case \"left\": {\n      return \"display: flex;\";\n    }\n    case \"right\": {\n      return \"display:flex;flex-direction:row-reverse;justify-content:flex-end;\";\n    }\n  }\n  return \"\";\n}}\n\n  & .bp3-popover-wrapper {\n    width: 100%\n  }\n`;\n\nclass InputSelectWidget extends Component {\n  timeInput = null;\n\n  constructor(props) {\n    super(props);\n    props.element.component = this;\n    if (window.elementDecorator) {\n      window.elementDecorator(this);\n    }\n    this.defaultValue =\n      this.getContent(\"content_default_value\") ||\n      (this.valueMustArray() ? [] : \"\");\n    if (this.valueMustArray() && !_.isArray(this.defaultValue)) {\n      this.defaultValue = [];\n    }\n    this.state = {\n      settings: {...props.element.getSettings()},\n      value: this.defaultValue,\n      options: parseOptionsFromSettings(\n        props.element.getSettings(\"content_options\")\n      ),\n      paramsForUpdate: null,\n    };\n\n    this.popoverProps = {\n      usePortal: true,\n      targetClassName: \"altrp-select-popover\",\n      position: 'bottom',\n      minimal: props.element.getResponsiveSetting('minimal'),\n      // isOpen:true ,\n      portalClassName: `altrp-portal altrp-portal_input-select altrp-portal${this.props.element.getId()} ${this.state.widgetDisabled ? 'pointer-event-none' : ''}`,\n      portalContainer: window.EditorFrame ? window.EditorFrame.contentWindow.document.body : document.body,\n    };\n    if(! isEditor()){\n      // this.popoverProps.boundary = '#front-app'\n    }\n    this.altrpSelectRef = React.createRef();\n    if (this.getContent(\"content_default_value\")) {\n      this.dispatchFieldValueToStore(this.getContent(\"content_default_value\"));\n    }\n\n    this.inputRef = React.createRef();\n  }\n\n  /**\n   * В некоторых случаях значение поля должно быть массивом\n   * @return {boolean}\n   */\n  valueMustArray() {\n    return false;\n  }\n\n  /**\n   * Чистит значение\n   */\n  clearValue() {\n    let value = \"\";\n    this.onChange(value);\n    this.dispatchFieldValueToStore(value, true);\n  }\n\n\n  /**\n   * Загрузка виджета\n   * @param {{}} prevProps\n   * @param {{}} prevState\n   */\n  async _componentDidMount(prevProps, prevState) {\n    if (this.props.element.getSettings(\"content_options\")) {\n      let options = parseOptionsFromSettings(\n        this.props.element.getSettings(\"content_options\")\n      );\n\n      this.setState(state => ({...state, options}));\n    } else if (\n      [\"input-select\"].indexOf(this.props.element.getName()) >= 0 &&\n      this.state.settings.model_for_options\n    ) {\n      let options = await new Resource({route: this.getRoute()}).getAll();\n      options = !_.isArray(options) ? options.data : options;\n      options = _.isArray(options) ? options : [];\n      this.setState(state => ({...state, options}));\n    }\n    let value = this.state.value;\n\n    /**\n     * Если динамическое значение загрузилось,\n     * то используем this.getContent для получение этого динамического значения\n     * старые динамические данные\n     * */\n    if (\n      _.get(value, \"dynamic\") &&\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\n    ) {\n      value = this.getContent(\"content_default_value\");\n    }\n\n    /**\n     * Если модель обновилась при смене URL\n     */\n    if (\n      prevProps &&\n      !prevProps.currentModel.getProperty(\"altrpModelUpdated\") &&\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\n    ) {\n      value = this.getContent(\"content_default_value\");\n      this.setState(\n        state => ({...state, value, contentLoaded: true}),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n      return;\n    }\n    if (\n      this.props.currentModel.getProperty(\"altrpModelUpdated\") &&\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\n      !this.state.contentLoaded\n    ) {\n      value = this.getContent(\"content_default_value\");\n      this.setState(\n        state => ({...state, value, contentLoaded: true}),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n      return;\n    }\n    if (this.state.value !== value) {\n      this.setState(\n        state => ({...state, value}),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n    }\n  }\n\n  /**\n   * Получить url для запросов\n   */\n  getRoute() {\n    let url = this.props.element.getSettings(\"model_for_options\");\n\n    if (url.indexOf(\"/\") === -1) {\n      return `/ajax/models/${url}_options`;\n    }\n    if (url.indexOf(\"{{\") !== -1) {\n      url = replaceContentWithData(url);\n    }\n    return url;\n  }\n\n  /**\n   * Обновление виджета\n   */\n  async _componentDidUpdate(prevProps, prevState) {\n    const {content_options, model_for_options} = this.state.settings;\n    if (\n      prevProps &&\n      !prevProps.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\")\n    ) {\n      let value = this.getContent(\n        \"content_default_value\",\n        this.props.element.getSettings(\"select2_multiple\")\n      );\n      this.setState(\n        state => ({...state, value, contentLoaded: true}),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n    }\n    if (\n      this.props.element.getName() === \"input-select\" &&\n      this.props.element.getSettings(\"model_for_options\")\n    ) {\n      if (\n        !(\n          this.state.settings.model_for_options ===\n          prevProps.element.getSettings(\"model_for_options\")\n        )\n      ) {\n        let model_for_options = prevProps.element.getSettings(\n          \"model_for_options\"\n        );\n        let options = await new Resource({route: this.getRoute()}).getAll();\n        options = !_.isArray(options) ? options.data : options;\n        options = _.isArray(options) ? options : [];\n        this.setState(state => ({...state, options, model_for_options}));\n      }\n    }\n    /**\n     * Если обновилась модель, то пробрасываем в стор новое значение (старый источник диамических данных)\n     */\n    if (\n      !_.isEqual(this.props.currentModel, prevProps.currentModel) &&\n      this.state.value &&\n      this.state.value.dynamic\n    ) {\n      this.dispatchFieldValueToStore(this.getContent(\"content_default_value\"));\n    }\n\n    /**\n     * Если обновилось хранилище данных формы, currentDataStorage или модель, то получаем новые опции c сервера\n     */\n    if (\n      this.props.formsStore !== prevProps.formsStore ||\n      this.props.currentModel !== prevProps.currentModel ||\n      this.props.currentDataStorage !== prevProps.currentDataStorage\n    ) {\n      this.updateOptions();\n    }\n    // if (content_options && !model_for_options) {\n    //   let options = parseOptionsFromSettings(content_options);\n    //   if (!_.isEqual(options, this.state.options)) {\n    //     this.setState(state => ({...state, options}));\n    //   }\n    // }\n    this.updateValue(prevProps);\n  }\n\n  /**\n   * Обновить значение если нужно\n   * @param {{}} prevProps\n   */\n  updateValue(prevProps) {\n    if (isEditor()) {\n      return;\n    }\n    let content_calculation = this.props.element.getSettings(\n      \"content_calculation\"\n    );\n    const altrpforms = this.props.formsStore;\n    const fieldName = this.props.element.getFieldId();\n    const formId = this.props.element.getFormId();\n    if (!content_calculation) {\n      /**\n       * Обновить значение, если formsStore изменилось из другого компонента\n       */\n      const path = `${formId}.${fieldName}`;\n      if (\n        this.props.formsStore !== prevProps.formsStore &&\n        _.get(altrpforms, path) !== this.state.value\n      ) {\n        this.setState(state => ({\n          ...state,\n          value: _.get(altrpforms, path)\n        }));\n      }\n      return;\n    }\n\n    const prevContext = {};\n\n    const altrpdata = this.props.currentDataStorage.getData();\n    const altrpmodel = this.props.currentModel.getData();\n    const altrpuser = this.props.currentUser.getData();\n    const altrppagestate = this.props.altrpPageState.getData();\n    const altrpresponses = this.props.altrpresponses.getData();\n    const altrpmeta = this.props.altrpMeta.getData();\n    const context = this.props.element.getCurrentModel().getData();\n    if (content_calculation.indexOf(\"altrpdata\") !== -1) {\n      context.altrpdata = altrpdata;\n      if (!altrpdata.currentDataStorageLoaded) {\n        prevContext.altrpdata = altrpdata;\n      } else {\n        prevContext.altrpdata = prevProps.currentDataStorage.getData();\n      }\n    }\n    if (content_calculation.indexOf(\"altrpforms\") !== -1) {\n      context.altrpforms = altrpforms;\n      /**\n       * Не производим вычисления, если изменилось текущее поле\n       */\n      if (`${formId}.${fieldName}` === altrpforms.changedField) {\n        prevContext.altrpforms = altrpforms;\n      } else {\n        prevContext.altrpforms = prevProps.formsStore;\n      }\n    }\n    if (content_calculation.indexOf(\"altrpmodel\") !== -1) {\n      context.altrpmodel = altrpmodel;\n      prevContext.altrpmodel = prevProps.currentModel.getData();\n    }\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\n      context.altrpuser = altrpuser;\n      prevContext.altrpuser = prevProps.currentUser.getData();\n    }\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\n      context.altrpuser = altrpuser;\n      prevContext.altrpuser = prevProps.currentUser.getData();\n    }\n    if (content_calculation.indexOf(\"altrppagestate\") !== -1) {\n      context.altrppagestate = altrppagestate;\n      prevContext.altrppagestate = prevProps.altrpPageState.getData();\n    }\n    if (content_calculation.indexOf(\"altrpmeta\") !== -1) {\n      context.altrpmeta = altrpmeta;\n      prevContext.altrpmeta = prevProps.altrpMeta.getData();\n    }\n    if (content_calculation.indexOf(\"altrpresponses\") !== -1) {\n      context.altrpresponses = altrpresponses;\n      prevContext.altrpresponses = prevProps.altrpresponses.getData();\n    }\n\n    if (content_calculation.indexOf(\"altrpstorage\") !== -1) {\n      context.altrpstorage = getDataFromLocalStorage(\"altrpstorage\", {});\n    }\n\n    if (\n      _.isEqual(prevProps.currentDataStorage, this.props.currentDataStorage) &&\n      _.isEqual(prevProps.currentUser, this.props.currentUser) &&\n      _.isEqual(prevProps.formsStore, this.props.formsStore) &&\n      _.isEqual(prevProps.altrpPageState, this.props.altrpPageState) &&\n      _.isEqual(prevProps.altrpMeta, this.props.altrpMeta) &&\n      _.isEqual(prevProps.altrpresponses, this.props.altrpresponses) &&\n      _.isEqual(prevProps.currentModel, this.props.currentModel)\n    ) {\n      return;\n    }\n    if (\n      !_.isEqual(prevProps.formsStore, this.props.formsStore) &&\n      `${formId}.${fieldName}` === altrpforms.changedField\n    ) {\n      return;\n    }\n    let value = \"\";\n    try {\n      content_calculation = content_calculation\n        .replace(/}}/g, \"')\")\n        .replace(/{{/g, \"_.get(context, '\");\n      value = eval(content_calculation);\n      if (value === this.state.value) {\n        return;\n      }\n      this.setState(\n        state => ({...state, value}),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n    } catch (e) {\n      console.error(\n        \"Evaluate error in Input: '\" + e.message + \"'\",\n        this.props.element.getId()\n      );\n    }\n  }\n\n  /**\n   * Обновляет опции для селекта при обновлении данных, полей формы\n   */\n  async updateOptions() {\n    {\n      let formId = this.props.element.getFormId();\n      let paramsForUpdate = this.props.element.getSettings(\"params_for_update\");\n      let formData = _.get(this.props.formsStore, [formId], {});\n      paramsForUpdate = parseParamsFromString(\n        paramsForUpdate,\n        new AltrpModel(formData)\n      );\n      /**\n       * Сохраняем параметры запроса, и если надо обновляем опции\n       */\n      let options = [...this.state.options];\n      if (!_.isEqual(paramsForUpdate, this.state.paramsForUpdate)) {\n        if (!_.isEmpty(paramsForUpdate)) {\n          if (this.props.element.getSettings(\"params_as_filters\", false)) {\n            paramsForUpdate = JSON.stringify(paramsForUpdate);\n            options = await new Resource({\n              route: this.getRoute()\n            }).getQueried({filters: paramsForUpdate});\n          } else {\n            options = await new Resource({route: this.getRoute()}).getQueried(\n              paramsForUpdate\n            );\n          }\n          options = !_.isArray(options) ? options.data : options;\n          options = _.isArray(options) ? options : [];\n        } else if (this.state.paramsForUpdate) {\n          options = await new Resource({route: this.getRoute()}).getAll();\n          options = !_.isArray(options) ? options.data : options;\n          options = _.isArray(options) ? options : [];\n        }\n        this.setState(state => ({\n          ...state,\n          paramsForUpdate,\n          options\n        }));\n      }\n    }\n  }\n\n  /**\n   * Изменение значения в виджете\n   * @param e\n   */\n  onChange = (e)=> {\n    let value = \"\";\n    let valueToDispatch;\n    const settings = this.props.element.getSettings();\n    value = e.target.value;\n\n    if (e && e.value) {\n      value = e.value;\n    }\n\n    if (_.isArray(e)) {\n      value = _.cloneDeep(e);\n    }\n\n    this.setState(\n      state => ({\n        ...state,\n        value\n      }),\n      () => {\n\n        if (\n          [\"text\", \"email\", \"phone\", \"tel\", \"number\", \"password\"].indexOf(\n            this.state.settings.content_type\n          ) === -1\n        ) {\n          this.dispatchFieldValueToStore(\n            valueToDispatch !== undefined ? valueToDispatch : value,\n            true\n          );\n        }\n      }\n    );\n  }\n\n  async onItemSelect(value) {\n    if (value.value !== undefined && ! isNaN(value.value)){\n      value = value.value;\n    }\n\n    if(value === -1) {\n      value = null\n    }\n\n    const options = this.getOptions();\n    const element = this.props.element;\n    if(! options.find(option => option.value == value)){\n      const create_url = element.getResponsiveSetting('create_url');\n      if(element.getResponsiveSetting('create') && create_url){\n        this.setState(state =>({...state, widgetDisabled: true}))\n        let params = element.getResponsiveSetting('create_params') || '';\n        params = params.replace(/\\{\\{__query__\\}\\}/g, value);\n        params = parseParamsFromString(params, element.getCurrentModel(), true)\n        const resource = new Resource({route: create_url});\n        try{\n          let res = await resource.post(params)\n          if(res.data){\n            res = res.data\n          }\n          const label_path = element.getResponsiveSetting('label_path')\n          if(label_path){\n            res.label = _.get(res, label_path, res.id);\n          }\n          const value_path = element.getResponsiveSetting('value_path')\n          if(value_path){\n            res.value = _.get(res, value_path, res.id);\n          }\n          options.unshift(res)\n        } catch (e) {\n\n        }finally {\n          this.setState(state =>({...state, widgetDisabled: false}))\n        }\n      } else {\n        options.unshift(arguments[0])\n      }\n      this.setState(state => ({\n          ...state,\n          options,\n        }))\n    }\n    this.setState(state => ({\n        ...state,\n        value\n      }),\n      () => {\n        /**\n         * Обновляем хранилище\n         */\n        this.dispatchFieldValueToStore(\n          value,\n          true\n        );\n      })\n  }\n\n\n  /**\n   * получить опции\n   */\n  getOptions() {\n    let options = this.state.options;\n\n    const optionsDynamicSetting = this.props.element.getDynamicSetting(\n      \"content_options\"\n    );\n    const content_options = this.props.element.getResponsiveSetting('content_options');\n    const model_for_options = this.props.element.getResponsiveSetting('model_for_options');\n    if(_.isString(content_options)\n      && content_options.indexOf('{{') === 0\n      && ! model_for_options){\n      options = getDataByPath(content_options.replace('{{', '').replace('}}', ''))\n      if( ! _.isArray(options)){\n        options = [];\n      }\n    }\n    if (optionsDynamicSetting) {\n      options = convertData(optionsDynamicSetting, options);\n    } else {\n      options = [...options]\n    }\n    if (!this.props.element.getSettings(\"sort_default\")) {\n      options = _.sortBy(options, o => o && (o.label ? o.label.toString() : o));\n      if(this.props.element.getSettings(\"options_sorting\") === 'desc'){\n        options = _.reverse(options)\n      }\n    }\n    if(this.props.element.getResponsiveSetting('content_options_nullable')){\n      options.unshift({\n        label: this.props.element.getResponsiveSetting('nulled_option_title') || '',\n        value: '',\n      })\n    }\n\n    if(this.props.element.getResponsiveSetting(\"remove\") && this.state.value) {\n      options = [{\n        value: -1,\n        label: this.props.element.getResponsiveSetting(\"remove_label\", \"\", \"remove\"),\n      }, ...options]\n    }\n\n    return options;\n  }\n\n  /**\n   * Передадим значение в хранилище формы\n   * @param {*} value\n   * @param {boolean} userInput true - имзенилось пользователем\n   */\n  dispatchFieldValueToStore = async (value, userInput = false) => {\n    let formId = this.props.element.getFormId();\n    let fieldName = this.props.element.getFieldId();\n    if (fieldName.indexOf(\"{{\") !== -1) {\n      fieldName = replaceContentWithData(fieldName);\n    }\n    if (_.isObject(this.props.appStore) && fieldName && formId) {\n      this.props.appStore.dispatch(\n        changeFormFieldValue(fieldName, value, formId, userInput)\n      );\n      if (userInput) {\n        const change_actions = this.props.element.getSettings(\"change_actions\");\n\n        if (change_actions && !isEditor()) {\n          const actionsManager = (\n            await import(\n              /* webpackChunkName: 'ActionsManager' */\n              \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\n              )\n          ).default;\n          await actionsManager.callAllWidgetActions(\n            this.props.element.getIdForAction(),\n            \"change\",\n            change_actions,\n            this.props.element\n          );\n        }\n      }\n    }\n  };\n\n  /**\n   * Взовращает имя для атрибута name\n   * @return {string}\n   */\n  getName() {\n    return `${this.props.element.getFormId()}[${this.props.element.getFieldId()}]`;\n  }\n\n  escapeRegExpChars(text) {\n    return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n  }\n\n\n  /**\n   *\n   * @returns {*}\n   */\n  getValue = () => {\n    let value;\n    let formId = this.props.element.getFormId();\n    let fieldName = this.props.element.getFieldId();\n    if (isEditor()) {\n      value = this.state.value;\n    } else {\n\n      value = _.get(appStore.getState().formsStore, `${formId}`, '')\n      value = _.get(value, fieldName, '')\n    }\n\n    return value;\n  }\n\n  /**\n   * @return {*}\n   */\n  getCurrentLabel() {\n    const value = this.getValue()\n\n    const options = this.getOptions() || []\n    return options.find(option => option.value == value)?.label || ''\n  }\n\n  /**\n   *\n   * @return {JSX.Element|string}\n   */\n  renderRightIcon = ()=>{\n    const right_icon = this.props.element.getResponsiveSetting('right_icon')\n    if(_.isEmpty(right_icon)){\n      return 'caret-down'\n    }\n    return <span className=\"bp3-icon bp3-icon_text-widget bp3-icon_right\" >\n      {renderAsset(right_icon )}\n    </span>\n  }\n  /**\n   *\n   * @return {JSX.Element|null}\n   */\n  renderLeftIcon = ()=>{\n    const left_icon = this.props.element.getResponsiveSetting('left_icon')\n    if(_.isEmpty(left_icon)){\n      return null\n    }\n    return <span className=\"bp3-icon bp3-icon_text-widget bp3-icon_left\" >\n      {renderAsset(left_icon)}\n    </span>\n  }\n  /**\n   * Обработка клика по кнопке\n   * @return {Promise<void>}\n   */\n  onClick = async ()=>{\n    if (this.props.element.getSettings(\"click_actions\", []) && !isEditor()) {\n      const actionsManager = (\n        await import(\n          /* webpackChunkName: 'ActionsManager' */\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\n          )\n      ).default;\n      await actionsManager.callAllWidgetActions(\n        this.props.element.getIdForAction(),\n        \"click\",\n        this.props.element.getSettings(\"click_actions\", []),\n        this.props.element\n      );\n    }\n  }\n  /**\n   * Создаем элемент из поисковой строки\n   * @param title\n   * @return {{label, value}}\n   */\n  createNewItemFromQuery = (title) => {\n    return{label: title,value: title};\n  }\n  /**\n   * отрисовываем создание нового элемента\n   * @param query\n   * @param active\n   * @param handleClick\n   * @return {JSX.Element|null}\n   */\n\n  createNewItemRenderer = ( query,\n                         active,\n                         handleClick) => {\n    /**\n     * @type {FrontElement}\n     */\n    const {element} = this.props;\n    // console.log(query,\n    //   active,\n    //   handleClick);\n    if(! element.getResponsiveSetting('create')){\n      return null;\n    }\n    const {options} = this.state;\n    if (options.find(option => {\n      let label = (option.label || '') + '';\n      label = label.toLowerCase();\n      query = (query || '') + '';\n      return query === label;\n    })) {\n      return null\n    }\n    let text = element.getResponsiveSetting('create_text') || ''\n    text = text.replace('{{__query__}}', query)\n    text = replaceContentWithData(text, element.getCurrentModel().getData())\n    return (\n      <MenuItem\n        icon=\"add\"\n        text={text}\n        active={active}\n        onClick={handleClick}\n        shouldDismissPopover={false}\n      />)\n  }\n  onQueryChange = async (s)=>{\n    const searchActions = this.props.element.getSettings(\"s_actions\");\n    if(_.isEmpty(searchActions)){\n      return\n    }\n    if(this.searchOnPending){\n      return\n    }\n    this.searchOnPending = true;\n    try{\n\n      const actionsManager = (\n        await import(\n          /* webpackChunkName: 'ActionsManager' */\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\n          )\n      ).default;\n      this.props.element.getCurrentModel().setProperty('altrp_search', s);\n      await actionsManager.callAllWidgetActions(\n        this.props.element.getIdForAction(),\n        \"search\",\n        searchActions,\n        this.props.element\n      );\n    } catch (e) {\n      console.error(e);\n    }finally{\n      this.searchOnPending = false;\n    }\n  }\n  render() {\n\n    const element = this.props.element;\n    let label = null;\n    const settings = this.props.element.getSettings();\n    let value = this.getCurrentLabel();\n\n    const {\n      label_icon\n    } = settings;\n\n    const fullWidth = element.getSettings(\"full_width\") || false\n    this.popoverProps.onOpening = (e) => {\n      if(fullWidth) {\n        const inputWidth = this.inputRef.current.offsetWidth;\n\n        console.log(inputWidth, e)\n        e.style.width = `${inputWidth}px`\n      } else if(e.style.width) {\n        e.style.width = \"\"\n      }\n    }\n\n    let classLabel = \"\";\n    let styleLabel = {};\n    const content_label_position_type = this.props.element.getResponsiveSetting(\n      \"content_label_position_type\"\n    ) || 'top';\n    switch (content_label_position_type) {\n      case \"top\":\n        styleLabel = {\n          marginBottom: this.state.settings.label_style_spacing\n            ? this.state.settings.label_style_spacing.size +\n            this.state.settings.label_style_spacing.unit\n            : 2 + \"px\"\n        };\n        classLabel = \"\";\n        break;\n      case \"bottom\":\n        styleLabel = {\n          marginTop: this.state.settings.label_style_spacing\n            ? this.state.settings.label_style_spacing.size +\n            this.state.settings.label_style_spacing.unit\n            : 2 + \"px\"\n        };\n        classLabel = \"\";\n        break;\n      case \"left\":\n        styleLabel = {\n          marginRight: this.state.settings.label_style_spacing\n            ? this.state.settings.label_style_spacing.size +\n            this.state.settings.label_style_spacing.unit\n            : 2 + \"px\"\n        };\n        classLabel = \"altrp-field-label-container-left\";\n        // this.label.current.classList.add(\"hello\")\n\n        break;\n      case \"absolute\":\n        styleLabel = {\n          position: \"absolute\",\n          zIndex: 2\n        };\n        classLabel = \"\";\n        break;\n    }\n    const content_label = this.getContent('content_label')\n    if (content_label) {\n      label = (\n        <div\n          className={\"altrp-field-label-container \" + classLabel}\n          style={styleLabel}\n        >\n          <label\n            className={`altrp-field-label ${this.state.settings.content_required\n              ? \"altrp-field-label--required\"\n              : \"\"\n            }`}\n          >\n            {content_label}\n          </label>\n          {label_icon && label_icon.assetType && (\n            <span className=\"altrp-label-icon\">\n              {renderAssetIcon(label_icon)}\n            </span>\n          )}\n        </div>\n      );\n    } else {\n      label = null;\n    }\n\n    const placeholder = element.getResponsiveSetting('content_placeholder');\n    const content_readonly = element.getResponsiveSetting('content_readonly');\n    const no_results_text = element.getResponsiveSetting('no_results_text');\n\n    const inputProps = {\n      placeholder,\n      className: element.getResponsiveSetting('hide_search') ? 'altrp-hidden' : '',\n    };\n\n    let input = null;\n\n    let itemsOptions = this.getOptions();\n    const position_css_classes = element.getResponsiveSetting('position_css_classes', '', '')\n    const position_css_id = this.getContent('position_css_id')\n\n\n    input = (\n        <Select\n          inputProps={inputProps}\n          disabled={content_readonly}\n          popoverProps={this.popoverProps}\n          createNewItemFromQuery={element.getResponsiveSetting('create') ? this.createNewItemFromQuery : null}\n          createNewItemRenderer={this.createNewItemRenderer}\n          itemRenderer={(item, {handleClick, modifiers, query}) => {\n            if (!modifiers.matchesPredicate) {\n              return null;\n            }\n            return <MenuItem\n              text={item.label}\n              key={item.value}\n              active={item.value === this.getValue()}\n              disabled={modifiers.disabled || item.disabled}\n              onClick={handleClick}\n            />\n          }}\n          itemPredicate={(query, item) => {\n            if (query === undefined || query.length === 0) {\n              return true\n            }\n            return `${item?.label?.toLowerCase() || ''}`.indexOf(query?.toLowerCase()) >= 0;\n          }}\n          onQueryChange={this.onQueryChange}\n          items={itemsOptions}\n          // itemRenderer={({label})=>label}\n          noResults={<MenuItem disabled={true} text={no_results_text}/>}\n          name={this.getName()}\n          onItemSelect={item => this.onItemSelect(item)}\n          id={position_css_id}\n          className={`${position_css_classes} ${this.state.widgetDisabled ? 'pointer-event-none' : ''}`}\n        >\n          <Button\n            text={value}\n            elementRef={this.inputRef}\n            disabled={content_readonly}\n            onClick={this.onClick}\n            icon={this.renderLeftIcon()}\n            rightIcon={this.renderRightIcon()}\n          />\n        </Select>\n    );\n\n    return (\n      <AltrpFieldContainer\n        settings={settings}\n        className={\"altrp-field-container \"}\n      >\n        {content_label_position_type === \"top\" ? label : \"\"}\n        {content_label_position_type === \"left\" ? label : \"\"}\n        {content_label_position_type === \"right\" ? label : \"\"}\n        {content_label_position_type === \"absolute\" ? label : \"\"}\n        {/* .altrp-field-label-container */}\n        {input}\n        {content_label_position_type === \"bottom\" ? label : \"\"}\n      </AltrpFieldContainer>\n    );\n  }\n}\n\nexport default InputSelectWidget;\n","export const CHANGE_FORM_FIELD_VALUE = 'CHANGE_FORM_FIELD_VALUE';\r\nexport const CLEAR_FORM_FIELD_VALUE = 'CHANGE_FORM_FIELD_VALUE';\r\n\r\n/**\r\n * Получает данные поля формы и сохраняет в хранилище\r\n * @param {string}fieldName\r\n * @param {*}value\r\n * @param {string}formId\r\n * @param {boolean}userInput\r\n * @return {{type: string, fieldName: *, value: *, formId: *}}\r\n */\r\nexport function changeFormFieldValue(fieldName, value, formId, userInput) {\r\n\r\n  return {\r\n    type: CHANGE_FORM_FIELD_VALUE,\r\n    fieldName,\r\n    value,\r\n    formId,\r\n    changedField: userInput ? `${formId}.${fieldName}` : null,\r\n  };\r\n}\r\n/**\r\n * Очистить данные поля формы и сохраняет в хранилище\r\n * @param {string | null}formId\r\n * @return {{type: string, fieldName: *, value: *, formId: *}}\r\n */\r\nexport function clearFormStorage(formId = null) {\r\n  return {\r\n    type: CLEAR_FORM_FIELD_VALUE,\r\n    formId,\r\n  };\r\n}\r\n\r\n"],"sourceRoot":""}