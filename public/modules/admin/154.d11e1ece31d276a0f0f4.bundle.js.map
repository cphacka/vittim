{"version":3,"sources":["webpack:///./resources/modules/admin/src/components/settings/MailForm.js"],"names":["DriverOptions","EncryptionOptions","MailForm","props","changeHandler","target","value","name","setState","changeValueSelect","field","state","submitHandler","e","preventDefault","resource","Resource","route","post","res","success","alert","message","ItemPredicate","query","_","findIndex","split","char","similar","forEach","queryChar","mail_driver","mail_host","mail_port","mail_username","mail_password","mail_encryption","mail_from_address","mail_from_name","getAll","settings","this","data","className","onSubmit","htmlFor","items","id","required","matchTargetWidth","itemPredicate","noResults","disabled","text","itemRenderer","item","handleClick","modifiers","key","active","onClick","onItemSelect","current","fill","large","alignText","Alignment","rightIcon","type","onChange","autoComplete","Component"],"mappings":"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","file":"154.d11e1ece31d276a0f0f4.bundle.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Resource from \"../../../../editor/src/js/classes/Resource\";\r\nimport {InputGroup, NumericInput, MenuItem, Button, Alignment} from \"@blueprintjs/core\";\r\nimport {Select} from \"@blueprintjs/select\";\r\n\r\n\r\nconst DriverOptions = ['', 'smtp']\r\nconst EncryptionOptions = ['', 'tls', 'ssl']\r\n\r\nclass MailForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mail_driver: '',\r\n      mail_host: '',\r\n      mail_port: '',\r\n      mail_username: '',\r\n      mail_password: '',\r\n      mail_encryption: '',\r\n      mail_from_address: '',\r\n      mail_from_name: '',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Компонент загрузился\r\n   */\r\n  async componentDidMount(){\r\n\r\n    let settings = await (new Resource({ route: `/admin/ajax/get_mail_settings` })).getAll();\r\n    this.setState(state=>({...state,...settings.data}));\r\n  }\r\n\r\n  changeHandler = ({ target: { value, name } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  changeValueSelect = (value, field) => {\r\n    this.setState(state => {\r\n      state = { ...state };\r\n      state[field] = value;\r\n\r\n      return state\r\n    })\r\n  }\r\n\r\n\r\n\r\n  submitHandler = async e => {\r\n    e.preventDefault();\r\n    const resource = new Resource({ route: `/admin/ajax/write_mail_settings` });\r\n    let res = await resource.post(this.state);\r\n    if(res.success){\r\n      alert(res.message || 'success');\r\n    }\r\n  };\r\n\r\n  ItemPredicate = (query, value) => {\r\n\r\n    if(!query) {\r\n      return true\r\n    }\r\n    const index = _.findIndex(_.split(value, \"\"), char => {\r\n      let similar = false;\r\n      _.split(query, \"\").forEach(queryChar => {\r\n        if(queryChar === char) {\r\n          similar = true\r\n        }\r\n      });\r\n      return similar\r\n    });\r\n\r\n    if(index !== -1) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      mail_host,\r\n      mail_port,\r\n      mail_username,\r\n      mail_password,\r\n      mail_from_address,\r\n      mail_from_name,\r\n    } = this.state;\r\n\r\n    return <div className=\"mail-container__settings\">\r\n\r\n      <form className=\"admin-form\" onSubmit={this.submitHandler}>\r\n        <div className=\"form-group__inline-wrapper\">\r\n          <div className=\"form-group flex-grow__selectBlueprint form-group_width47\">\r\n            <label htmlFor=\"mail_driver\">Driver</label>\r\n            {/*<select id=\"mail_driver\" required*/}\r\n            {/*        name=\"mail_driver\"*/}\r\n            {/*        value={mail_driver}*/}\r\n            {/*        onChange={this.changeHandler}*/}\r\n            {/*        className=\"form-control\"*/}\r\n            {/*>*/}\r\n            {/*  <option value=\"\"/>*/}\r\n            {/*  <option value=\"smtp\">smtp</option>*/}\r\n            {/*</select>*/}\r\n\r\n            <Select items={DriverOptions}\r\n                    id=\"mail_driver\"\r\n                    required\r\n                    matchTargetWidth\r\n                    itemPredicate={this.ItemPredicate}\r\n                    noResults={<MenuItem disabled={true} text=\"No results.\" />}\r\n                    itemRenderer={(item, {handleClick, modifiers, query}) => {\r\n                      return <MenuItem\r\n                        text={item}\r\n                        key={item}\r\n                        active={item === this.state.mail_driver }\r\n                        onClick={handleClick}\r\n                      />\r\n                    }}\r\n                    onItemSelect={current => { this.changeValueSelect(current, 'mail_driver') }}\r\n                    fill={true}\r\n            >\r\n              <Button fill\r\n                      large\r\n                      alignText={Alignment.LEFT}\r\n                      text={this.state.mail_driver || 'none'}\r\n                      rightIcon=\"caret-down\"\r\n              />\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"form-group flex-grow__selectBlueprint form-group_width47\">\r\n            <label htmlFor=\"mail_encryption\">Encryption</label>\r\n            {/*<select id=\"mail_encryption\" required*/}\r\n            {/*        name=\"mail_encryption\"*/}\r\n            {/*        value={mail_encryption}*/}\r\n            {/*        onChange={this.changeHandler}*/}\r\n            {/*        className=\"form-control\"*/}\r\n            {/*>*/}\r\n            {/*  <option value=\"\" />*/}\r\n            {/*  <option value=\"tls\">tls</option>*/}\r\n            {/*  <option value=\"ssl\">ssl</option>*/}\r\n            {/*</select>*/}\r\n\r\n\r\n            <Select items={EncryptionOptions}\r\n                    id=\"mail_encryption\"\r\n                    required\r\n                    matchTargetWidth\r\n                    itemPredicate={this.ItemPredicate}\r\n                    noResults={<MenuItem disabled={true} text=\"No results.\" />}\r\n                    itemRenderer={(item, {handleClick, modifiers, query}) => {\r\n                      return <MenuItem\r\n                        text={item}\r\n                        key={item}\r\n                        active={item === this.state.mail_encryption }\r\n                        onClick={handleClick}\r\n                      />\r\n                    }}\r\n                    onItemSelect={current => { this.changeValueSelect(current, 'mail_encryption') }}\r\n                    fill={true}\r\n            >\r\n              <Button fill\r\n                      large\r\n                      alignText={Alignment.LEFT}\r\n                      text={this.state.mail_encryption || 'none'}\r\n                      rightIcon=\"caret-down\"\r\n              />\r\n            </Select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group__inline-wrapper\">\r\n          <div className=\"form-group form-group_width47\">\r\n            <label htmlFor=\"mail_host\">Host</label>\r\n            {/*<input type=\"text\" id=\"mail_host\" required*/}\r\n            {/*       name=\"mail_host\"*/}\r\n            {/*       value={mail_host}*/}\r\n            {/*       onChange={this.changeHandler}*/}\r\n            {/*       className=\"form-control\"*/}\r\n            {/*/>*/}\r\n            <InputGroup type=\"text\"\r\n                        name=\"mail_host\"\r\n                        id=\"mail_host\"\r\n                        value={mail_host}\r\n                        onChange={this.changeHandler}\r\n                        className=\"form-control-blueprint\"\r\n                        required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group form-group_width47\">\r\n            <label htmlFor=\"mail_port\">Port</label>\r\n            {/*<input type=\"text\" id=\"mail_port\" required*/}\r\n            {/*       name=\"mail_port\"*/}\r\n            {/*       value={mail_port}*/}\r\n            {/*       onChange={this.changeHandler}*/}\r\n            {/*       className=\"form-control\"*/}\r\n            {/*/>*/}\r\n            <InputGroup type=\"text\"\r\n                        name=\"mail_port\"\r\n                        id=\"mail_port\"\r\n                        value={mail_port}\r\n                        onChange={this.changeHandler}\r\n                        className=\"form-control-blueprint\"\r\n                        required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group__inline-wrapper\">\r\n          <div className=\"form-group form-group_width47\">\r\n            <label htmlFor=\"mail_from_address\">Mail from Address</label>\r\n            {/*<input type=\"text\" id=\"mail_username\" required*/}\r\n            {/*       name=\"mail_username\"*/}\r\n            {/*       value={mail_username}*/}\r\n            {/*       onChange={this.changeHandler}*/}\r\n            {/*       className=\"form-control\"*/}\r\n            {/*/>*/}\r\n            <InputGroup type=\"email\"\r\n                        name=\"mail_from_address\"\r\n                        id=\"mail_from_address\"\r\n                        value={mail_from_address}\r\n                        onChange={this.changeHandler}\r\n                        className=\"form-control-blueprint\"\r\n                        required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group form-group_width47\">\r\n            <label htmlFor=\"mail_password\">Password</label>\r\n            {/*<input type=\"password\"*/}\r\n            {/*       autoComplete=\"mail-settings-password\"*/}\r\n            {/*       id=\"mail_password\" required*/}\r\n            {/*       name=\"mail_password\"*/}\r\n            {/*       value={mail_password}*/}\r\n            {/*       onChange={this.changeHandler}*/}\r\n            {/*       className=\"form-control\"*/}\r\n            {/*/>*/}\r\n            <InputGroup type=\"password\"\r\n                        name=\"mail_password\"\r\n                        id=\"mail_password\"\r\n                        value={mail_password}\r\n                        onChange={this.changeHandler}\r\n                        className=\"form-control-blueprint\"\r\n                        autoComplete=\"mail-settings-password\"\r\n                        required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group__inline-wrapper\">\r\n          <div className=\"form-group form-group_width47\">\r\n            <label htmlFor=\"mail_username\">User Name</label>\r\n            {/*<input type=\"email\" id=\"mail_from_address\"*/}\r\n            {/*       name=\"mail_from_address\"*/}\r\n            {/*       value={mail_from_address}*/}\r\n            {/*       onChange={this.changeHandler}*/}\r\n            {/*       className=\"form-control\"*/}\r\n            {/*/>*/}\r\n            <InputGroup type=\"text\"\r\n                        name=\"mail_username\"\r\n                        id=\"mail_username\"\r\n                        value={mail_username}\r\n                        onChange={this.changeHandler}\r\n                        className=\"form-control-blueprint\"\r\n                        required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group form-group_width47\">\r\n            <label htmlFor=\"mail_from_name\">Mail from Name</label>\r\n            {/*<input type=\"text\" id=\"mail_from_name\"*/}\r\n            {/*       name=\"mail_from_name\"*/}\r\n            {/*       value={mail_from_name}*/}\r\n            {/*       onChange={this.changeHandler}*/}\r\n            {/*       className=\"form-control\"*/}\r\n            {/*/>*/}\r\n            <InputGroup type=\"text\"\r\n                        name=\"mail_from_name\"\r\n                        id=\"mail_from_name\"\r\n                        value={mail_from_name}\r\n                        onChange={this.changeHandler}\r\n                        className=\"form-control-blueprint\"\r\n                        required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"btn__wrapper\">\r\n          <button className=\"btn btn_success\" type=\"submit\">Save</button>\r\n        </div>\r\n      </form>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default MailForm;\r\n"],"sourceRoot":""}