{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/components/altrp-map/AltrpMap.js"],"names":["defaultOptions","fillColor","fillOpacity","color","settings","useState","isLoading","setIsLoading","geoJson","setGeoJson","query","handler","canvas","zoom","lat","lng","style_height","style_margin","composeDynamicData","useCallback","url","axios","data","status","geojson","type","features","map","item","id","properties","tooltip","name","options","geometry","coordinates","JSON","parse","polygon","useEffect","dataSource","value","queryString","qs","result","split","replace","join","parseQueryParams","defaultParams","isTransformLatLng","onTap","e","target","feature","params","evt","window","open","style","pointerEvents","altrpHelpers","isEditor","height","size","unit","marginTop","top","marginBottom","bottom","marginLeft","left","marginRight","right","isEditable","preferCanvas","center"],"mappings":"ywBAKA,IAAMA,EAAiB,CACrBC,UAAW,UACXC,YAAa,GACbC,MAAO,WAoGT,UAjGA,YAAgC,IAAZC,EAAY,EAAZA,SAClB,GAAkCC,eAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,cAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEEC,EAQEN,EARFM,MACAC,EAOEP,EAPFO,QACAC,EAMER,EANFQ,OACAC,EAKET,EALFS,KACAC,EAIEV,EAJFU,IACAC,EAGEX,EAHFW,IANF,EASIX,EAFFY,oBAPF,MAOiB,GAPjB,IASIZ,EADFa,oBARF,MAQiB,GARjB,EAsBMC,GAAqBC,iBAAW,mCAAC,WAAMC,GAAN,kFACrCb,GAAa,GADwB,SAENc,IAAMD,GAFA,gBAE7BE,EAF6B,EAE7BA,KACO,MAHsB,EAEvBC,QACQD,EAAKA,MACnBE,EAAU,CACdC,KAAM,oBACNC,SAAUJ,EAAKA,KAAKK,KAAI,SAAAC,GACtB,MAAO,CACLC,GAAID,EAAKC,GACTJ,KAAM,UACNK,WAAY,EAAF,GACRC,QAASH,EAAKI,MACXhC,GACA4B,EAAKK,SAEVC,SAAU,CACRT,KAAM,UACNU,YAAaC,KAAKC,MAAMT,EAAKU,eAKrC7B,EAAWe,GACXjB,GAAa,KAGbA,GAAa,GAEbE,EAAW,CACTgB,KAAM,oBACNC,SAAU,MA9BuB,2CAAD,sDAiCnC,IAiBH,OAPAa,gBAAU,WAAM,MACd,GAAI7B,SAAJ,UAAIA,EAAO8B,kBAAX,OAAI,EAAmBC,MAAO,OACtBC,EAVe,WAAa,IAAZC,EAAY,uDAAP,GAC7B,IAAKA,EAAI,MAAO,GAChB,IACMC,EADYD,EAAGE,MAAM,MACFlB,KAAI,SAAAC,GAAI,OAAIA,EAAKkB,QAAQ,IAAK,QAAMC,KAAK,KAClE,iBAAWH,GAMWI,CAAiBtC,aAAD,EAACA,EAAOuC,eAC5C/B,GAAmBR,SAAA,UAAAA,EAAO8B,kBAAP,eAAmBC,OAAQC,MAE/C,CAAChC,IAGF,gBAAC,IAAD,CACEwC,mBAAmB,EACnB5B,KAAMd,EACN2C,MAjEuB,SAAAC,GAEzB,IAAQvB,EAAOuB,EAAEC,OAAOC,QAAhBzB,GACFT,EAAMT,EAAQ4C,OAAOT,QAAQ,SAAUjB,GACzB,SAAhBlB,EAAQ6C,IACVC,OAAOC,KAAKtC,EAAK,UACQ,SAAhBT,EAAQ6C,KACjBtC,EAAmBE,IA2DnBd,UAAWA,EACXqD,MAAO,CACLC,cAAeH,OAAOI,aAAaC,WAAa,OAAS,OACzDC,OAAQ/C,EAAagD,KAAOhD,EAAaiD,KACzCC,UAAWjD,EAAakD,IAAMlD,EAAagD,KAC3CG,aAAcnD,EAAaoD,OAASpD,EAAagD,KACjDK,WAAYrD,EAAasD,KAAOtD,EAAagD,KAC7CO,YAAavD,EAAawD,MAAQxD,EAAagD,MAEjDS,YAAY,EACZC,aAAc/D,EACdC,MAAOA,EACP+D,OAAQ,CAAC9D,EAAKC","file":"AltrpMap.784c8700d530e9c94e49.bundle.js","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport MapDesigner from \"./MapDesigner\";\r\n\r\nconst defaultOptions = {\r\n  fillColor: \"#3388ff\",\r\n  fillOpacity: 0.5,\r\n  color: \"#3388ff\"\r\n};\r\n\r\nfunction AltrpMap({ settings }) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [geoJson, setGeoJson] = useState({});\r\n  const {\r\n    query,\r\n    handler,\r\n    canvas,\r\n    zoom,\r\n    lat,\r\n    lng,\r\n    style_height = {},\r\n    style_margin = {}\r\n  } = settings;\r\n\r\n  const handleClickPolygon = e => {\r\n    // Получаем ID объекта на карте\r\n    const { id } = e.target.feature;\r\n    const url = handler.params.replace(\"{{id}}\", id);\r\n    if (handler.evt === \"goto\") {\r\n      window.open(url, \"_blank\");\r\n    } else if (handler.evt === \"load\") {\r\n      composeDynamicData(url);\r\n    }\r\n  };\r\n\r\n  const composeDynamicData = useCallback(async url => {\r\n    setIsLoading(true);\r\n    const { data, status } = await axios(url);\r\n    if (status === 200 && data.data) {\r\n      const geojson = {\r\n        type: \"FeatureCollection\",\r\n        features: data.data.map(item => {\r\n          return {\r\n            id: item.id,\r\n            type: \"Feature\",\r\n            properties: {\r\n              tooltip: item.name,\r\n              ...defaultOptions,\r\n              ...item.options\r\n            },\r\n            geometry: {\r\n              type: \"Polygon\",\r\n              coordinates: JSON.parse(item.polygon)\r\n            }\r\n          };\r\n        })\r\n      };\r\n      setGeoJson(geojson);\r\n      setIsLoading(false);\r\n    } else {\r\n      // Отключаем лоадер\r\n      setIsLoading(false);\r\n      // Сбрасываем полигоны\r\n      setGeoJson({\r\n        type: \"FeatureCollection\",\r\n        features: []\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const parseQueryParams = (qs = \"\") => {\r\n    if (!qs) return \"\";\r\n    const keyValues = qs.split(\"\\n\");\r\n    const result = keyValues.map(item => item.replace(\"|\", \"=\")).join(\"&\");\r\n    return `?${result}`;\r\n  };\r\n\r\n  // При изменении модели, подгружаем новые данные\r\n  useEffect(() => {\r\n    if (query?.dataSource?.value) {\r\n      const queryString = parseQueryParams(query?.defaultParams);\r\n      composeDynamicData(query?.dataSource?.value + queryString);\r\n    }\r\n  }, [query]);\r\n\r\n  return (\r\n    <MapDesigner\r\n      isTransformLatLng={true}\r\n      data={geoJson}\r\n      onTap={handleClickPolygon}\r\n      isLoading={isLoading}\r\n      style={{\r\n        pointerEvents: window.altrpHelpers.isEditor() ? 'none' : 'auto',\r\n        height: style_height.size + style_height.unit,\r\n        marginTop: style_margin.top + style_margin.unit,\r\n        marginBottom: style_margin.bottom + style_margin.unit,\r\n        marginLeft: style_margin.left + style_margin.unit,\r\n        marginRight: style_margin.right + style_margin.unit\r\n      }}\r\n      isEditable={false}\r\n      preferCanvas={canvas}\r\n      zoom={+zoom}\r\n      center={[lat, lng]}\r\n    />\r\n  );\r\n}\r\n\r\nexport default AltrpMap;\r\n"],"sourceRoot":""}