{"version":3,"sources":["webpack:///./resources/modules/admin/src/components/dashboard/services/getWidgetData.js","webpack:///./resources/modules/admin/src/components/dashboard/widgets/DynamicLineChart.js","webpack:///./resources/modules/admin/src/components/dashboard/widgets/DynamicPieChart.js","webpack:///./resources/modules/admin/src/components/dashboard/widgets/DynamicPointChart.js","webpack:///./resources/modules/admin/src/components/dashboard/widgets/EmptyWidget.js","webpack:///./resources/modules/admin/src/components/dashboard/widgets/Spinner.js","webpack:///./resources/modules/admin/src/components/dashboard/widgets/DynamicBarChart.js","webpack:///./resources/modules/admin/src/components/dashboard/widgets/DynamicTableWidget.js","webpack:///./resources/modules/admin/src/components/dashboard/WidgetDiagram.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/TypeField.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/FilterField.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/LegendField.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/LegendPositionField.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/SourceField.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/ColorSchemeField.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/VerticalTableField.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/SortDataField.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/AddWidget.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/EditWidget.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/CardWidget.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/GlobalParameter.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/AltrpDashboards.js"],"names":["queryString","obj","data","Object","keys","reduce","str","key","i","encodeURIComponent","join","console","log","getWidgetData","url","filter","params","JSON","parse","axios","status","Tooltip","regagroScheme","_","find","Schemes","value","colors","milkScheme","milkScheme2","format","widget","width","height","margin","keyIsDate","dataSource","lineWidth","pointSize","xScaleType","precision","colorScheme","curve","enableArea","enablePoints","pointColor","yMarker","yMarkerValue","yMarkerOrientation","yMarkerColor","yMarkerLabel","yMarkerWidth","xMarker","xMarkerValue","xMarkerOrientation","xMarkerColor","xMarkerLabel","xMarkerWidth","yMarkerLabelColor","xMarkerLabelColor","sort","tickRotation","bottomAxis","enableGridX","enableGridY","customColorSchemeChecker","customColors","constantsAxises","yScaleMax","widgetID","useCustomTooltips","useState","isLoading","setIsLoading","setData","getData","useCallback","length","source","charts","newData","map","item","currentKey","keyFormatted","moment","isValid","y","Number","x","id","forEach","index","sortBy","useEffect","uniq","includes","style","top","right","bottom","left","xFormat","yScale","max","type","xScale","markers","axisBottom","useMesh","tooltip","datum","enable","scheme","colorPickedHex","from","modifiers","CenteredMetric","dataWithArc","centerX","centerY","total","textAnchor","dominantBaseline","className","enableSliceLabels","innerRadius","padAngle","cornerRadius","sortByValue","enableRadialLabels","title","subTitle","legend","activeOuterRadiusOffset","activeInnerRadiusOffset","useCenteredMetric","useLinkArcLabels","useProcent","undefined","allValue","el","layers","push","customProperties","arcLinkLabelComponent","legends","anchor","direction","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","symbolShape","animate","arcLabelsComponent","label","transform","pointerEvents","Math","round","nodeSize","customStyle","text","role","groupMode","layout","reverse","enableLabel","padding","innerPadding","borderRadius","borderWidth","Spinner","EmptyWidget","indexBy","colorBy","TooltipBar","tickSize","tickPadding","legendOffset","summary","useMemo","acc","object","maxHeight","dataset","textAlign","colSpan","BAR","isDashboard","PIE","DynamicPieChart","LINE","DynamicLineChart","TABLE","POINT","DynamicPointChart","setWidget","allowedTypes","Form","as","custom","onChange","e","target","getTypeName","param","changeTitle","options","setOptions","getOptions","model","req","oldParam","findLabel","option","oldLabel","paramName","required","legendPosition","sources","name","sourceName","schemes","checked","isVertical","onAdd","setIsShow","settings","useRef","onSave","current","stringify","titleHandle","string","oldString","replace","composeSources","sql","currentSource","setTimeout","Card","ref","onFocus","onBlur","defaultValue","s","split","types","getTypesBySource","Button","variant","onClick","disabled","EditWidget","onEdited","setIsEdit","React","onDeleted","isMobile","isEdit","saveWidget","itemDom","querySelector","domtoimage","png","link","document","createElement","download","Date","getTime","href","click","Dropdown","drop","color","zIndex","background","trigger","content","props","state","this","parameter","setState","setGlobalOption","preventDefault","stopPropagation","Component","registerLocale","ru","setDefaultLocale","globalParameter","start","setFullYear","getFullYear","end","widgets","setWidgets","isShow","startDate","setStartDate","endDate","setEndDate","screen","getSettings","headers","getWidgets","myWidgets","filters","hasOwnProperty","w","animated","error","handleRemove","handleEdit","handleChangeStartDate","date","handleChangeEndDate","handleWeek","sub","weeks","handleMonth","months","closeOnScroll","popperClassName","popperPlacement","selected","selectsStart","dateFormat","showYearDropdown","minDate","selectsEnd","Nav"],"mappings":"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","file":"AltrpDashboards.60102adb2646a13db88d.bundle.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const queryString = (obj = {}) => {\r\n  let data = Object.keys(obj).reduce((str, key, i) => {\r\n    let delimiter, val;\r\n    delimiter = i === 0 ? \"?\" : \"&\";\r\n    key = encodeURIComponent(key);\r\n    val = encodeURIComponent(obj[key]);\r\n    return [str, delimiter, key, \"=\", val].join(\"\");\r\n  }, \"\");\r\n  console.log(\"RESULT ==>\", data);\r\n  return data;\r\n};\r\n\r\nexport const getWidgetData = async (url, filter) => {\r\n  let params = \"\";\r\n  if (typeof filter === \"object\") {\r\n    params = queryString(filter);\r\n  } else if (typeof filter !== \"undefined\") {\r\n    params = queryString(JSON.parse(filter));\r\n  }\r\n  try {\r\n    return await axios(url + params, {\r\n      // headers: [{ key: \"Cache-Control\", value: \"no-store\" }]\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    return { status: 500 };\r\n  }\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\nTooltip;\r\nimport Spinner from \"./Spinner\";\r\nimport EmptyWidget from \"./EmptyWidget\";\r\n\r\nimport Schemes from \"../../../../../editor/src/js/components/altrp-dashboards/settings/NivoColorSchemes\";\r\nconst regagroScheme = _.find(Schemes, { value: \"regagro\" }).colors;\r\nconst milkScheme = _.find(Schemes, { value: \"milk\" }).colors;\r\nconst milkScheme2 = _.find(Schemes, { value: \"milk2\" }).colors;\r\n\r\nimport { getWidgetData } from \"../services/getWidgetData\";\r\nimport moment from \"moment\";\r\nimport Tooltip from \"./d3/Tooltip\";\r\n\r\nconst format = \"%d.%m.%Y\";\r\n\r\nconst DynamicLineChart = ({\r\n  widget,\r\n  width = `300px`,\r\n  height = `450px`,\r\n  margin,\r\n  keyIsDate,\r\n  dataSource = [],\r\n  lineWidth = 2,\r\n  pointSize = 10,\r\n  xScaleType = \"point\",\r\n  precision = \"month\",\r\n  colorScheme = \"red_grey\",\r\n  curve = \"linear\",\r\n  enableArea = false,\r\n  enablePoints = true,\r\n  pointColor,\r\n  yMarker = false,\r\n  yMarkerValue = 0,\r\n  yMarkerOrientation = \"vertical\",\r\n  yMarkerColor,\r\n  yMarkerLabel = \"\",\r\n  yMarkerWidth = 2,\r\n  xMarker = false,\r\n  xMarkerValue = 0,\r\n  xMarkerOrientation = \"vertical\",\r\n  xMarkerColor,\r\n  xMarkerLabel = \"\",\r\n  xMarkerWidth = 2,\r\n  yMarkerLabelColor,\r\n  xMarkerLabelColor,\r\n  sort = \"\",\r\n  tickRotation = 0,\r\n  bottomAxis = true,\r\n  enableGridX = true,\r\n  enableGridY = true,\r\n  customColorSchemeChecker = false,\r\n  customColors = [],\r\n  constantsAxises = [],\r\n  yScaleMax,\r\n  widgetID,\r\n  useCustomTooltips\r\n}) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const getData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    if (dataSource.length == 0) {\r\n      const charts = await getWidgetData(widget.source, widget.filter);\r\n      if (charts.status === 200) {\r\n        const newData = charts.data.data.map(item => {\r\n          const currentKey = item.key;\r\n          const keyFormatted = !moment(currentKey).isValid()\r\n            ? currentKey\r\n            : moment(currentKey).format(\"DD.MM.YYYY\");\r\n          return {\r\n            y: Number(item.data),\r\n            x: keyIsDate ? keyFormatted : currentKey\r\n          };\r\n        });\r\n        let data = [\r\n          {\r\n            id: \"\",\r\n            data: newData\r\n          }\r\n        ];\r\n        setData(data || []);\r\n        setIsLoading(false);\r\n      }\r\n    } else {\r\n      if (\r\n        sort !== null &&\r\n        sort !== \"undefined\" &&\r\n        typeof dataSource !== \"undefined\"\r\n      ) {\r\n        switch (sort) {\r\n          case \"value\":\r\n            dataSource.forEach((item, index) => {\r\n              if (item.data.length > 0) {\r\n                dataSource[index].data = _.sortBy(item.data, [\"y\"]);\r\n              }\r\n            });\r\n            break;\r\n          case \"key\":\r\n            data.forEach((item, index) => {\r\n              if (item.data.length > 0) {\r\n                dataSource[index].data = _.sortBy(item.data, [\"x\"]);\r\n              }\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      setData(dataSource || []);\r\n      setIsLoading(false);\r\n    }\r\n  }, [widget]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  if (isLoading) return <Spinner />;\r\n\r\n  let matches = [];\r\n  let isNotEmpty = false;\r\n\r\n  matches = _.uniq(\r\n    data.map(item => {\r\n      return item.data.length > 0;\r\n    })\r\n  );\r\n\r\n  isNotEmpty = matches.includes(true);\r\n  if (!isNotEmpty) return <EmptyWidget />;\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          width: width,\r\n          height: height\r\n        }}\r\n      >\r\n        <ResponsiveLine\r\n          data={data}\r\n          margin={{\r\n            top: margin?.top || 30,\r\n            right: margin?.right || 30,\r\n            bottom: margin?.bottom || 30,\r\n            left: margin?.left || 30\r\n          }}\r\n          xFormat={xScaleType === \"time\" && \"time:%d.%m.%Y\"}\r\n          yScale={\r\n            yScaleMax\r\n              ? {\r\n                  max: yScaleMax,\r\n                  type: \"linear\"\r\n                }\r\n              : {\r\n                  type: \"linear\"\r\n                }\r\n          }\r\n          xScale={\r\n            xScaleType === \"time\"\r\n              ? { type: xScaleType, format: format, precision: precision }\r\n              : { type: xScaleType }\r\n          }\r\n          lineWidth={lineWidth}\r\n          markers={constantsAxises}\r\n          enableGridX={enableGridX}\r\n          enableGridY={enableGridY}\r\n          axisBottom={\r\n            bottomAxis &&\r\n            (xScaleType === \"time\"\r\n              ? {\r\n                  format: format,\r\n                  tickRotation: tickRotation\r\n                }\r\n              : {\r\n                  tickRotation: tickRotation\r\n                })\r\n          }\r\n          useMesh={true}\r\n          enableArea={enableArea}\r\n          enablePoints={enablePoints}\r\n          tooltip={datum => {\r\n            console.log(\"====================================\");\r\n            console.log(datum);\r\n            console.log(\"====================================\");\r\n            return (\r\n              <Tooltip\r\n                keyIsDate={keyIsDate}\r\n                datum={datum}\r\n                enable={useCustomTooltips}\r\n                widgetID={widgetID}\r\n              />\r\n            );\r\n          }}\r\n          pointSize={pointSize}\r\n          curve={curve}\r\n          colors={\r\n            customColorSchemeChecker && customColors.length > 0\r\n              ? customColors\r\n              : colorScheme === \"regagro\"\r\n              ? regagroScheme\r\n              : colorScheme === \"milk\"\r\n              ? milkScheme\r\n              : colorScheme === \"milk2\"\r\n              ? milkScheme2\r\n              : { scheme: colorScheme }\r\n          }\r\n          pointColor={\r\n            typeof pointColor !== \"undefined\" && pointColor !== null\r\n              ? pointColor.colorPickedHex\r\n              : { from: \"color\", modifiers: [] }\r\n          }\r\n          // legends={[\r\n          //   {\r\n          //     anchor: \"bottom-right\",\r\n          //     direction: \"column\",\r\n          //     justify: false,\r\n          //     translateX: 130,\r\n          //     translateY: 0,\r\n          //     itemsSpacing: 0,\r\n          //     itemDirection: \"left-to-right\",\r\n          //     itemWidth: 120,\r\n          //     itemHeight: 20,\r\n          //     itemOpacity: 0.75,\r\n          //     symbolSize: 12,\r\n          //     symbolShape: \"circle\",\r\n          //     symbolBorderColor: \"rgba(0, 0, 0, .5)\",\r\n          //     effects: [\r\n          //       {\r\n          //         on: \"hover\",\r\n          //         style: {\r\n          //           itemBackground: \"rgba(0, 0, 0, .03)\",\r\n          //           itemOpacity: 1\r\n          //         }\r\n          //       }\r\n          //     ]\r\n          //   }\r\n          // ]}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DynamicLineChart;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { ResponsivePie } from \"@nivo/pie\";\r\nimport Spinner from \"./Spinner\";\r\nimport EmptyWidget from \"./EmptyWidget\";\r\n\r\nimport Schemes from \"../../../../../editor/src/js/components/altrp-dashboards/settings/NivoColorSchemes\";\r\nconst regagroScheme = _.find(Schemes, { value: \"regagro\" }).colors;\r\nconst milkScheme = _.find(Schemes, { value: \"milk\" }).colors;\r\nconst milkScheme2 = _.find(Schemes, { value: \"milk2\" }).colors;\r\n\r\nimport { getWidgetData } from \"../services/getWidgetData\";\r\nimport moment from \"moment\";\r\nimport { animated } from '@react-spring/web'\r\nimport TooltipPie from \"./d3/TooltipPie\";\r\n\r\nconst CenteredMetric = ({ dataWithArc, centerX, centerY }) => {\r\n  let total = 0\r\n  dataWithArc.forEach(datum => {\r\n      total += datum.value\r\n  })\r\n\r\n  return (\r\n    <svg>\r\n      <text\r\n          x={centerX}\r\n          y={centerY}\r\n          textAnchor=\"middle\"\r\n          dominantBaseline=\"central\"\r\n          className='centered-metric'\r\n      >\r\n        {total}\r\n      </text>\r\n    </svg>\r\n  )\r\n}\r\n\r\nconst DynamicPieChart = ({\r\n  widget,\r\n  width = \"300px\",\r\n  height = \"450px\",\r\n  dataSource = [],\r\n  colorScheme = \"red_grey\",\r\n  enableSliceLabels = false,\r\n  innerRadius = 0,\r\n  padAngle = 0,\r\n  cornerRadius = 0,\r\n  sortByValue = 0,\r\n  enableRadialLabels = true,\r\n  sort = \"\",\r\n  tickRotation = 0,\r\n  bottomAxis = true,\r\n  keyIsDate = false,\r\n  customColorSchemeChecker = false,\r\n  customColors = [],\r\n  widgetID,\r\n  useCustomTooltips,\r\n  margin,\r\n  title,\r\n  subTitle,\r\n  legend,\r\n  activeOuterRadiusOffset,\r\n  activeInnerRadiusOffset,\r\n  useCenteredMetric,\r\n  useLinkArcLabels,\r\n  useProcent\r\n}) => {\r\n  if (legend) {\r\n    Object.keys(legend).forEach(key => legend[key] === undefined && delete legend[key])\r\n  }\r\n\r\n  let allValue = 0;\r\n\r\n  dataSource.forEach(el => allValue += el.value)\r\n  \r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const getData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    if (dataSource.length == 0) {\r\n      const charts = await getWidgetData(widget.source, widget.filter);\r\n      if (charts.status === 200) {\r\n        const newData = charts.data.data.map(item => {\r\n          const currentKey = item.key;\r\n          const keyFormatted = !moment(currentKey).isValid()\r\n            ? currentKey\r\n            : moment(currentKey).format(\"DD.MM.YYYY\");\r\n\r\n          return {\r\n            value: Number(item.data),\r\n            id: keyIsDate ? keyFormatted : currentKey\r\n          };\r\n        });\r\n        let data = newData;\r\n        setData(data || []);\r\n        setIsLoading(false);\r\n      }\r\n    } else {\r\n      if (\r\n        sort !== null &&\r\n        sort !== \"undefined\" &&\r\n        typeof dataSource !== \"undefined\"\r\n      ) {\r\n        switch (sort) {\r\n          case \"value\":\r\n            dataSource = _.sortBy(dataSource, [\"value\"]);\r\n            break;\r\n          case \"key\":\r\n            dataSource = _.sortBy(dataSource, [\"id\"]);\r\n            break;\r\n          default:\r\n            dataSource = dataSource;\r\n            break;\r\n        }\r\n      }\r\n      setData(dataSource || []);\r\n      setIsLoading(false);\r\n    }\r\n  }, [widget]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  const clickHandler = async () => {\r\n\r\n  }\r\n\r\n  const layers = ['arcs', 'arcLabels', 'arcLinkLabels', 'legends']\r\n\r\n  if (useCenteredMetric) {\r\n    layers.push(CenteredMetric)\r\n  }\r\n\r\n  const customProperties = {}\r\n\r\n  if (!useLinkArcLabels) {\r\n    customProperties.arcLinkLabelComponent = () => <text />\r\n  }\r\n\r\n  if (isLoading) return <Spinner />;\r\n\r\n  if (!data || data.length === 0) return <EmptyWidget />;\r\n\r\n  return (\r\n    <>\r\n      {title && <h3 className='diagram-title' style={{margin: 0}}>{title}</h3>}\r\n      {subTitle && <h5 className='diagram-subtitle' style={{margin: 0}}>{subTitle}</h5>}\r\n      <div className='diagram' style={{ height: height, width: width }}>\r\n        <ResponsivePie\r\n          data={data}\r\n          colors={\r\n            customColorSchemeChecker && customColors.length > 0\r\n              ? customColors\r\n              : colorScheme === \"regagro\"\r\n              ? regagroScheme\r\n              : colorScheme === \"milk\"\r\n              ? milkScheme\r\n              : colorScheme === \"milk2\"\r\n              ? milkScheme2\r\n              : { scheme: colorScheme }\r\n          }\r\n          tooltip={datum => (\r\n            <TooltipPie\r\n              enable={useCustomTooltips}\r\n              datum={datum}\r\n              data={data}\r\n              widgetID={widgetID}\r\n            ></TooltipPie>\r\n          )}\r\n          cornerRadius={cornerRadius}\r\n          sortByValue={sortByValue}\r\n          axisBottom={\r\n            bottomAxis && {\r\n              tickRotation: tickRotation\r\n            }\r\n          }\r\n          margin={margin}\r\n          enableRadialLabels={enableRadialLabels}\r\n          legends={legend && [\r\n            {\r\n              anchor: 'top-right',\r\n              direction: 'column',\r\n              translateX: 0,\r\n              translateY: 0,\r\n              itemsSpacing: 2,\r\n              itemWidth: 60,\r\n              itemHeight: 14,\r\n              itemDirection: \"left-to-right\",\r\n              itemOpacity: 1,\r\n              symbolSize: 14,\r\n              symbolShape: \"circle\",\r\n              ...legend\r\n            }\r\n          ]}\r\n          innerRadius={innerRadius}\r\n          enableSliceLabels={enableSliceLabels}\r\n          padAngle={padAngle}\r\n          animate={true}\r\n          activeOuterRadiusOffset={activeOuterRadiusOffset}\r\n          activeInnerRadiusOffset={activeInnerRadiusOffset}\r\n          layers={layers}\r\n          arcLabelsComponent={({ datum, label, style }) => {\r\n            console.log({datum});\r\n            return <animated.g transform={style.transform} style={{ pointerEvents: 'none' }}>\r\n                <text\r\n                    textAnchor=\"middle\"\r\n                    dominantBaseline=\"central\"\r\n                    className=\"arc-label\"\r\n                >\r\n                    {label} {useProcent ?  ` (${Math.round((label / allValue) * 100)}%)` : ''}\r\n                </text>\r\n            </animated.g>\r\n          }}\r\n          {...customProperties}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DynamicPieChart;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nimport { ResponsiveScatterPlot } from \"@nivo/scatterplot\";\r\n\r\nimport Schemes from \"../../../../../editor/src/js/components/altrp-dashboards/settings/NivoColorSchemes\";\r\nconst regagroScheme = _.find(Schemes, { value: \"regagro\" }).colors;\r\nconst milkScheme = _.find(Schemes, { value: \"milk\" }).colors;\r\nconst milkScheme2 = _.find(Schemes, { value: \"milk2\" }).colors;\r\n\r\nimport EmptyWidget from \"./EmptyWidget\";\r\n\r\nimport { getWidgetData } from \"../services/getWidgetData\";\r\nimport { customStyle } from \"../widgetTypes\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport Tooltip from \"./d3/TooltipScatter\";\r\n\r\nimport moment from \"moment\";\r\nconst format = \"%d.%m.%Y\";\r\n\r\nconst PointChart = ({\r\n  widget,\r\n  width = `300px`,\r\n  height = `450px`,\r\n  dataSource = [],\r\n  xScaleType = \"point\",\r\n  colorScheme = \"red_grey\",\r\n  nodeSize = 6,\r\n  sort = \"\",\r\n  tickRotation = 0,\r\n  bottomAxis = true,\r\n  precision,\r\n  enableGridX = true,\r\n  enableGridY = true,\r\n  keyIsDate = false,\r\n  customColorSchemeChecker = false,\r\n  customColors = [],\r\n  constantsAxises = [],\r\n  yScaleMax,\r\n  widgetID,\r\n  useCustomTooltips,\r\n  margin\r\n}) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const size = 4;\r\n  const fill = customStyle[0];\r\n  const getData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    if (dataSource.length == 0) {\r\n      const charts = await getWidgetData(widget.source, widget.filter);\r\n      if (charts.status === 200 && typeof charts.data !== \"string\") {\r\n        const newData = charts.data.data.map(item => {\r\n          const currentKey = item.key;\r\n          const keyFormatted = !moment(currentKey).isValid()\r\n            ? currentKey\r\n            : moment(currentKey).format(\"DD.MM.YYYY\");\r\n          return {\r\n            y: Number(item.data),\r\n            x: keyIsDate ? keyFormatted : currentKey\r\n          };\r\n        });\r\n        let data = [\r\n          {\r\n            id: \"\",\r\n            data: newData\r\n          }\r\n        ];\r\n        setData(data);\r\n        setIsLoading(false);\r\n      }\r\n    } else {\r\n      if (\r\n        sort !== null &&\r\n        sort !== \"undefined\" &&\r\n        typeof dataSource !== \"undefined\"\r\n      ) {\r\n        switch (sort) {\r\n          case \"value\":\r\n            dataSource.forEach((item, index) => {\r\n              if (item.data.length > 0) {\r\n                dataSource[index].data = _.sortBy(item.data, [\"y\"]);\r\n              }\r\n            });\r\n            break;\r\n          case \"key\":\r\n            data.forEach((item, index) => {\r\n              if (item.data.length > 0) {\r\n                dataSource[index].data = _.sortBy(item.data, [\"x\"]);\r\n              }\r\n            });\r\n            break;\r\n\r\n          default:\r\n            // data = data;\r\n            break;\r\n        }\r\n      }\r\n      setData(dataSource || []);\r\n      setIsLoading(false);\r\n    }\r\n  }, [widget]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  if (isLoading) return <Spinner />;\r\n\r\n  let matches = [];\r\n  let isNotEmpty = false;\r\n\r\n  matches = _.uniq(\r\n    data.map(item => {\r\n      return item.data.length > 0;\r\n    })\r\n  );\r\n\r\n  isNotEmpty = matches.includes(true);\r\n  if (!isNotEmpty) return <EmptyWidget />;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          width: width,\r\n          height: height\r\n        }}\r\n      >\r\n        <ResponsiveScatterPlot\r\n          data={data}\r\n          colors={\r\n            customColorSchemeChecker && customColors.length > 0\r\n              ? customColors\r\n              : colorScheme === \"regagro\"\r\n              ? regagroScheme\r\n              : colorScheme === \"milk\"\r\n              ? milkScheme\r\n              : colorScheme === \"milk2\"\r\n              ? milkScheme2\r\n              : { scheme: colorScheme }\r\n          }\r\n          yScale={\r\n            yScaleMax\r\n              ? {\r\n                  max: yScaleMax,\r\n                  type: \"linear\"\r\n                }\r\n              : {\r\n                  type: \"linear\"\r\n                }\r\n          }\r\n          markers={constantsAxises}\r\n          margin={{\r\n            top: margin?.top || 30,\r\n            right: margin?.right || 30,\r\n            bottom: margin?.bottom || 30,\r\n            left: margin?.left || 30\r\n          }}\r\n          xFormat={xScaleType === \"time\" && \"time:%d.%m.%Y\"}\r\n          nodeSize={nodeSize}\r\n          xScale={\r\n            xScaleType === \"time\"\r\n              ? { type: xScaleType, format: format, precision: precision }\r\n              : { type: xScaleType }\r\n          }\r\n          tooltip={datum => (\r\n            <Tooltip\r\n              datum={datum}\r\n              enable={useCustomTooltips}\r\n              widgetID={widgetID}\r\n            />\r\n          )}\r\n          enableGridX={enableGridX}\r\n          enableGridY={enableGridY}\r\n          axisBottom={\r\n            bottomAxis &&\r\n            (xScaleType === \"time\"\r\n              ? {\r\n                  format: format,\r\n                  tickRotation: tickRotation\r\n                }\r\n              : {\r\n                  tickRotation: tickRotation\r\n                })\r\n          }\r\n          colors={\r\n            customColorSchemeChecker && customColors.length > 0\r\n              ? customColors\r\n              : colorScheme === \"regagro\"\r\n              ? regagroScheme\r\n              : colorScheme === \"milk\"\r\n              ? milkScheme\r\n              : colorScheme === \"milk2\"\r\n              ? milkScheme2\r\n              : { scheme: colorScheme }\r\n          }\r\n          // legends={[\r\n          //   {\r\n          //     anchor: \"bottom-right\",\r\n          //     direction: \"column\",\r\n          //     justify: false,\r\n          //     translateX: 130,\r\n          //     translateY: 0,\r\n          //     itemsSpacing: 0,\r\n          //     itemDirection: \"left-to-right\",\r\n          //     itemWidth: 120,\r\n          //     itemHeight: 20,\r\n          //     itemOpacity: 0.75,\r\n          //     symbolSize: 12,\r\n          //     symbolShape: \"circle\",\r\n          //     symbolBorderColor: \"rgba(0, 0, 0, .5)\",\r\n          //     effects: [\r\n          //       {\r\n          //         on: \"hover\",\r\n          //         style: {\r\n          //           itemBackground: \"rgba(0, 0, 0, .03)\",\r\n          //           itemOpacity: 1\r\n          //         }\r\n          //       }\r\n          //     ]\r\n          //   }\r\n          // ]}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default PointChart;\r\n","import React from \"react\";\r\n\r\nconst EmptyWidget = ({ text }) => {\r\n  return (\r\n    <div className=\"spinner-container\">\r\n      <div className=\"spinner-container__text\">{text ? text : \"Данные обрабатываются\"}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyWidget;\r\n","import React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner-container\">\r\n      <div\r\n        className=\"spinner-border\"\r\n        style={{ width: \"3rem\", height: \"3rem\" }}\r\n        role=\"status\"\r\n      >\r\n        <span className=\"sr-only\">Загрузка...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nimport Spinner from \"./Spinner\";\r\nimport EmptyWidget from \"./EmptyWidget\";\r\n\r\nimport Schemes from \"../../../../../editor/src/js/components/altrp-dashboards/settings/NivoColorSchemes\";\r\nconst regagroScheme = _.find(Schemes, { value: \"regagro\" }).colors;\r\nconst milkScheme = _.find(Schemes, { value: \"milk\" }).colors;\r\nconst milkScheme2 = _.find(Schemes, { value: \"milk2\" }).colors;\r\n\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\n\r\nimport { getWidgetData } from \"../services/getWidgetData\";\r\nimport TooltipBar from \"./d3/TooltipBar\";\r\n\r\nconst DynamicBarChart = ({\r\n  widget,\r\n  width = 300,\r\n  height = 450,\r\n  dataSource = [],\r\n  groupMode = \"stacked\",\r\n  layout = \"vertical\",\r\n  colorScheme = \"regagro\",\r\n  reverse = false,\r\n  enableLabel = false,\r\n  padding = 0.1,\r\n  innerPadding = 0,\r\n  borderRadius = 0,\r\n  borderWidth = 0,\r\n  sort = \"\",\r\n  tickRotation = 0,\r\n  bottomAxis = true,\r\n  enableGridX = true,\r\n  enableGridY = true,\r\n  customColorSchemeChecker = false,\r\n  customColors = [],\r\n  yScaleMax,\r\n  widgetID,\r\n  useCustomTooltips\r\n}) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const getData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    if (dataSource.length == 0) {\r\n      const charts = await getWidgetData(widget.source, widget.filter);\r\n      if (charts.status === 200) {\r\n        let data = charts.data.data.map((item, index) => {\r\n          return {\r\n            [item.key]: Number(item.data),\r\n            key: item.key,\r\n            value: Number(item.data)\r\n          };\r\n        });\r\n        setData(data || []);\r\n        setIsLoading(false);\r\n      }\r\n    } else {\r\n      if (\r\n        sort !== null &&\r\n        typeof sort !== \"undefined\" &&\r\n        typeof dataSource !== \"undefined\"\r\n      ) {\r\n        switch (sort) {\r\n          case \"value\":\r\n            dataSource = _.sortBy(dataSource, [\"value\"]);\r\n            break;\r\n          case \"key\":\r\n            dataSource = _.sortBy(dataSource, [\"key\"]);\r\n            break;\r\n          default:\r\n            dataSource = dataSource;\r\n            break;\r\n        }\r\n      }\r\n      setData(dataSource || []);\r\n      setIsLoading(false);\r\n    }\r\n  }, [widget]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  if (isLoading) return <Spinner />;\r\n\r\n  if (data.length === 0) return <EmptyWidget />;\r\n  console.log(\"====================================\");\r\n  console.log(colorScheme);\r\n  console.log(\"====================================\");\r\n  return (\r\n    <>\r\n      <div style={{ height: `${height}px` }}>\r\n        <ResponsiveBar\r\n          data={data}\r\n          margin={{\r\n            top: 30,\r\n            right: 30,\r\n            bottom: 30,\r\n            left: 30\r\n          }}\r\n          indexBy=\"key\"\r\n          colors={\r\n            customColorSchemeChecker && customColors.length > 0\r\n              ? customColors\r\n              : colorScheme === \"regagro\"\r\n              ? regagroScheme\r\n              : colorScheme === \"milk\"\r\n              ? milkScheme\r\n              : colorScheme === \"milk2\"\r\n              ? milkScheme2\r\n              : { scheme: colorScheme }\r\n          }\r\n          colorBy=\"index\"\r\n          layout={layout}\r\n          axisBottom={\r\n            bottomAxis && {\r\n              tickRotation: tickRotation\r\n            }\r\n          }\r\n          tooltip={datum => (\r\n            <TooltipBar\r\n              enable={useCustomTooltips}\r\n              datum={datum}\r\n              widgetID={widgetID}\r\n            ></TooltipBar>\r\n          )}\r\n          enableGridX={enableGridX}\r\n          enableGridY={enableGridY}\r\n          enableLabel={enableLabel}\r\n          reverse={reverse}\r\n          groupMode={groupMode}\r\n          padding={padding}\r\n          innerPadding={innerPadding}\r\n          borderRadius={borderRadius}\r\n          borderWidth={borderWidth}\r\n          axisBottom={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: \"key\",\r\n            legendOffset: 32\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DynamicBarChart;\r\n","import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\n\r\nimport Spinner from \"./Spinner\";\r\nimport EmptyWidget from \"./EmptyWidget\";\r\n\r\nimport { getWidgetData } from \"../services/getWidgetData\";\r\nimport moment from \"moment\";\r\n\r\nconst DynamicTableWidget = ({\r\n  widget,\r\n  width,\r\n  keyIsDate,\r\n  dataSource = [],\r\n  height = 450,\r\n  sort = \"\",\r\n  tickRotation = 0\r\n}) => {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const getData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    if (dataSource.length == 0) {\r\n      const charts = await getWidgetData(widget.source, widget.filter);\r\n      if (charts.status === 200 && typeof charts.data !== \"string\") {\r\n        const newData = charts.data.data.map(item => {\r\n          const currentKey = item.key;\r\n          const keyFormatted = !moment(currentKey).isValid()\r\n            ? currentKey\r\n            : moment(currentKey).format(\"DD.MM.YYYY\");\r\n          return {\r\n            y: Number(item.data),\r\n            x: keyIsDate ? keyFormatted : currentKey\r\n          };\r\n        });\r\n        let data = [\r\n          {\r\n            id: \"\",\r\n            data: newData\r\n          }\r\n        ];\r\n        setData(data);\r\n        setIsLoading(false);\r\n      }\r\n    } else {\r\n      if (\r\n        sort !== null &&\r\n        sort !== \"undefined\" &&\r\n        typeof dataSource !== \"undefined\"\r\n      ) {\r\n        switch (sort) {\r\n          case \"value\":\r\n            dataSource.forEach((item, index) => {\r\n              if (item.data.length > 0) {\r\n                dataSource[index].data = _.sortBy(item.data, [\"y\"]);\r\n              }\r\n            });\r\n            break;\r\n          case \"key\":\r\n            data.forEach((item, index) => {\r\n              if (item.data.length > 0) {\r\n                dataSource[index].data = _.sortBy(item.data, [\"x\"]);\r\n              }\r\n            });\r\n            break;\r\n\r\n          default:\r\n            // data = data;\r\n            break;\r\n        }\r\n      }\r\n      setData(dataSource || []);\r\n      setIsLoading(false);\r\n    }\r\n  }, [widget]);\r\n\r\n  const summary = useMemo(\r\n    () =>\r\n      data\r\n        .map(item => item.data.reduce((acc, object) => acc + object.y, 0))\r\n        .reduce((acc, item) => acc + item, 0),\r\n    [data]\r\n  );\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  if (isLoading) return <Spinner />;\r\n\r\n  let matches = [];\r\n  let isNotEmpty = false;\r\n\r\n  matches = _.uniq(\r\n    data.map(item => {\r\n      return item.data.length > 0;\r\n    })\r\n  );\r\n\r\n  isNotEmpty = matches.includes(true);\r\n  if (!isNotEmpty) return <EmptyWidget />;\r\n\r\n  return (\r\n    <div className=\"widget-table\" style={{ maxHeight: `${height}px` }}>\r\n      <table className=\"vertical-table\">\r\n        <tbody>\r\n          {data.map((item, key) => {\r\n            const dataset = item.data.map((object, index) => {\r\n              return (\r\n                <tr key={`${key}${index}`}>\r\n                  <td>{object.x}</td>\r\n                  <td>{object.y}</td>\r\n                </tr>\r\n              );\r\n            });\r\n            return (\r\n              <React.Fragment key={key}>\r\n                <tr key={key} style={{ textAlign: \"center\" }}>\r\n                  <td colSpan={2}>{item.id}</td>\r\n                </tr>\r\n                {dataset}\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n          <tr>\r\n            <td>ИТОГО</td>\r\n            <td>{summary}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicTableWidget;\r\n","import React from \"react\";\r\n\r\nimport { BAR, PIE, LINE, TABLE, POINT } from \"./widgetTypes\";\r\n\r\nimport DynamicBarChart from \"./widgets/DynamicBarChart\";\r\nimport DynamicPieChart from \"./widgets/DynamicPieChart\";\r\nimport DynamicLineChart from \"./widgets/DynamicLineChart\";\r\nimport DynamicTableWidget from \"./widgets/DynamicTableWidget\";\r\nimport DynamicPointChart from \"./widgets/DynamicPointChart\";\r\n\r\nconst WidgetDiagram = ({ widget, width = 350, height = 450 }) => {\r\n  switch (widget.type) {\r\n    case BAR:\r\n      return (\r\n        <DynamicBarChart\r\n          width={width}\r\n          height={height}\r\n          widget={widget}\r\n          isDashboard={true}\r\n        />\r\n      );\r\n    case PIE:\r\n      return (\r\n        <DynamicPieChart\r\n          width={width}\r\n          height={height}\r\n          widget={widget}\r\n          isDashboard={true}\r\n        />\r\n      );\r\n    case LINE:\r\n      return (\r\n        <DynamicLineChart\r\n          width={width}\r\n          height={height}\r\n          widget={widget}\r\n          isDashboard={true}\r\n        />\r\n      );\r\n    case TABLE:\r\n      return (\r\n        <DynamicTableWidget\r\n          width={width}\r\n          height={height}\r\n          widget={widget}\r\n          isDashboard={true}\r\n        />\r\n      );\r\n    case POINT:\r\n      return (\r\n        <DynamicPointChart\r\n          width={width}\r\n          height={height}\r\n          widget={widget}\r\n          isDashboard={true}\r\n        />\r\n      );\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n\r\nexport default WidgetDiagram;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { getTypeName } from \"../../../../../../admin/src/components/dashboard/widgetTypes\";\r\n\r\nfunction TypeField({ widget, setWidget, allowedTypes }) {\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>Тип виджета</Form.Label>\r\n      <Form.Control\r\n        as=\"select\"\r\n        custom\r\n        value={widget.type}\r\n        onChange={(e) => setWidget({ ...widget, type: e.target.value })}\r\n      >\r\n        {allowedTypes.map((value, key) => (\r\n          <option key={key} value={value}>\r\n            {getTypeName(value)}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default TypeField;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport axios from \"axios\";\r\n\r\nfunction FilterField({ widget, setWidget, param, changeTitle }) {\r\n  const [options, setOptions] = useState([]);\r\n  //const [selected, setSelected] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const getOptions = useCallback(\r\n    async (param) => {\r\n      console.log('KOSTYA =>', param);\r\n      setIsLoading(true);\r\n      const req = await axios(`/ajax/models/queries/${param.model}/${param.value}`);\r\n      if (req.status === 200) {\r\n        console.log(req.data.data);\r\n        setOptions(req.data.data);\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    [param]\r\n  );\r\n\r\n  useEffect(() => {\r\n    options.length === 0 && getOptions(param);\r\n  }, [param]);\r\n\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>{param.label}</Form.Label>\r\n      <Form.Control\r\n        as=\"select\"\r\n        custom\r\n        value={widget.filter?.[param.value] || \"\"}\r\n        onChange={(e) => {\r\n          let oldParam = widget.filter[param.value] || {};\r\n          let findLabel = options.find(option => option.value == oldParam);\r\n          let oldLabel = typeof findLabel !== 'undefined' ? findLabel.label : false;\r\n          console.log(oldLabel, '<---');\r\n          setWidget({ ...widget, filter: { ...widget.filter, [param.value]: e.target.value } })\r\n          let paramName = options.find(option => option.value == e.target.value).label || '';\r\n          changeTitle(` / ${paramName}`, ` / ${oldLabel}`);\r\n        }\r\n        }\r\n        required\r\n      >\r\n        <option value=\"\">-</option>\r\n        {options.map(({ value, label }) => (\r\n          <option key={value} value={value}>\r\n            {label}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default FilterField;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nfunction LegendField({ widget, setWidget }) {\r\n  return (\r\n    <Form.Group className=\"d-none\">\r\n      <Form.Label>Легенда</Form.Label>\r\n      <Form.Control\r\n        as=\"select\"\r\n        custom\r\n        value={widget.options.legend}\r\n        onChange={(e) =>\r\n          setWidget({\r\n            ...widget,\r\n            options: { ...widget.options, legend: e.target.value },\r\n          })\r\n        }\r\n        required\r\n      >\r\n        <option value=\"\">Не показывать</option>\r\n        <option value=\"horizontal\">Горизонтальная</option>\r\n        <option value=\"vertical\">Вертикальная</option>\r\n      </Form.Control>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default LegendField;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nfunction LegendPositionField({ widget, setWidget }) {\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>Положение легенды</Form.Label>\r\n      <Form.Control\r\n        as=\"select\"\r\n        custom\r\n        value={widget.options.legendPosition}\r\n        onChange={(e) =>\r\n          setWidget({\r\n            ...widget,\r\n            options: { ...widget.options, legendPosition: e.target.value, legend: e.target.value == 'left' || e.target.value == 'right' ? 'vertical' : 'horizontal' },\r\n          })\r\n        }\r\n        required\r\n      >\r\n        <option value=\"bottom\">Внизу</option>\r\n        <option value=\"left\">Слева</option>\r\n        <option value=\"right\">Справа</option>\r\n        <option value=\"top\">Сверху</option>\r\n      </Form.Control>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default LegendPositionField;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { queryString } from \"../helpers/queryString\";\r\n\r\nfunction SourceField({ widget, setWidget, sources, changeTitle }) {\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label className={{\r\n        'd-none': sources.length === 1\r\n      }}>{sources.length > 1 || sources.length == 0 ? \"Источник данных\" : `Источник данных: ${sources[0].name}`}</Form.Label>\r\n      <Form.Control\r\n        as=\"select\"\r\n        custom\r\n        className={{\r\n          'd-none': sources.length === 1\r\n        }}\r\n        value={widget.source}\r\n        onChange={(e) => {\r\n          setWidget({\r\n            ...widget,\r\n            source: e.target.value //+ queryString(widget.filter),\r\n          });\r\n\r\n          let sourceName = sources.find(source => source.url == e.target.value).label || '';\r\n          changeTitle(` / ${sourceName}`);\r\n        }\r\n        }\r\n        required\r\n      >\r\n        <option value=\"\">-</option>\r\n        {sources.map(({ url, name }) => (\r\n          <option key={url} value={url}>\r\n            {name}\r\n          </option>))}\r\n      </Form.Control>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default SourceField;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { schemes } from \"reaviz\";\r\n\r\nfunction ColorSchemeField({ widget, setWidget }) {\r\n  let colors = Object.keys(schemes).map((name) => {\r\n    return { label: name, value: name };\r\n  });\r\n\r\n  colors = [...colors, { label: \"Custom\", value: \"Custom\" }];\r\n  return (\r\n    <Form.Group className=\"d-none\">\r\n      <Form.Label>Цветовая схема</Form.Label>\r\n      <Form.Control\r\n        as=\"select\"\r\n        custom\r\n        value={widget.options.colorScheme}\r\n        onChange={(e) =>\r\n          setWidget({ ...widget, options: { ...widget.options, colorScheme: e.target.value } })\r\n        }\r\n        required\r\n      >\r\n        {colors.map(({ label, value }) => (\r\n          <option key={value} value={value}>\r\n            {label}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default ColorSchemeField;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nfunction VerticalTableField({ widget, setWidget }) {\r\n  return (\r\n    <Form.Group>\r\n      <Form.Check\r\n        type=\"checkbox\"\r\n        checked={widget.options.isVertical}\r\n        label=\"Вертикальная таблица\"\r\n        onChange={(e) =>\r\n          setWidget({\r\n            ...widget,\r\n            options: { ...widget.options, isVertical: e.target.checked },\r\n          })\r\n        }\r\n      />\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default VerticalTableField;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nfunction SortDataField({ widget, setWidget}) {\r\n\r\n    const sort = [\r\n        {\r\n            label: 'Без сортировки',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'По ключу',\r\n            value: 1\r\n        },\r\n        {\r\n            label: 'По значению',\r\n            value: 2\r\n        }\r\n    ]\r\n\r\n    return (<Form.Group>\r\n    <Form.Label>Сортировка данных</Form.Label>\r\n    <Form.Control\r\n      as=\"select\"\r\n      custom\r\n      value={widget.options.sort || 0}\r\n      onChange={(e) => setWidget({ ...widget, options: { ...widget.options, sort: e.target.value }})}\r\n      required\r\n    >\r\n      {sort.map(({ label, value }) => (\r\n        <option key={value} value={value}>\r\n          {label}\r\n        </option>\r\n      ))}\r\n    </Form.Control>\r\n  </Form.Group>);\r\n}\r\n\r\nexport default SortDataField;","import React, { useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { TABLE } from \"../../../../../admin/src/components/dashboard/widgetTypes\";\r\n\r\nimport WidgetDiagram from \"../../../../../admin/src/components/dashboard/WidgetDiagram\";\r\nimport TypeField from \"./fields/TypeField\";\r\nimport FilterField from \"./fields/FilterField\";\r\nimport LegendField from \"./fields/LegendField\";\r\nimport LegendPositionField from \"./fields/LegendPositionField\";\r\nimport SourceField from \"./fields/SourceField\";\r\nimport ColorSchemeField from \"./fields/ColorSchemeField\";\r\nimport VerticalTableField from \"./fields/VerticalTableField\";\r\nimport SortDataField from \"./fields/SortDataField\";\r\nimport { queryString } from \"./helpers/queryString\";\r\n\r\nconst AddWidget = ({ id, onAdd, setIsShow, settings }) => {\r\n  const [widget, setWidget] = useState({\r\n    type: TABLE,\r\n    source: \"\",\r\n    options: {\r\n      isVertical: false,\r\n      legend: \"\",\r\n      legendPosition: \"bottom\",\r\n      colorScheme: 'Custom'\r\n    },\r\n    filter: {},\r\n  });\r\n\r\n  const title = useRef(\"\");\r\n\r\n  const onSave = async () => {\r\n    const data = {\r\n      ...widget,\r\n      title: title.current.value,\r\n      options: JSON.stringify(widget.options),\r\n      filter: JSON.stringify(widget.filter),\r\n    };\r\n    console.log('ON SAVE =>', JSON.stringify(widget.options),\r\n      JSON.stringify(widget.filter));\r\n    const req = await axios.post(`/ajax/dashboards/${id}`, data);\r\n    if (req.status === 200) {\r\n      onAdd(req.data);\r\n      setIsShow(false);\r\n    }\r\n  };\r\n\r\n  const handleFocus = (e) => {\r\n    const { value } = e.target;\r\n    if (value === \"Новый виджет\") {\r\n      title.current.value = \"\";\r\n    }\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    const { value } = e.target;\r\n    if (value === \"\") {\r\n      title.current.value = \"Новый виджет\";\r\n    }\r\n  };\r\n\r\n  const getTypesBySource = (s) => {\r\n    let string = s;\r\n    string = string.includes('?') ? string.split('?')[0] : s;\r\n\r\n    const source = settings.sql?.find(\r\n      (item) => string === `/ajax/models/queries/${item.model}/${item.value}`\r\n    );\r\n    return source?.types?.map((type) => type.value) || [];\r\n  };\r\n\r\n  const titleHandle = (string, oldString = false) => {\r\n    if (title.current.value.includes(oldString)) {\r\n      title.current.value = title.current.value.replace(oldString, string);\r\n    }\r\n    if (!title.current.value.includes(string)) {\r\n      title.current.value += string;\r\n    }\r\n  }\r\n\r\n  const composeSources = (sources = []) => {\r\n    if ((!sources) || sources.length === 0) return [];\r\n\r\n    return sources.map((source) => {\r\n      return {\r\n        name: source.label,\r\n        url: `/ajax/models/queries/${source.model}/${source.value}`,\r\n      };\r\n    });\r\n  };\r\n\r\n  if (composeSources(settings.sql).length === 1) {\r\n    let currentSource = composeSources(settings.sql)[0];\r\n    // let filter = '';\r\n    // if (Object.keys(widget.filter).length !== 0) {\r\n    //   filter = queryString(widget.filter);\r\n    // }\r\n    widget.source = currentSource.url;\r\n\r\n    setTimeout(() => titleHandle(`${currentSource.name}`), 0);\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title>Добавить виджет</Card.Title>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Название виджета</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              ref={title}\r\n              onFocus={handleFocus}\r\n              onBlur={handleBlur}\r\n              defaultValue=\"\"\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          <SourceField\r\n            widget={widget}\r\n            setWidget={setWidget}\r\n            sources={composeSources(settings.sql)}\r\n            changeTitle={titleHandle}\r\n          />\r\n\r\n          <SortDataField widget={widget} setWidget={setWidget} />\r\n          \r\n          {widget.source &&\r\n            settings.filter?.length > 0 &&\r\n            settings.filter?.map((param) => (\r\n              <FilterField key={param.value} widget={widget} setWidget={setWidget} param={param}\r\n                changeTitle={titleHandle} />\r\n            ))}\r\n\r\n          <TypeField\r\n            widget={widget}\r\n            setWidget={setWidget}\r\n            allowedTypes={[...getTypesBySource(widget.source), TABLE]}\r\n          />\r\n\r\n          {widget.source && widget.type === TABLE && (\r\n            <VerticalTableField widget={widget} setWidget={setWidget} />\r\n          )}\r\n\r\n          <ColorSchemeField widget={widget} setWidget={setWidget} />\r\n\r\n\r\n          {/* <LegendField widget={widget} setWidget={setWidget} /> */}\r\n          {widget.options?.legend && <LegendPositionField widget={widget} setWidget={setWidget} />}\r\n        </Form>\r\n\r\n        <div className={`widget-placeholder altrp-chart ${widget.options?.legendPosition}`}>\r\n          {widget.source && <WidgetDiagram widget={widget} width={360} height={360} />}\r\n        </div>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Button variant=\"secondary\" onClick={() => setIsShow(false)}>\r\n          Закрыть\r\n        </Button>\r\n        <Button variant=\"warning\" onClick={onSave} disabled={widget.source === \"\"}>\r\n          Сохранить\r\n        </Button>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddWidget;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { TABLE } from \"../../../../../admin/src/components/dashboard/widgetTypes\";\r\n\r\nimport WidgetDiagram from \"../../../../../admin/src/components/dashboard/WidgetDiagram\";\r\nimport TypeField from \"./fields/TypeField\";\r\nimport LegendField from \"./fields/LegendField\";\r\nimport LegendPositionField from \"./fields/LegendPositionField\";\r\nimport FilterField from \"./fields/FilterField\";\r\nimport SourceField from \"./fields/SourceField\";\r\nimport ColorSchemeField from \"./fields/ColorSchemeField\";\r\nimport VerticalTableField from \"./fields/VerticalTableField\";\r\nimport SortDataField from \"./fields/SortDataField\";\r\nimport { queryString } from \"./helpers/queryString\";\r\n\r\nconst EditWidget = ({ data, onEdited, setIsEdit, settings }) => {\r\n  const [widget, setWidget] = useState(data);\r\n\r\n  const title = useRef(widget.title);\r\n\r\n  const onSave = async () => {\r\n    onEdited({\r\n      ...widget,\r\n      title: title.current.value,\r\n    });\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const getTypesBySource = (s) => {\r\n    let string = s;\r\n    string = string.includes('?') ? string.split('?')[0] : s;\r\n\r\n    const source =\r\n      settings &&\r\n      settings.sql?.find((item) => string === `/ajax/models/queries/${item.model}/${item.value}`);\r\n\r\n    return source?.types?.map((type) => type.value) || [];\r\n  };\r\n\r\n  const composeSources = (sources = []) => {\r\n    if ((!sources) || sources.length === 0) return [];\r\n\r\n    return sources.map((source) => {\r\n      return {\r\n        name: source.label,\r\n        url: `/ajax/models/queries/${source.model}/${source.value}`,\r\n      };\r\n    });\r\n  };\r\n\r\n  const titleHandle = (string, oldString = false) => {\r\n    if (title.current.value.includes(oldString)) {\r\n      title.current.value = title.current.value.replace(oldString, string);\r\n    }\r\n\r\n    if (!title.current.value.includes(string)) {\r\n      title.current.value += string;\r\n    }\r\n  }\r\n\r\n  if (composeSources(settings.sql).length === 1) {\r\n    let currentSource = composeSources(settings.sql)[0];\r\n    // let filter = '';\r\n    // if (Object.keys(widget.filter).length !== 0) {\r\n    // console.log(widget.filter);\r\n    // filter = queryString(widget.filter);\r\n    // }\r\n    widget.source = currentSource.url;\r\n    // widget.source = currentSource.url + filter;\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        {/* <Card.Title>Редактировать виджет</Card.Title> */}\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Название виджета</Form.Label>\r\n            <Form.Control type=\"text\" ref={title} defaultValue={widget.title} required />\r\n          </Form.Group>\r\n\r\n          <SourceField\r\n            widget={widget}\r\n            setWidget={setWidget}\r\n            sources={composeSources(settings.sql)}\r\n            changeTitle={titleHandle}\r\n          />\r\n          <SortDataField widget={widget} setWidget={setWidget} />\r\n\r\n          {widget.source &&\r\n            settings.filter?.length > 0 &&\r\n            settings.filter?.map((param) => (\r\n              <FilterField key={param.value} widget={widget} setWidget={setWidget} param={param} changeTitle={titleHandle} />\r\n            ))}\r\n\r\n          <TypeField\r\n            widget={widget}\r\n            setWidget={setWidget}\r\n            allowedTypes={[...getTypesBySource(widget.source), TABLE]}\r\n          />\r\n\r\n          {widget.source && widget.type === TABLE && (\r\n            <VerticalTableField widget={widget} setWidget={setWidget} />\r\n          )}\r\n\r\n          <ColorSchemeField widget={widget} setWidget={setWidget} />\r\n\r\n          <LegendField widget={widget} setWidget={setWidget} />\r\n          <LegendPositionField widget={widget} setWidget={setWidget} />\r\n        </Form>\r\n\r\n        <div className={`widget-placeholder altrp-chart ${widget.options?.legendPosition}`}>\r\n          {widget.source && <WidgetDiagram widget={widget} width={360} height={360} />}\r\n        </div>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Button variant=\"secondary\" onClick={() => setIsEdit(false)}>\r\n          Закрыть\r\n        </Button>\r\n        <Button variant=\"warning\" onClick={onSave} disabled={widget.source === \"\"}>\r\n          Сохранить\r\n        </Button>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default React.memo(EditWidget);\r\n","import React, { useState, useRef } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport ThreeDotsVertical from \"react-bootstrap-icons/dist/icons/three-dots-vertical\";\r\n\r\nimport GearFill from \"react-bootstrap-icons/dist/icons/sliders\";\r\nimport TrashFill from \"react-bootstrap-icons/dist/icons/trash\";\r\nimport PrinterFill from \"react-bootstrap-icons/dist/icons/printer\";\r\nimport FileEarMark from \"react-bootstrap-icons/dist/icons/cloud-download\";\r\nimport Pin from \"../../../svgs/pin.svg\";\r\n\r\nimport EditWidget from \"./EditWidget\";\r\nimport WidgetDiagram from \"../../../../../admin/src/components/dashboard/WidgetDiagram\";\r\n\r\nimport { exportComponentAsJPEG } from \"react-component-export-image\";\r\n\r\nfunction CardWidget({ widget, onDeleted, onEdited, settings, isMobile }) {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const ref = useRef(null);\r\n\r\n  const saveWidget = async () => {\r\n    const itemDom = ref.current.querySelector(\".card-body\");\r\n    const png = await domtoimage.toPng(itemDom);\r\n    const link = document.createElement(\"a\");\r\n    link.download = `widget_${new Date().getTime()}.png`;\r\n    link.href = png;\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <Card key={widget.id} ref={ref}>\r\n      <Card.Header>\r\n        <Card.Title>{widget.title}</Card.Title>\r\n        <Card.Title>\r\n          <div className=\"dropdownTogglerContainer\">\r\n            <Dropdown drop=\"left\">\r\n              <Dropdown.Toggle variant=\"light\">\r\n                <ThreeDotsVertical color=\"#7a7a7b\" />\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu\r\n                className=\"dropdownMenuToggle\"\r\n                style={{\r\n                  zIndex: 999999,\r\n                  background: \"rgba(255,255,255,1)\"\r\n                }}\r\n              >\r\n                <Dropdown.Item>\r\n                  <ReactToPrint\r\n                    trigger={() => {\r\n                      return (\r\n                        <button type=\"button\" title=\"Распечатать виджет\">\r\n                          <PrinterFill />\r\n                        </button>\r\n                      );\r\n                    }}\r\n                    content={() => ref.current}\r\n                  />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item>\r\n                  <button\r\n                    type=\"button\"\r\n                    title=\"Скачать файл\"\r\n                    onClick={saveWidget}\r\n                  >\r\n                    <FileEarMark />\r\n                  </button>\r\n                </Dropdown.Item>\r\n                <Dropdown.Item>\r\n                  <button\r\n                    type=\"button\"\r\n                    title=\"Настроить виджет\"\r\n                    onClick={() => setIsEdit(!isEdit)}\r\n                  >\r\n                    <GearFill />\r\n                  </button>\r\n                </Dropdown.Item>\r\n                <Dropdown.Item>\r\n                  <button\r\n                    type=\"button\"\r\n                    title=\"Удалить виджет\"\r\n                    onClick={() => onDeleted(widget)}\r\n                  >\r\n                    <TrashFill />\r\n                  </button>\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n        </Card.Title>\r\n      </Card.Header>\r\n      <Card.Body className={`altrp-chart ${widget.options?.legendPosition}`}>\r\n        {isEdit ? (\r\n          <EditWidget\r\n            settings={settings}\r\n            data={widget}\r\n            onEdited={onEdited}\r\n            setIsEdit={setIsEdit}\r\n          />\r\n        ) : (\r\n          <WidgetDiagram widget={widget} width={360} height={300} />\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CardWidget;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport axios from \"axios\";\r\n\r\nclass GlobalParameter extends Component {\r\n      constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n              options: [],\r\n            };\r\n      }\r\n\r\n      async componentDidMount() {\r\n            const req = await axios(`/ajax/models/queries/${this.props.parameter.model}/${this.props.parameter.value}`);\r\n            if(req.status === 200){\r\n                  this.setState({\r\n                        options: req.data.data\r\n                  });\r\n            }\r\n            else{\r\n                  this.setState({\r\n                        options: []\r\n                  });\r\n            }\r\n      }\r\n\r\n      render(){\r\n            return(\r\n               <Form.Control\r\n                 as=\"select\"\r\n                 className=\"global-select\"\r\n                 onChange={e=>{\r\n                    this.props.setGlobalOption(this.props.parameter.value,e.target.value)\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                  }}\r\n                 custom\r\n               >\r\n                 <option value=\"\">{this.props.parameter.label}</option>\r\n                 {this.state.options.map(({ id, name, value, label },index) => (\r\n                   <option key={index} value={value || id}>\r\n                     {label || name}\r\n                   </option>\r\n                 ))}\r\n               </Form.Control>\r\n            );\r\n      }\r\n}\r\n\r\nexport default GlobalParameter;","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport DatePicker, { registerLocale, setDefaultLocale } from \"react-datepicker\";\r\nimport sub from \"date-fns/sub\";\r\nimport axios from \"axios\";\r\nimport ru from \"date-fns/locale/ru\";\r\n\r\nimport ThreeDotsVertical from \"react-bootstrap-icons/dist/icons/three-dots-vertical\";\r\n\r\nimport AddWidget from \"./AddWidget\";\r\nimport CardWidget from \"./CardWidget\";\r\nimport GlobalParameter from \"./fields/GlobalParameter\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nregisterLocale(\"ru\", ru);\r\nsetDefaultLocale(\"ru\");\r\n\r\nconst AltrpDashboards = ({ id, settings, globalParameter }) => {\r\n  const start = new Date().setFullYear(new Date().getFullYear() - 1);\r\n  const end = new Date().getTime();\r\n  const [widgets, setWidgets] = useState([]);\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [startDate, setStartDate] = useState(start);\r\n  const [endDate, setEndDate] = useState(end);\r\n  const isMobile = screen.width <= 480; //Проверка на ширину экрана\r\n  let navPosition = \"jusitfy-content-end\";\r\n  /*\r\n   * Получить настройки дашборда для текущего пользователя\r\n   */\r\n\r\n  const getSettings = async id => {\r\n    try {\r\n      // Отправляем запрос\r\n      const req = await axios(`/ajax/dashboards/${id}/settings`, {\r\n        headers: [{ key: \"Cache-Control\", value: \"no-store\" }]\r\n      });\r\n      // Если успешно\r\n      if (req.status === 200) {\r\n        console.log(\"req.data :>> \", req.data);\r\n        // Получаем настройки\r\n        return JSON.parse(req.data.settings);\r\n      } else {\r\n        return {};\r\n      }\r\n    } catch (error) {\r\n      return {};\r\n    }\r\n  };\r\n\r\n  /*\r\n   * Получаем настройки и виджеты\r\n   */\r\n  const getWidgets = async id => {\r\n    try {\r\n      const req = await axios(`/ajax/dashboards/${id}`, {\r\n        headers: [{ key: \"Cache-Control\", value: \"no-store\" }]\r\n      });\r\n      if (req.status === 200) {\r\n        console.log(\"req.data DASHBOARDS:>> \", req.data);\r\n        return req.data;\r\n      } else {\r\n        return [];\r\n      }\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  /*\r\n   * Получаем данные\r\n   */\r\n  const getData = useCallback(\r\n    async (id, startDate, endDate) => {\r\n      try {\r\n        // Получаем виджеты\r\n        const myWidgets = await getWidgets(id);\r\n        // Если виджетов нет ничего не делаем\r\n        //if (myWidgets.length === 0) return;\r\n        // Если есть, получаем настройки\r\n        const filters = await getSettings(id);\r\n        // Если настройки есть\r\n        if (\r\n          filters !== null &&\r\n          filters.hasOwnProperty(\"startDate\") &&\r\n          filters.hasOwnProperty(\"endDate\")\r\n        ) {\r\n          // Записываем вижеты в состояние с настройками\r\n          setWidgets(\r\n            myWidgets.map(w => {\r\n              return {\r\n                ...w,\r\n                options: {\r\n                  ...JSON.parse(w.options),\r\n                  animated: settings.animated\r\n                },\r\n                filter: { ...JSON.parse(w.filter), ...filters }\r\n              };\r\n            })\r\n          );\r\n          // Записываем даты в состояние\r\n          setStartDate(filters.startDate);\r\n          setEndDate(filters.endDate);\r\n        } else {\r\n          // Возвращаем виджеты с дефолтными настройками\r\n          setWidgets(\r\n            myWidgets.map(w => {\r\n              return {\r\n                ...w,\r\n                options: {\r\n                  ...JSON.parse(w.options),\r\n                  animated: settings.animated\r\n                },\r\n                filter: { ...JSON.parse(w.filter), startDate, endDate }\r\n              };\r\n            })\r\n          );\r\n          // И записываем настройки\r\n          axios.post(\r\n            `/ajax/dashboards/${id}/settings`,\r\n            { settings: { startDate, endDate } },\r\n            {\r\n              headers: [{ key: \"Cache-Control\", value: \"no-store\" }]\r\n            }\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    [id, settings.animated, startDate, endDate]\r\n  );\r\n\r\n  const handleAdd = widget => {\r\n    setWidgets([widget, ...widgets]);\r\n  };\r\n\r\n  const handleRemove = widget => {\r\n    setWidgets(widgets.filter(w => w.id !== widget.id));\r\n    axios.delete(`/ajax/dashboards/${widget.id}`, {\r\n      headers: [{ key: \"Cache-Control\", value: \"no-store\" }]\r\n    });\r\n  };\r\n\r\n  const handleEdit = widget => {\r\n    setWidgets(widgets.map(w => (w.id === widget.id ? widget : w)));\r\n    axios.put(\r\n      `/ajax/dashboards/${widget.id}`,\r\n      {\r\n        ...widget,\r\n        options: JSON.stringify(widget.options),\r\n        filter: JSON.stringify(widget.filter)\r\n      },\r\n      {\r\n        headers: [{ key: \"Cache-Control\", value: \"no-store\" }]\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleChangeStartDate = date => {\r\n    setStartDate(date.getTime());\r\n    axios.post(\r\n      `/ajax/dashboards/${id}/settings`,\r\n      {\r\n        settings: { startDate: date.getTime(), endDate }\r\n      },\r\n      {\r\n        headers: [{ key: \"Cache-Control\", value: \"no-store\" }]\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleChangeEndDate = date => {\r\n    setEndDate(date.getTime());\r\n    axios.post(\r\n      `/ajax/dashboards/${id}/settings`,\r\n      {\r\n        settings: { startDate, endDate: date.getTime() }\r\n      },\r\n      {\r\n        headers: [{ key: \"Cache-Control\", value: \"no-store\" }]\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleWeek = () => {\r\n    const start = sub(endDate, { weeks: 1 }).getTime();\r\n    setStartDate(start);\r\n    axios.post(\r\n      `/ajax/dashboards/${id}/settings`,\r\n      { settings: { startDate: start, endDate } },\r\n      {\r\n        headers: [{ key: \"Cache-Control\", value: \"no-store\" }]\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleMonth = () => {\r\n    const start = sub(endDate, { months: 1 }).getTime();\r\n    setStartDate(start);\r\n    axios.post(\r\n      `/ajax/dashboards/${id}/settings`,\r\n      { settings: { startDate: start, endDate } },\r\n      {\r\n        headers: [{ key: \"Cache-Control\", value: \"no-store\" }]\r\n      }\r\n    );\r\n  };\r\n\r\n  const setGlobalOption = (key, value) => {\r\n    setWidgets(\r\n      widgets.map(widget => ({\r\n        ...widget,\r\n        filter: { ...widget.filter, [key]: value }\r\n      }))\r\n    );\r\n  };\r\n  /**\r\n   * Навигационное меню, показывающееся на экаранах шириной более 480px\r\n   * */\r\n  const navigationMenu = () => (\r\n    <Nav className={navPosition}>\r\n      <Nav.Item className=\"nav-button\" onClick={() => setIsShow(true)}>\r\n        Добавить виджет\r\n      </Nav.Item>\r\n      <Nav.Item className=\"nav-datepickers\">\r\n        <div className=\"nav-datepicker\">\r\n          <DatePicker\r\n            closeOnScroll={true}\r\n            className=\"form-control first\"\r\n            popperClassName=\"datepicker-popper-mobile\"\r\n            popperPlacement=\"bottom-end\"\r\n            selected={startDate}\r\n            selectsStart\r\n            onChange={handleChangeStartDate}\r\n            dateFormat=\"dd.MM.yyyy\"\r\n            showYearDropdown\r\n          />\r\n        </div>\r\n        <div className=\"nav-datepicker\">\r\n          <DatePicker\r\n            closeOnScroll={true}\r\n            className=\"form-control last\"\r\n            popperClassName=\"datepicker-popper-mobile\"\r\n            popperPlacement=\"bottom-end\"\r\n            selected={endDate}\r\n            minDate={startDate}\r\n            selectsEnd\r\n            onChange={handleChangeEndDate}\r\n            dateFormat=\"dd.MM.yyyy\"\r\n            showYearDropdown\r\n          />\r\n        </div>\r\n      </Nav.Item>\r\n      <Nav.Item className=\"nav-button\" onClick={handleWeek}>\r\n        Неделя\r\n      </Nav.Item>\r\n      <Nav.Item className=\"nav-button\" onClick={handleMonth}>\r\n        Месяц\r\n      </Nav.Item>\r\n      {globalParameter &&\r\n        globalParameter.map((param, index) => (\r\n          <Nav.Item key={index}>\r\n            <GlobalParameter\r\n              settings={settings}\r\n              setGlobalOption={setGlobalOption}\r\n              parameter={param}\r\n            />\r\n          </Nav.Item>\r\n        ))}\r\n    </Nav>\r\n  );\r\n\r\n  /**\r\n   * Выпадающее меню, показывающееся на экаранах шириной менее 480px\r\n   * */\r\n  const dropdownMenu = () => (\r\n    <Dropdown>\r\n      <Dropdown.Toggle variant=\"light\">\r\n        <ThreeDotsVertical color=\"#7a7a7b\" />\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setIsShow(true)}>\r\n          Добавить виджет\r\n        </Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item onClick={handleWeek}>Неделя</Dropdown.Item>\r\n        <Dropdown.Item onClick={handleMonth}>Месяц</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.ItemText as=\"div\">\r\n          <DatePicker\r\n            closeOnScroll={true}\r\n            className=\"form-control first\"\r\n            popperClassName=\"datepicker-popper-mobile\"\r\n            popperPlacement=\"bottom-end\"\r\n            selected={startDate}\r\n            selectsStart\r\n            onChange={handleChangeStartDate}\r\n            dateFormat=\"dd.MM.yyyy\"\r\n            showYearDropdown\r\n          />\r\n        </Dropdown.ItemText>\r\n        <Dropdown.ItemText as=\"div\">\r\n          <DatePicker\r\n            closeOnScroll={true}\r\n            className=\"form-control last\"\r\n            popperClassName=\"datepicker-popper-mobile\"\r\n            popperPlacement=\"bottom-end\"\r\n            selected={endDate}\r\n            minDate={startDate}\r\n            selectsEnd\r\n            onChange={handleChangeEndDate}\r\n            dateFormat=\"dd.MM.yyyy\"\r\n            showYearDropdown\r\n          />\r\n        </Dropdown.ItemText>\r\n        <Dropdown.Divider />\r\n        {globalParameter &&\r\n          globalParameter.map((param, index) => (\r\n            <Dropdown.Item\r\n              onClick={e => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n              }}\r\n              key={index}\r\n            >\r\n              <GlobalParameter\r\n                settings={settings}\r\n                setGlobalOption={setGlobalOption}\r\n                parameter={param}\r\n              />\r\n            </Dropdown.Item>\r\n          ))}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n\r\n  useEffect(() => {\r\n    getData(id, startDate, endDate);\r\n  }, [id, startDate, endDate]);\r\n\r\n  return (\r\n    <div className=\"altrp-dashboard\">\r\n      <div className=\"altrp-dashboard__controls\">\r\n        {isMobile ? dropdownMenu() : navigationMenu()}\r\n      </div>\r\n      <div className=\"altrp-dashboard__widgets\">\r\n        {isShow && (\r\n          <AddWidget\r\n            settings={settings}\r\n            id={id}\r\n            setIsShow={setIsShow}\r\n            onAdd={handleAdd}\r\n          />\r\n        )}\r\n        {widgets.map(widget => {\r\n          return (\r\n            <CardWidget\r\n              settings={settings}\r\n              key={widget.id}\r\n              widget={widget}\r\n              onDeleted={handleRemove}\r\n              onEdited={handleEdit}\r\n              isMobile={isMobile}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AltrpDashboards;\r\n"],"sourceRoot":""}