{"version":3,"sources":["webpack:///./node_modules/delaunator/index.js","webpack:///./node_modules/d3-delaunay/src/path.js","webpack:///./node_modules/d3-delaunay/src/polygon.js","webpack:///./node_modules/d3-delaunay/src/voronoi.js","webpack:///./node_modules/d3-delaunay/src/delaunay.js","webpack:///./node_modules/@nivo/voronoi/dist/nivo-voronoi.es.js"],"names":["EPSILON","Math","pow","EDGE_STACK","Uint32Array","Delaunator","points","getX","defaultGetX","getY","defaultGetY","n","length","coords","Float64Array","i","p","constructor","Error","this","maxTriangles","max","_triangles","_halfedges","Int32Array","_hashSize","ceil","sqrt","_hullPrev","_hullNext","_hullTri","_hullHash","fill","_ids","_dists","update","hullPrev","hullNext","hullTri","hullHash","minX","Infinity","minY","maxX","maxY","x","y","cx","cy","i0","i1","i2","minDist","d","dist","i0x","i0y","i1x","i1y","minRadius","r","circumradius","i2x","i2y","quicksort","hull","j","d0","id","subarray","triangles","halfedges","orient","center","ax","ay","bx","by","dx","dy","ex","ey","bl","cl","circumcenter","_cx","_cy","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","xp","yp","k","abs","start","key","q","e","t","_legalize","floor","pseudoAngle","a","ar","b","a0","b0","al","p0","pr","pl","p1","inCircle","hbl","_link","br","c","orientIfSure","px","py","rx","ry","qx","qy","l","fx","fy","bp","cp","ids","dists","left","right","temp","tempDist","swap","arr","tmp","epsilon","Path","_x0","_y0","_x1","_y1","_","moveTo","closePath","lineTo","arc","x0","y0","rect","w","h","value","Polygon","push","slice","Voronoi","delaunay","xmin","ymin","xmax","ymax","_circumcenters","vectors","_init","circumcenters","t1","t2","t3","x1","y1","x2","y2","x3","y3","ab","render","context","buffer","undefined","inedges","ti","tj","xi","yi","xj","yj","_renderSegment","h0","h1","v","_project","renderBounds","renderCell","_clip","cell","cellPolygon","index","polygon","S","c0","_regioncode","c1","_clipSegment","contains","_step","ci","neighbors","cj","loop","ai","li","aj","lj","_cell","e0","V","_clipInfinite","_clipFinite","e1","P","sx0","sy0","sx1","sy1","_edgecode","_edge","vx0","vy0","vxn","vyn","Array","from","unshift","splice","vx","vy","tau","PI","pointX","pointY","jitter","sin","cos","that","array","call","flatArray","flatIterable","_delaunator","_hullIndex","collinear","sort","f","bounds","hypot","hullIndex","voronoi","indexOf","find","dc","dt","renderHull","renderPoints","hullPolygon","renderTriangle","t0","trianglePolygon","getAccessor","directive","datum","useVoronoiMesh","_ref","width","height","debug","points2d","useMemo","_ref$x","_ref$y","map","point","computeMeshPoints","_ref2","computeMesh","_arrayLikeToArray","len","arr2","_slicedToArray","isArray","_arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","err","_iterableToArrayLimit","o","minLen","prototype","toString","name","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","Mesh","nodes","onMouseEnter","onMouseMove","onMouseLeave","onClick","elementRef","useRef","_useState2","useState","currentIndex","setCurrentIndex","_useVoronoiMesh","voronoiPath","getIndexAndNodeFromEvent","useCallback","event","current","_getRelativeCursor2","handleMouseEnter","_getIndexAndNodeFromE2","node","handleMouseMove","_getIndexAndNodeFromE4","handleMouseLeave","previousNode","handleClick","_getIndexAndNodeFromE6","ref","stroke","strokeWidth","opacity","style","cursor","renderVoronoiToCanvas","ctx","save","globalAlpha","beginPath","strokeStyle","lineWidth","restore","renderVoronoiCellToCanvas","fillStyle"],"mappings":"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","file":"812.aded70967673051fde92.bundle.js","sourcesContent":["\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nexport default class Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let minDist = Infinity;\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        minDist = Infinity;\n\n        // find the point closest to the seed\n        for (let i = 0; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                if (this._dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = this._dists[id];\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], !orient(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1])) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1])) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1])) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\n// return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check\nfunction orientIfSure(px, py, rx, ry, qx, qy) {\n    const l = (ry - py) * (qx - px);\n    const r = (rx - px) * (qy - py);\n    return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n}\n\n// a more robust orientation test that's stable in a given triangle (to fix robustness issues)\nfunction orient(rx, ry, qx, qy, px, py) {\n    const sign = orientIfSure(px, py, rx, ry, qx, qy) ||\n    orientIfSure(rx, ry, qx, qy, px, py) ||\n    orientIfSure(qx, qy, px, py, rx, ry);\n    return sign < 0;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n","const epsilon = 1e-6;\n\nexport default class Path {\n  constructor() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error(\"negative radius\");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n","export default class Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n","import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const bl = dx * dx + dy * dy;\n      const cl = ex * ex + ey * ey;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (!ab) {\n        // degenerate case (collinear diagram)\n        x = (x1 + x3) / 2 - 1e8 * ey;\n        y = (y1 + y3) / 2 + 1e8 * ex;\n      }\n      else if (Math.abs(ab) < 1e-8) {\n        // almost equal points (degenerate triangle)\n        x = (x1 + x3) / 2;\n        y = (y1 + y3) / 2;\n      } else {\n        const d = 1 / ab;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] == cj[aj]\n          && ci[ai + 1] == cj[aj + 1]\n          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]\n          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]\n          ) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points);\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    while (true) {\n      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    if (P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k]\n        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])\n          P.splice(j, 2), i -= 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n}\n","import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      this.triangles[1] = hull[1];\n      this.triangles[2] = hull[1];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) inedges[hull[1]] = 0;\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r = 2) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n","import React, { useMemo, Fragment, createElement, useRef, useState, useCallback } from 'react';\nimport { Container, useDimensions, SvgWrapper, ResponsiveWrapper, getRelativeCursor } from '@nivo/core';\nimport { scaleLinear } from 'd3-scale';\nimport { Delaunay } from 'd3-delaunay';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\n\nvar defaultVoronoiProps = {\n  xDomain: [0, 1],\n  yDomain: [0, 1],\n  layers: ['links', 'cells', 'points', 'bounds'],\n  enableLinks: false,\n  linkLineWidth: 1,\n  linkLineColor: '#bbbbbb',\n  enableCells: true,\n  cellLineWidth: 2,\n  cellLineColor: '#000000',\n  enablePoints: true,\n  pointSize: 4,\n  pointColor: '#666666',\n  role: 'img'\n};\n\nvar getAccessor = function getAccessor(directive) {\n  return typeof directive === 'function' ? directive : function (datum) {\n    return datum[directive];\n  };\n};\n\nvar computeMeshPoints = function computeMeshPoints(_ref) {\n  var points = _ref.points,\n      _ref$x = _ref.x,\n      x = _ref$x === void 0 ? 'x' : _ref$x,\n      _ref$y = _ref.y,\n      y = _ref$y === void 0 ? 'y' : _ref$y;\n  var getX = getAccessor(x);\n  var getY = getAccessor(y);\n  return points.map(function (point) {\n    return [getX(point), getY(point)];\n  });\n};\nvar computeMesh = function computeMesh(_ref2) {\n  var points = _ref2.points,\n      width = _ref2.width,\n      height = _ref2.height,\n      debug = _ref2.debug;\n  var delaunay = Delaunay.from(points);\n  var voronoi = debug ? delaunay.voronoi([0, 0, width, height]) : undefined;\n  return {\n    delaunay: delaunay,\n    voronoi: voronoi\n  };\n};\n\nvar useVoronoiMesh = function useVoronoiMesh(_ref) {\n  var points = _ref.points,\n      x = _ref.x,\n      y = _ref.y,\n      width = _ref.width,\n      height = _ref.height,\n      debug = _ref.debug;\n  var points2d = useMemo(function () {\n    return computeMeshPoints({\n      points: points,\n      x: x,\n      y: y\n    });\n  }, [points, x, y]);\n  return useMemo(function () {\n    return computeMesh({\n      points: points2d,\n      width: width,\n      height: height,\n      debug: debug\n    });\n  }, [points2d, width, height, debug]);\n};\nvar useVoronoi = function useVoronoi(_ref2) {\n  var data = _ref2.data,\n      width = _ref2.width,\n      height = _ref2.height,\n      xDomain = _ref2.xDomain,\n      yDomain = _ref2.yDomain;\n  var xScale = useMemo(function () {\n    return scaleLinear().domain(xDomain).range([0, width]);\n  }, [xDomain, width]);\n  var yScale = useMemo(function () {\n    return scaleLinear().domain(yDomain).range([0, height]);\n  }, [yDomain, height]);\n  var points = useMemo(function () {\n    return data.map(function (d) {\n      return {\n        x: xScale(d.x),\n        y: yScale(d.y),\n        data: d\n      };\n    });\n  }, [data, xScale, yScale]);\n  return useMemo(function () {\n    var delaunay = Delaunay.from(points.map(function (p) {\n      return [p.x, p.y];\n    }));\n    var voronoi = delaunay.voronoi([0, 0, width, height]);\n    return {\n      points: points,\n      delaunay: delaunay,\n      voronoi: voronoi\n    };\n  }, [points, width, height]);\n};\nvar useVoronoiLayerContext = function useVoronoiLayerContext(_ref3) {\n  var points = _ref3.points,\n      delaunay = _ref3.delaunay,\n      voronoi = _ref3.voronoi;\n  return useMemo(function () {\n    return {\n      points: points,\n      delaunay: delaunay,\n      voronoi: voronoi\n    };\n  }, [points, delaunay, voronoi]);\n};\n\nvar InnerVoronoi = function InnerVoronoi(_ref) {\n  var data = _ref.data,\n      width = _ref.width,\n      height = _ref.height,\n      partialMargin = _ref.margin,\n      _ref$layers = _ref.layers,\n      layers = _ref$layers === void 0 ? defaultVoronoiProps.layers : _ref$layers,\n      _ref$xDomain = _ref.xDomain,\n      xDomain = _ref$xDomain === void 0 ? defaultVoronoiProps.xDomain : _ref$xDomain,\n      _ref$yDomain = _ref.yDomain,\n      yDomain = _ref$yDomain === void 0 ? defaultVoronoiProps.yDomain : _ref$yDomain,\n      _ref$enableLinks = _ref.enableLinks,\n      enableLinks = _ref$enableLinks === void 0 ? defaultVoronoiProps.enableLinks : _ref$enableLinks,\n      _ref$linkLineWidth = _ref.linkLineWidth,\n      linkLineWidth = _ref$linkLineWidth === void 0 ? defaultVoronoiProps.linkLineWidth : _ref$linkLineWidth,\n      _ref$linkLineColor = _ref.linkLineColor,\n      linkLineColor = _ref$linkLineColor === void 0 ? defaultVoronoiProps.linkLineColor : _ref$linkLineColor,\n      _ref$enableCells = _ref.enableCells,\n      enableCells = _ref$enableCells === void 0 ? defaultVoronoiProps.enableCells : _ref$enableCells,\n      _ref$cellLineWidth = _ref.cellLineWidth,\n      cellLineWidth = _ref$cellLineWidth === void 0 ? defaultVoronoiProps.cellLineWidth : _ref$cellLineWidth,\n      _ref$cellLineColor = _ref.cellLineColor,\n      cellLineColor = _ref$cellLineColor === void 0 ? defaultVoronoiProps.cellLineColor : _ref$cellLineColor,\n      _ref$enablePoints = _ref.enablePoints,\n      enablePoints = _ref$enablePoints === void 0 ? defaultVoronoiProps.enableCells : _ref$enablePoints,\n      _ref$pointSize = _ref.pointSize,\n      pointSize = _ref$pointSize === void 0 ? defaultVoronoiProps.pointSize : _ref$pointSize,\n      _ref$pointColor = _ref.pointColor,\n      pointColor = _ref$pointColor === void 0 ? defaultVoronoiProps.pointColor : _ref$pointColor,\n      _ref$role = _ref.role,\n      role = _ref$role === void 0 ? defaultVoronoiProps.role : _ref$role;\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight,\n      margin = _useDimensions.margin,\n      innerWidth = _useDimensions.innerWidth,\n      innerHeight = _useDimensions.innerHeight;\n\n  var _useVoronoi = useVoronoi({\n    data: data,\n    width: innerWidth,\n    height: innerHeight,\n    xDomain: xDomain,\n    yDomain: yDomain\n  }),\n      points = _useVoronoi.points,\n      delaunay = _useVoronoi.delaunay,\n      voronoi = _useVoronoi.voronoi;\n\n  var layerById = {\n    links: null,\n    cells: null,\n    points: null,\n    bounds: null\n  };\n\n  if (enableLinks && layers.includes('links')) {\n    layerById.links = React.createElement(\"path\", {\n      key: \"links\",\n      stroke: linkLineColor,\n      strokeWidth: linkLineWidth,\n      fill: \"none\",\n      d: delaunay.render()\n    });\n  }\n\n  if (enableCells && layers.includes('cells')) {\n    layerById.cells = React.createElement(\"path\", {\n      key: \"cells\",\n      d: voronoi.render(),\n      fill: \"none\",\n      stroke: cellLineColor,\n      strokeWidth: cellLineWidth\n    });\n  }\n\n  if (enablePoints && layers.includes('points')) {\n    layerById.points = React.createElement(\"path\", {\n      key: \"points\",\n      stroke: \"none\",\n      fill: pointColor,\n      d: delaunay.renderPoints(undefined, pointSize / 2)\n    });\n  }\n\n  if (layers.includes('bounds')) {\n    layerById.bounds = React.createElement(\"path\", {\n      key: \"bounds\",\n      fill: \"none\",\n      stroke: cellLineColor,\n      strokeWidth: cellLineWidth,\n      d: voronoi.renderBounds()\n    });\n  }\n\n  var layerContext = useVoronoiLayerContext({\n    points: points,\n    delaunay: delaunay,\n    voronoi: voronoi\n  });\n  return React.createElement(SvgWrapper, {\n    width: outerWidth,\n    height: outerHeight,\n    margin: margin,\n    role: role\n  }, layers.map(function (layer, i) {\n    if (layerById[layer] !== undefined) {\n      return layerById[layer];\n    }\n\n    if (typeof layer === 'function') {\n      return React.createElement(Fragment, {\n        key: i\n      }, createElement(layer, layerContext));\n    }\n\n    return null;\n  }));\n};\n\nvar Voronoi = function Voronoi(_ref2) {\n  var theme = _ref2.theme,\n      otherProps = _objectWithoutProperties(_ref2, [\"theme\"]);\n\n  return React.createElement(Container, {\n    isInteractive: false,\n    animate: false,\n    theme: theme\n  }, React.createElement(InnerVoronoi, otherProps));\n};\n\nvar ResponsiveVoronoi = function ResponsiveVoronoi(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(Voronoi, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar Mesh = function Mesh(_ref) {\n  var nodes = _ref.nodes,\n      width = _ref.width,\n      height = _ref.height,\n      x = _ref.x,\n      y = _ref.y,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseMove = _ref.onMouseMove,\n      onMouseLeave = _ref.onMouseLeave,\n      onClick = _ref.onClick,\n      debug = _ref.debug;\n  var elementRef = useRef(null);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentIndex = _useState2[0],\n      setCurrentIndex = _useState2[1];\n\n  var _useVoronoiMesh = useVoronoiMesh({\n    points: nodes,\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    debug: debug\n  }),\n      delaunay = _useVoronoiMesh.delaunay,\n      voronoi = _useVoronoiMesh.voronoi;\n\n  var voronoiPath = useMemo(function () {\n    if (debug && voronoi) {\n      return voronoi.render();\n    }\n\n    return undefined;\n  }, [debug, voronoi]);\n  var getIndexAndNodeFromEvent = useCallback(function (event) {\n    if (!elementRef.current) {\n      return [null, null];\n    }\n\n    var _getRelativeCursor = getRelativeCursor(elementRef.current, event),\n        _getRelativeCursor2 = _slicedToArray(_getRelativeCursor, 2),\n        x = _getRelativeCursor2[0],\n        y = _getRelativeCursor2[1];\n\n    var index = delaunay.find(x, y);\n    return [index, index !== undefined ? nodes[index] : null];\n  }, [elementRef, delaunay]);\n  var handleMouseEnter = useCallback(function (event) {\n    var _getIndexAndNodeFromE = getIndexAndNodeFromEvent(event),\n        _getIndexAndNodeFromE2 = _slicedToArray(_getIndexAndNodeFromE, 2),\n        index = _getIndexAndNodeFromE2[0],\n        node = _getIndexAndNodeFromE2[1];\n\n    setCurrentIndex(index);\n\n    if (node) {\n      onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(node, event);\n    }\n  }, [getIndexAndNodeFromEvent, setCurrentIndex, onMouseEnter]);\n  var handleMouseMove = useCallback(function (event) {\n    var _getIndexAndNodeFromE3 = getIndexAndNodeFromEvent(event),\n        _getIndexAndNodeFromE4 = _slicedToArray(_getIndexAndNodeFromE3, 2),\n        index = _getIndexAndNodeFromE4[0],\n        node = _getIndexAndNodeFromE4[1];\n\n    setCurrentIndex(index);\n\n    if (node) {\n      onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove(node, event);\n    }\n  }, [getIndexAndNodeFromEvent, setCurrentIndex, onMouseMove]);\n  var handleMouseLeave = useCallback(function (event) {\n    setCurrentIndex(null);\n\n    if (onMouseLeave) {\n      var previousNode = undefined;\n\n      if (currentIndex !== null) {\n        previousNode = nodes[currentIndex];\n      }\n\n      previousNode && onMouseLeave(previousNode, event);\n    }\n  }, [setCurrentIndex, currentIndex, onMouseLeave, nodes]);\n  var handleClick = useCallback(function (event) {\n    var _getIndexAndNodeFromE5 = getIndexAndNodeFromEvent(event),\n        _getIndexAndNodeFromE6 = _slicedToArray(_getIndexAndNodeFromE5, 2),\n        index = _getIndexAndNodeFromE6[0],\n        node = _getIndexAndNodeFromE6[1];\n\n    setCurrentIndex(index);\n\n    if (node) {\n      onClick === null || onClick === void 0 ? void 0 : onClick(node, event);\n    }\n  }, [getIndexAndNodeFromEvent, setCurrentIndex, onClick]);\n  return React.createElement(\"g\", {\n    ref: elementRef\n  }, debug && voronoi && React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: voronoiPath,\n    stroke: \"red\",\n    strokeWidth: 1,\n    opacity: 0.75\n  }), currentIndex !== null && React.createElement(\"path\", {\n    fill: \"pink\",\n    opacity: 0.35,\n    d: voronoi.renderCell(currentIndex)\n  })), React.createElement(\"rect\", {\n    width: width,\n    height: height,\n    fill: \"red\",\n    opacity: 0,\n    style: {\n      cursor: 'auto'\n    },\n    onMouseEnter: handleMouseEnter,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave,\n    onClick: handleClick\n  }));\n};\n\nvar renderVoronoiToCanvas = function renderVoronoiToCanvas(ctx, voronoi) {\n  ctx.save();\n  ctx.globalAlpha = 0.75;\n  ctx.beginPath();\n  voronoi.render(ctx);\n  ctx.strokeStyle = 'red';\n  ctx.lineWidth = 1;\n  ctx.stroke();\n  ctx.restore();\n};\nvar renderVoronoiCellToCanvas = function renderVoronoiCellToCanvas(ctx, voronoi, index) {\n  ctx.save();\n  ctx.globalAlpha = 0.35;\n  ctx.beginPath();\n  voronoi.renderCell(index, ctx);\n  ctx.fillStyle = 'red';\n  ctx.fill();\n  ctx.restore();\n};\n\nexport { Mesh, ResponsiveVoronoi, Voronoi, computeMesh, computeMeshPoints, defaultVoronoiProps, renderVoronoiCellToCanvas, renderVoronoiToCanvas, useVoronoi, useVoronoiLayerContext, useVoronoiMesh };\n//# sourceMappingURL=nivo-voronoi.es.js.map\n"],"sourceRoot":""}